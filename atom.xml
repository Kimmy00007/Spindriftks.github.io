<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>它夏了夏天</title>
  
  <subtitle>生命中有一种遇见，就让它美如行云流水，然后一生去回味。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.tokyle.com/"/>
  <updated>2017-12-15T02:07:40.969Z</updated>
  <id>http://www.tokyle.com/</id>
  
  <author>
    <name>Kyle</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Jmeter系统监控配置</title>
    <link href="http://www.tokyle.com/2017/12/15/Jmeter%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.tokyle.com/2017/12/15/Jmeter系统监控配置/</id>
    <published>2017-12-15T02:00:54.000Z</published>
    <updated>2017-12-15T02:07:40.969Z</updated>
    
    <content type="html"><![CDATA[<p>Jmeter是测试人员经常会使用的一款压力测试工具，经常会使用来测试接口的性能；Jmeter同时具备监控服务器资源使用情况的功能。</p><p>主要介绍一下怎么使用Jmeter来监控服务器的CPU,内存,IO等信息。</p><a id="more"></a><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>使用Jmeter监控系统性能，实际上是插件的使用，可以认为是在Jmeter中装载了一个小型监控系统的客户端，同时在需要监控的系统内装载服务端，在允许Jmeter时，同时打开监控服务端，进行系统资源的监控。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">客户端：<span class="keyword">JMeterPlugins-Standard</span></span><br><span class="line"><span class="keyword">服务端：ServerAgent</span></span><br></pre></td></tr></table></figure><p>下载地址：</p><blockquote><p><a href="http://jmeter-plugins.org/downloads/all/" target="_blank" rel="noopener">官网下载</a></p></blockquote><p>百度云链接：</p><blockquote><p><a href="https://pan.baidu.com/s/1eR5iOue" target="_blank" rel="noopener">JMeterPlugins-Standard-1.4.0</a><br><a href="https://pan.baidu.com/s/1nvKJQad" target="_blank" rel="noopener">ServerAgent-2.2.1</a></p></blockquote><h1 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h1><p>将 JMeterPlugins-Standard-1.4.0.zip 中 lib\ext 目录下的 JmeterPlugins-Standard.jar 文件都放到apache-jmeter-2.13\lib\ext目录中。<br>将 ServerAgent-2.2.1.zip 解压后放到要监控的服务器中待使用。</p><h1 id="监控设置"><a href="#监控设置" class="headerlink" title="监控设置"></a>监控设置</h1><ol><li>启动Jmeter后，右击<code>线程组</code>，选择<code>添加- 监听器- jp@gc-PerfMon Metrics Collector</code></li><li>打开<code>jp@gc - PerfMon Metrics Collector</code>，点击<code>Add Row</code>选择相应监控对象（服务器IP和监控内容），端口默认<code>4444</code>即可。</li></ol><p><img src="/images/jmeter-setting.jpg" alt=""></p><h1 id="开启监控"><a href="#开启监控" class="headerlink" title="开启监控"></a>开启监控</h1><ol><li>设置<code>永远循环</code>，否则监控会运行一次就断开，设置方式：<code>线程组-循环次数（选择永远）</code></li><li>服务端运行<code>ServerAgent</code>，Linux系统运行shell脚本，windows系统执行bat脚本（系统需事先完成jdk配置）</li></ol><p>成功完成系统资源监控</p><p><img src="/images/jmeter-cpu.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Jmeter是测试人员经常会使用的一款压力测试工具，经常会使用来测试接口的性能；Jmeter同时具备监控服务器资源使用情况的功能。&lt;/p&gt;
&lt;p&gt;主要介绍一下怎么使用Jmeter来监控服务器的CPU,内存,IO等信息。&lt;/p&gt;
    
    </summary>
    
      <category term="性能测试" scheme="http://www.tokyle.com/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="Jmeter" scheme="http://www.tokyle.com/tags/Jmeter/"/>
    
      <category term="性能" scheme="http://www.tokyle.com/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客中加入图片</title>
    <link href="http://www.tokyle.com/2017/12/14/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8A%A0%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <id>http://www.tokyle.com/2017/12/14/Hexo博客中加入图片/</id>
    <published>2017-12-14T13:44:10.000Z</published>
    <updated>2017-12-14T14:26:03.424Z</updated>
    
    <content type="html"><![CDATA[<p>好不容易搭好了hexo，插个图片各种错</p><a id="more"></a><h1 id="本地引用"><a href="#本地引用" class="headerlink" title="本地引用"></a>本地引用</h1><h2 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h2><p>markdown语法实现</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span><span class="regexp">/images/im</span>age.jpg</span><br><span class="line">   ![](<span class="regexp">/images/im</span>age.jpg)</span><br></pre></td></tr></table></figure><p>这样，图片既可以在首页内容访问，也可以在文章正文中使用</p><h2 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h2><p>首先在/blog/_config.yml 中设置 post_asset_folder: true ，这样在 hexo new “文章” 时会生成与文章标题一样的目录，将文章中需要使用的图片存在该目录下（source//_posts/文章）</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">_posts</span>/post_name/<span class="built_in">image</span>.jpg</span><br><span class="line">   ![](<span class="built_in">image</span>.jpg)</span><br></pre></td></tr></table></figure><h1 id="CDN引用"><a href="#CDN引用" class="headerlink" title="CDN引用"></a>CDN引用</h1><p>现在大多数做法是使用图床，自己也看过七牛云之类的做为图床，但是，七牛云个流氓，还要手持身份证认证，所以暂时放弃。（该方法就是在图床中生成链接，直接引链接即可）</p><blockquote><p><a href="https://coding.net/help/doc/project/markdown.html" target="_blank" rel="noopener">Markdown 语法介绍</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好不容易搭好了hexo，插个图片各种错&lt;/p&gt;
    
    </summary>
    
      <category term="skill" scheme="http://www.tokyle.com/categories/skill/"/>
    
    
      <category term="Hexo" scheme="http://www.tokyle.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>python编码</title>
    <link href="http://www.tokyle.com/2017/12/13/python%E7%BC%96%E7%A0%81/"/>
    <id>http://www.tokyle.com/2017/12/13/python编码/</id>
    <published>2017-12-13T08:44:58.000Z</published>
    <updated>2017-12-14T14:21:25.476Z</updated>
    
    <content type="html"><![CDATA[<p>python日常踩坑系列（二）</p><a id="more"></a><p>日常编写python脚本，鉴于java各种坑编码经历，首先就会把pycharm编码设置成utf-8，但是不知道什么鬼，设置完成之后，编译还是会报编码gbk的错误</p><p><img src="/images/utf8.jpg" alt=""></p><p>问题如下：</p><p>“UnicodeDecodeError: ‘gbk’ codec can’t decode byte 0x80 in position 34: illegal multibyte sequence”</p><p>解决方案：</p><p>1，设置所有文件编码默认为utf-8（文件最前面指定）</p><p><img src="/images/pycharm_setting.jpg" alt=""></p><p>2，处理数据时进行转码：</p><p>with open(“population.json”,encoding=’UTF-8’) as data:</p><p>–完 (#^.^#)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python日常踩坑系列（二）&lt;/p&gt;
    
    </summary>
    
      <category term="coding" scheme="http://www.tokyle.com/categories/coding/"/>
    
      <category term="python" scheme="http://www.tokyle.com/categories/coding/python/"/>
    
    
      <category term="python" scheme="http://www.tokyle.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Django获取不到特定链接</title>
    <link href="http://www.tokyle.com/2017/12/13/Django%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0%E7%89%B9%E5%AE%9A%E9%93%BE%E6%8E%A5/"/>
    <id>http://www.tokyle.com/2017/12/13/Django获取不到特定链接/</id>
    <published>2017-12-13T08:01:41.000Z</published>
    <updated>2017-12-14T14:19:39.143Z</updated>
    
    <content type="html"><![CDATA[<p>python日常踩坑系列</p><a id="more"></a><p><img src="/images/new_python.jpg" alt=""></p><p>按照教程方式打开本地特定链接报错<br>源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># Home page.</span></span><br><span class="line">    url(<span class="string">r'^$'</span>, views.index, name=<span class="string">'index'</span>),</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Show all topics.</span></span><br><span class="line">    url(<span class="string">r'^topics/$'</span>, views.topics, name=<span class="string">'topics'</span>),</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Detail page for a single topic.</span></span><br><span class="line">    url(<span class="string">r'^topics/(?P&lt;topic_id&gt;\d+)/$'</span>, views.topic, name=<span class="string">'topic'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>打开<a href="http://127.0.0.1:8000/topics/1/报错：" target="_blank" rel="noopener">http://127.0.0.1:8000/topics/1/报错：</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> Using the URLconf defined in learning_log.urls, Django tried these URL patterns, in <span class="keyword">this</span> order:</span><br><span class="line">  <span class="number">1</span>. admin/</span><br><span class="line">  <span class="number">2</span>. [name=<span class="string">'index'</span>]</span><br><span class="line">  <span class="number">3</span>. topics [name=<span class="string">'topics'</span>]</span><br><span class="line">  <span class="number">4</span>. topics/?P&lt;topic_id&gt;\d+/ [name=<span class="string">'topic'</span>]</span><br><span class="line">The current path, topics/<span class="number">1</span>/, didn<span class="string">'t match any of these.</span></span><br></pre></td></tr></table></figure><h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h2><p>Django2.0有更新<br>对于django.urls.path()函数，允许有简单的表示方法：</p><p><em>url(r’^articles/(?P<year>[0-9]{4})/$’, views.year_archive),</year></em></p><p>可以写成：</p><p><em>path(‘articles/<int:year>/‘, views.year_archive),</int:year></em></p><p>所以代码可更改为：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">'lerning_logs'</span></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment">#主页</span></span><br><span class="line">    path(<span class="string">''</span>, views.index, name=<span class="string">'index'</span>),</span><br><span class="line">    <span class="comment">#显示所有主题</span></span><br><span class="line">    path(<span class="string">'topics'</span>, views.topics, name=<span class="string">'topics'</span>),</span><br><span class="line">    <span class="comment">#特定主题的详细页面</span></span><br><span class="line">    <span class="comment">#path('topics/?P&lt;topic_id&gt;\d+/', views.topic, name='topic'),</span></span><br><span class="line">    path(<span class="string">'topics/&lt;topic_id&gt;/'</span>, views.topic, name=<span class="string">'topic'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python日常踩坑系列&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://www.tokyle.com/tags/python/"/>
    
      <category term="Django" scheme="http://www.tokyle.com/tags/Django/"/>
    
  </entry>
  
</feed>
