<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>它夏了夏天</title>
  
  <subtitle>生命中有一种遇见，就让它美如行云流水，然后一生去回味。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tokyle.com/"/>
  <updated>2019-04-12T09:22:15.881Z</updated>
  <id>http://tokyle.com/</id>
  
  <author>
    <name>Kyle</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>adb进阶四 —— dumpsys</title>
    <link href="http://tokyle.com/2019/04/12/adb%E8%BF%9B%E9%98%B6%E5%9B%9B-%E2%80%94%E2%80%94-dumpsys/"/>
    <id>http://tokyle.com/2019/04/12/adb进阶四-——-dumpsys/</id>
    <published>2019-04-12T09:21:17.000Z</published>
    <updated>2019-04-12T09:22:15.881Z</updated>
    
    <content type="html"><![CDATA[<p>adb进阶四 —— dumpsys</p><a id="more"></a><h3 id="dumpsys简介"><a href="#dumpsys简介" class="headerlink" title="dumpsys简介"></a>dumpsys简介</h3><p>Dumpsys用于系统诊断，并提供系统服务状态信息,命令格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys [system serbices]</span><br></pre></td></tr></table></figure></p><h4 id="系统服务查询"><a href="#系统服务查询" class="headerlink" title="系统服务查询"></a>系统服务查询</h4><p>直接运行<code>adb shell dumpsys</code>会输出很多很多信息，可以指定需要检查的服务</p><p>查看系统服务、：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb shell service list</span><br><span class="line">或者</span><br><span class="line">adb shell dumpsys -l</span><br></pre></td></tr></table></figure></p><p>可以看见<code>cpuinfo</code>，<code>meminfo</code>等服务，因此指定检查的服务示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;lamb&#125; adb shell dumpsys cpuinfo</span><br><span class="line">Load: 6.04 / 6.17 / 6.21</span><br><span class="line">CPU usage from 364288ms to 62061ms ago (2019-04-12 16:20:56.605 to 2019-04-12 16:25:58.831):</span><br><span class="line">  99% 28771/com.tencent.tmgp.supercell.clashofclans: 99% user + 0% kernel / faults: 128 minor</span><br><span class="line">  2.4% 1641/system_server: 1.4% user + 0.9% kernel / faults: 5586 minor 1 major</span><br><span class="line">  1.3% 582/android.hardware.sensors@1.0-service: 0.5% user + 0.7% kernel</span><br><span class="line">  0.9% 441/ueventd: 0.6% user + 0.3% kernel</span><br><span class="line">  0.6% 4950/kworker/u16:2: 0% user + 0.6% kernel</span><br><span class="line">  0.5% 5727/kworker/u16:0: 0% user + 0.5% kernel</span><br><span class="line">  0.5% 5679/kworker/u16:5: 0% user + 0.5% kernel</span><br><span class="line">  </span><br><span class="line">... ...</span><br></pre></td></tr></table></figure></p><p>命令行参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-h：对于大多数的服务，可以添加-h看到文本的帮助</span><br><span class="line">-c：对于一些服务，可以添加-c查看数据会更友好</span><br></pre></td></tr></table></figure></p><p>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;lamb&#125; adb shell dumpsys usb -h</span><br><span class="line">Dump current USB state or issue command:</span><br><span class="line">  ports</span><br><span class="line">  set-port-roles &lt;id&gt; &lt;source|sink|no-power&gt; &lt;host|device|no-data&gt;</span><br><span class="line">  add-port &lt;id&gt; &lt;ufp|dfp|dual|none&gt;</span><br><span class="line">  connect-port &lt;id&gt; &lt;ufp|dfp&gt;&lt;?&gt; &lt;source|sink&gt;&lt;?&gt; &lt;host|device&gt;&lt;?&gt;</span><br><span class="line">    (add ? suffix if mode, power role, or data role can be changed)</span><br><span class="line">  disconnect-port &lt;id&gt;</span><br><span class="line">  remove-port &lt;id&gt;</span><br><span class="line">  reset</span><br></pre></td></tr></table></figure></p><h3 id="包服务查询"><a href="#包服务查询" class="headerlink" title="包服务查询"></a>包服务查询</h3><p>格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys package [-h] [-f] [—checkin] [cmd]…</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-h</td><td>打印帮助信息</td></tr><tr><td>-f</td><td>打印intent filter的信息</td></tr><tr><td>–checkin</td><td>打印出已经登记的库、系统功能、安装包</td></tr><tr><td>cmd</td><td>子命令（可以在-h帮助文档中查看有哪些子命令）</td></tr></tbody></table><table><thead><tr><th>cmd子命令</th><th>说明</th></tr></thead><tbody><tr><td>prov[iders]</td><td>获取content providers</td></tr><tr><td>p[ackages]</td><td>获取安装包基本信息</td></tr><tr><td>s[hared-user]</td><td>获取共享用户ID的应用</td></tr><tr><td>m[essages]</td><td>打印运行时收集的信息</td></tr><tr><td>v[erifiers]</td><td>打印包校验信息</td></tr><tr><td>version</td><td>打印数据库版本信息</td></tr><tr><td>write</td><td>写当前位置</td></tr><tr><td>package.name</td><td>输出给定包的信息</td></tr><tr><td>installs</td><td>安装会话的详细信息</td></tr><tr><td>l[ibraries]</td><td>列出已知的共享库</td></tr><tr><td>f[ibraries]</td><td>列出手机的功能</td></tr><tr><td>k[eysets]</td><td>列出各个包的Signing KeySets</td></tr><tr><td>r[esolvers]</td><td>获取intent filter</td></tr><tr><td>perm[issions]</td><td>获取权限</td></tr><tr><td>pref[erred]</td><td>打印包首选项</td></tr><tr><td>preferred-xml [—full]</td><td>打印包首选项，xml格式打印</td></tr></tbody></table><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;lamb&#125; adb shell dumpsys package com.kuaikan.comic </span><br><span class="line">Activity Resolver Table: </span><br><span class="line">  Schemes: </span><br><span class="line">      qwallet1104081998:  </span><br><span class="line">        2d32642 com.kuaikan.comic/com.kuaikan.pay.kkb.activity.RechargeCenterActivity filter ba2036f</span><br><span class="line">          Action: &quot;android.intent.action.VIEW&quot;</span><br><span class="line">          Category: &quot;android.intent.category.BROWSABLE&quot; </span><br><span class="line">          Category: &quot;android.intent.category.DEFAULT&quot; </span><br><span class="line">          Scheme: &quot;qwallet1104081998&quot; </span><br><span class="line">      commonqwallet20181030: </span><br><span class="line">        7efe8c0 com.kuaikan.comic/com.kuaikan.pay.cashPay.TranslucentPayActivity filter b5a1d49</span><br><span class="line">          Action: &quot;android.intent.action.VIEW&quot;   </span><br><span class="line">          Category: &quot;android.intent.category.BROWSABLE&quot;  </span><br><span class="line">          Category: &quot;android.intent.category.DEFAULT&quot; </span><br><span class="line">          Scheme: &quot;commonqwallet20181030&quot;   </span><br><span class="line">          Scheme: &quot;commonalipay20181030&quot;   </span><br><span class="line">          Scheme: &quot;commonwx20181030&quot;</span><br><span class="line">          Scheme: &quot;commonpay20181105&quot;</span><br><span class="line">      comicwx201804028:</span><br></pre></td></tr></table></figure></p><h3 id="activity信息查询"><a href="#activity信息查询" class="headerlink" title="activity信息查询"></a>activity信息查询</h3><p>格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys activity [-a] [-c]…</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-a</td><td>包括所有可用的服务器状态</td></tr><tr><td>-c</td><td>包括客户端状态</td></tr><tr><td>-p</td><td>限制输出为给定的包，例如： adb shell dumpsys activity -p com.android.browser</td></tr><tr><td>-h</td><td>打印帮助信息</td></tr><tr><td>cmd</td><td>子命令</td></tr></tbody></table><table><thead><tr><th>cmd子命令</th><th>说明</th></tr></thead><tbody><tr><td>a[ctivities]</td><td>activity堆栈状态</td></tr><tr><td>r[recents]</td><td>最近activity的状态</td></tr><tr><td>b[rodacasts] [package_name] [histpry [-s]]</td><td>广播状态</td></tr><tr><td>i[ntents] [package_name]</td><td>挂起的intent状态</td></tr><tr><td>p[rocesses] [package_name]</td><td>进程状态</td></tr><tr><td>o[om]</td><td>oom管理</td></tr><tr><td>perm[issions]</td><td>url权限授权状态</td></tr><tr><td>prov[iders] [comp_spec…]</td><td>content provider状态</td></tr><tr><td>provider [comp_spec]</td><td>provider客户端状态</td></tr><tr><td>s[ervices] [comp_spec…]</td><td>服务状态</td></tr><tr><td>as[sociations]</td><td>跟踪应用程序的关联</td></tr><tr><td>service [comp_spec]</td><td>服务客户端状态</td></tr><tr><td>package [package_name]</td><td>给的包的所有状态</td></tr><tr><td>all</td><td>转储所有的activityes</td></tr><tr><td>top</td><td>转储栈顶的activity</td></tr><tr><td>write</td><td>写入所有挂起状态存储</td></tr><tr><td>track-associations</td><td>允许会话跟踪</td></tr><tr><td>untrack-associations</td><td>禁用和明确会话跟踪，命令参数可能也是一个comp_spec 转储的activity</td></tr></tbody></table><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 获取当前页面UI信息</span><br><span class="line">adb shell dumpsys activity top</span><br><span class="line"></span><br><span class="line"># 获取当前页面的Activity</span><br><span class="line">adb shell dumpsys activity top | findstr ACTIVITY</span><br></pre></td></tr></table></figure></p><h3 id="网络信息查询"><a href="#网络信息查询" class="headerlink" title="网络信息查询"></a>网络信息查询</h3><table><thead><tr><th>子命令</th><th>说明</th><th>命令格式</th></tr></thead><tbody><tr><td>connectivity</td><td>网络连接</td><td>adb shell dumpsys connectivity</td></tr><tr><td>netpolicy</td><td>网络策略</td><td>adb shell dumpsys netpolicy</td></tr><tr><td>netstats</td><td>网络状态</td><td>adb shell dumpsys netstats</td></tr><tr><td>network_management</td><td>网络管理</td><td>adb shell dumpsys network_management</td></tr></tbody></table><h3 id="其他常用服务信息查询"><a href="#其他常用服务信息查询" class="headerlink" title="其他常用服务信息查询"></a>其他常用服务信息查询</h3><table><thead><tr><th>子命令</th><th>说明</th><th>命令格式</th></tr></thead><tbody><tr><td>meminfo</td><td>内存</td><td>adb shell dumpsys meminfo</td></tr><tr><td>cpuinfo</td><td>CPU</td><td>adb shell dumpsys cpuinfo</td></tr><tr><td>gfxinfo</td><td>帧率</td><td>adb shell dumpsys gfxinfo</td></tr><tr><td>display</td><td>显示</td><td>adb shell dumpsys display</td></tr><tr><td>power</td><td>电源</td><td>adb shell dumpsys power</td></tr><tr><td>batterystats</td><td>电池状态</td><td>adb shell dumpsys batterystats</td></tr><tr><td>battery</td><td>电池</td><td>adb shell dumpsys battery</td></tr><tr><td>alarm</td><td>闹钟</td><td>adb shell dumpsys alarm</td></tr><tr><td>location</td><td>位置</td><td>adb shell dumpsys location</td></tr><tr><td>wifi</td><td>wifi</td><td>adb shell dumpsys wifi</td></tr><tr><td>power</td><td>电源</td><td>adb shell dumpsys power</td></tr><tr><td>notification</td><td>通知</td><td>adb shell dumpsys notification</td></tr></tbody></table><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 电池信息</span><br><span class="line">&#123;lamb&#125; adb shell dumpsys battery</span><br><span class="line">Current Battery Service state:</span><br><span class="line">  AC powered: false</span><br><span class="line">  USB powered: true</span><br><span class="line">  Wireless powered: false</span><br><span class="line">  Max charging current: 500000</span><br><span class="line">  Max charging voltage: 5000000</span><br><span class="line">  Charge counter: 3321815</span><br><span class="line">  status: 5 #电池状态</span><br><span class="line">  health: 2 </span><br><span class="line">  present: true</span><br><span class="line">  level: 100 #电量</span><br><span class="line">  scale: 100</span><br><span class="line">  voltage: 4369</span><br><span class="line">  temperature: 310  #电池温度</span><br><span class="line">  technology: Li-poly</span><br></pre></td></tr></table></figure></p><p>完~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;adb进阶四 —— dumpsys&lt;/p&gt;
    
    </summary>
    
      <category term="计算机基础" scheme="http://tokyle.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Android" scheme="http://tokyle.com/tags/Android/"/>
    
      <category term="adb" scheme="http://tokyle.com/tags/adb/"/>
    
  </entry>
  
  <entry>
    <title>adb进阶三 —— Monkey (2)</title>
    <link href="http://tokyle.com/2019/04/11/adb%E8%BF%9B%E9%98%B6%E4%B8%89-%E2%80%94%E2%80%94-Monkey-2/"/>
    <id>http://tokyle.com/2019/04/11/adb进阶三-——-Monkey-2/</id>
    <published>2019-04-11T08:33:46.000Z</published>
    <updated>2019-04-11T08:35:03.286Z</updated>
    
    <content type="html"><![CDATA[<p>adb进阶三 —— Monkey (2)</p><a id="more"></a><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>因为原生的monkey，是一系列的随机事件，很多时候事满足不了我们自定义场景需求的，比如只想验证APP的登录的稳定性，使用原生的<code>adb shell monkey</code>貌似做不到，这边就需要自定义脚本来实现</p><h3 id="Monkey-API"><a href="#Monkey-API" class="headerlink" title="Monkey API"></a>Monkey API</h3><table><thead><tr><th>API</th><th>描述</th></tr></thead><tbody><tr><td>LaunchActivity(pkg_name, cl_name)</td><td>启动应用的Activity。参数：包名和启动的Activity</td></tr><tr><td>Tap(x, y, tapDuration)</td><td>模拟一次手指单击事件。参数：x,y为控件坐标，tapDuration为点击的持续时间，此参数可省略</td></tr><tr><td>DispatchPress(keycode)</td><td>按键。参数： keycode</td></tr><tr><td>RotateScreen(rotationDegree, persist)</td><td>旋转屏幕。 参数：rotationDegree为旋转角度， e.g. 1代表90度；persist表示旋转之后是否固定，0表示旋转后恢复，非0则表示固定不变</td></tr><tr><td>DispatchFlip(true/false)</td><td>打开或者关闭软键盘</td></tr><tr><td>LongPress()</td><td>长按</td></tr><tr><td>PressAndHold(x, y, pressDuration)</td><td>模拟长按事件</td></tr><tr><td>DispatchString(input)</td><td>输入字符串</td></tr><tr><td>Drag(xStart, yStart, xEnd, yEnd, stepCount)</td><td>拖拽</td></tr><tr><td>PinchZoom(x1Start, y1Start, x1End, y1End, x2Start, y2Start, x2End, y2End, stepCount)</td><td>缩放</td></tr><tr><td>UserWait(sleepTime)</td><td>休眠</td></tr><tr><td>DeviceWakeUp()</td><td>唤醒屏幕</td></tr><tr><td>PowerLog(power_log_type, test_case_status)</td><td>模拟电池电量信息</td></tr><tr><td>WriteLog()</td><td>将电池信息写入sd卡</td></tr><tr><td>RunCmd(cmd)</td><td>运行shell命令</td></tr><tr><td>DispatchPointer(long downTime,  long eventTime, int action, loat x, float y, float pressure, float size, int metaState,  float xPrecision, float yPrecision, int device, int edgeFlags)</td><td>向指定位置，发送单个手势，点击事件</td></tr><tr><td>DispatchKey(long downTime, long eventTime, int action, int code, int repeat, int metaState, int device, int scancode)</td><td>发送键值</td></tr><tr><td>LaunchInstrumentation(test_name,runner_name)</td><td>运行一个instrumentation测试用例</td></tr><tr><td>DispatchTrackball(long downTime, long eventTime, int action, float x, float y, float pressure, float size, int metaState, float xPrecision, float yPrecision, int device, int edgeFlags)</td><td>模拟发送轨迹球事件</td></tr><tr><td>ProfileWait</td><td>等待5秒</td></tr><tr><td>StartCaptureFramerate()</td><td>获取帧率</td></tr><tr><td>EndCaptureFramerate(input)</td><td>结束获取帧率</td></tr></tbody></table><p>以<strong>点击事件</strong>为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DispatchPointer(long downTime,  long eventTime, int action, loat x, float y, float pressure, float size, int metaState,  float xPrecision, float yPrecision, int device, int edgeFlags)</span><br></pre></td></tr></table></figure></p><p>参数很多，只需要关注<code>action</code>，<code>x</code>，<code>y</code>，对于参数action值为0代表按下（KeyDown），1代表弹起（KeyUp）。如果使用这个方法实现点击事件，这个方法就应该成对出现，先0再1。</p><ul><li>long downTime：键最初被按下时间</li><li>long eventTime：事件发生时间</li><li>int action：动作ACTION_DOWN=0,ACTION_UP=1,ACTION_MULTIPLE=2</li><li>float x：x坐标</li><li>float y：y坐标</li><li>float pressure：当前事件的压力，值为0～1</li><li>float size：触摸的近似值，范围为0～1</li><li>int metaState：当前按下的meta键的标识</li><li>float xPrecision：x坐标精确值</li><li>float yPrecision：y坐标精确值</li><li>int device：事件来源，范围0～x，0表示不来自物理设备</li><li>int edgeFlags：坐标是否超出了屏幕范围</li></ul><blockquote><p><a href="http://tokyle.com/2018/01/17/appium%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/">Android键盘事件，keycode</a></p></blockquote><h3 id="Monkey脚本"><a href="#Monkey脚本" class="headerlink" title="Monkey脚本"></a>Monkey脚本</h3><p>和自动化测试时候差不多实现，<strong>打开首页-点击用户名-输入用户名-点击密码-输入密码-点击登录</strong>，相应的，也就是只需要获取用户名和密码以及确定按键的坐标，传到<code>DispatchPointer</code>即可，获取坐标可以使用<code>uiautomatorviewer.bat</code>挺简单的，直接上脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># 头部</span><br><span class="line">type= user</span><br><span class="line">count= 1</span><br><span class="line">speed= 1.0</span><br><span class="line">UserWait(200)</span><br><span class="line">start data &gt;&gt;</span><br><span class="line"></span><br><span class="line"># 打开app登录页</span><br><span class="line">LaunchActivity(com.android.testapp,com.android.testapp.MainActivity)</span><br><span class="line"># 休眠</span><br><span class="line">UserWait(10000)</span><br><span class="line"># 点击用户名文本框（460,751）为坐标</span><br><span class="line">DispatchPointer(10,10,0,460,751,1,1,-1,1,1,0,0)</span><br><span class="line">DispatchPointer(10,10,1,460,751,1,1,-1,1,1,0,0)</span><br><span class="line">UserWait(5000)</span><br><span class="line"># 输入用户名</span><br><span class="line">DispatchString(monkeytest)</span><br><span class="line">DispatchFlip(false)</span><br><span class="line">UserWait(2000)</span><br><span class="line"># 点击密码文本框（490,867）为坐标</span><br><span class="line">DispatchPointer(10,10,0,490,867,1,1,-1,1,1,0,0)</span><br><span class="line">DispatchPointer(10,10,1,490,867,1,1,-1,1,1,0,0)</span><br><span class="line">UserWait(5000)</span><br><span class="line"># 输入密码</span><br><span class="line">DispatchString(123456)</span><br><span class="line">DispatchFlip(false)</span><br><span class="line">UserWait(2000)</span><br><span class="line"># 点击确定</span><br><span class="line">Tap(541,1096)</span><br></pre></td></tr></table></figure></p><p>保存为monkey_test.txt文件，上传到android设备：<code>adb push monkey_test.txt /mnt/sdcard/</code><br>执行脚本：<code>adb shell monkey -f /mnt/sdcard/monkey_test.txt -v 1</code></p><p>完~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;adb进阶三 —— Monkey (2)&lt;/p&gt;
    
    </summary>
    
      <category term="计算机基础" scheme="http://tokyle.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Android" scheme="http://tokyle.com/tags/Android/"/>
    
      <category term="adb" scheme="http://tokyle.com/tags/adb/"/>
    
  </entry>
  
  <entry>
    <title>adb进阶二 —— Monkey (1)</title>
    <link href="http://tokyle.com/2019/04/11/adb%E8%BF%9B%E9%98%B6%E4%B8%80-%E2%80%94%E2%80%94-Monkey-1/"/>
    <id>http://tokyle.com/2019/04/11/adb进阶一-——-Monkey-1/</id>
    <published>2019-04-11T06:12:22.000Z</published>
    <updated>2019-04-11T06:23:44.660Z</updated>
    
    <content type="html"><![CDATA[<p>adb进阶二 —— Monkey (1)</p><a id="more"></a><h3 id="Monkey简介"><a href="#Monkey简介" class="headerlink" title="Monkey简介"></a>Monkey简介</h3><p>Monkey是一个可运行在Android环境中的命令行工具，使用monkey尅发送一些伪随机事件（pseudo-random）的用户事件流，例如点击，触摸，手势等。通过monkey，我们可以注入随机事件流或者自定义特定事件来对应用进行健壮性、稳定性测试。</p><h4 id="Monkey用途"><a href="#Monkey用途" class="headerlink" title="Monkey用途"></a>Monkey用途</h4><p>通过使用monkey来对应用进行压力测试。</p><p>Monkey包含一系列选项，主要包括以下方面：</p><ol><li>基础配置项，比如设置注入事件的数量<code>adb shell monkey 500</code></li><li>备选限制，比如限制测试单个包<code>adb shell monkey -p com.android.camera  5000</code></li><li>事件类型和频率</li><li>调试选项</li></ol><h4 id="Monkey程序简介"><a href="#Monkey程序简介" class="headerlink" title="Monkey程序简介"></a>Monkey程序简介</h4><p>monkey在Android文件系统存放路径为：<code>/system/framework/monkey.jar</code><br>启动monkey.jar的shell脚本文件在Android文件系统存放路径为<code>system/bin/monkey</code><br>导到本地:<code>adb pull /system/bin/monkey E:\app_workstation\Android_files\MONKEY</code><br>可以看到monkey的shell内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Script to start &quot;monkey&quot; on the device, which has a very rudimentary</span><br><span class="line"># shell.</span><br><span class="line">#</span><br><span class="line">base=/system</span><br><span class="line">export CLASSPATH=$base/framework/monkey.jar</span><br><span class="line">trap &quot;&quot; HUP</span><br><span class="line">for a in &quot;$@&quot;; do</span><br><span class="line">    echo &quot;  bash arg:&quot; $a</span><br><span class="line">done</span><br><span class="line">exec app_process $base/bin com.android.commands.monkey.Monkey &quot;$@&quot;</span><br></pre></td></tr></table></figure></p><p>可以看到调用的是<code>com.android.commands.monkey.Monkey</code>包</p><h3 id="Monkey命令"><a href="#Monkey命令" class="headerlink" title="Monkey命令"></a>Monkey命令</h3><h4 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h4><p>基础语法：<code>adb shell monkey [option] &lt;event-count&gt;</code><br>当不指定任何选项时，monkey将默认静态模式，并且会向目标设备的所有包发送随机事件</p><p>基本使用：<code>adb shell monkey</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;lamb&#125; adb shell monkey                                                 </span><br><span class="line">args: []                                                                </span><br><span class="line">usage: monkey [-p ALLOWED_PACKAGE [-p ALLOWED_PACKAGE] ...]             </span><br><span class="line">              [-c MAIN_CATEGORY [-c MAIN_CATEGORY] ...]                 </span><br><span class="line">              [--ignore-crashes] [--ignore-timeouts]                    </span><br><span class="line">              [--ignore-security-exceptions]                            </span><br><span class="line">              [--monitor-native-crashes] [--ignore-native-crashes]      </span><br><span class="line">              [--kill-process-after-error] [--hprof]                    </span><br><span class="line">              [--match-description TEXT]                                </span><br><span class="line">              [--pct-touch PERCENT] [--pct-motion PERCENT]              </span><br><span class="line">              [--pct-trackball PERCENT] [--pct-syskeys PERCENT]         </span><br><span class="line">              [--pct-nav PERCENT] [--pct-majornav PERCENT]              </span><br><span class="line">              [--pct-appswitch PERCENT] [--pct-flip PERCENT]            </span><br><span class="line">              [--pct-anyevent PERCENT] [--pct-pinchzoom PERCENT]        </span><br><span class="line">              [--pct-permission PERCENT]                                </span><br><span class="line">              [--pkg-blacklist-file PACKAGE_BLACKLIST_FILE]             </span><br><span class="line">              [--pkg-whitelist-file PACKAGE_WHITELIST_FILE]             </span><br><span class="line">              [--wait-dbg] [--dbg-no-events]                            </span><br><span class="line">              [--setup scriptfile] [-f scriptfile [-f scriptfile] ...]  </span><br><span class="line">              [--port port]                                             </span><br><span class="line">              [-s SEED] [-v [-v] ...]                                   </span><br><span class="line">              [--throttle MILLISEC] [--randomize-throttle]              </span><br><span class="line">              [--profile-wait MILLISEC]                                 </span><br><span class="line">              [--device-sleep-time MILLISEC]                            </span><br><span class="line">              [--randomize-script]                                      </span><br><span class="line">              [--script-log]                                            </span><br><span class="line">              [--bugreport]                                             </span><br><span class="line">              [--periodic-bugreport]                                    </span><br><span class="line">              [--permission-target-system]                              </span><br><span class="line">              COUNT</span><br></pre></td></tr></table></figure></p><p>可以看见列出了所有monkey的usage，但是并没有启动，因为缺少事件数量，只要加上数量，即可<code>adb shell monkey 10000</code></p><h4 id="Monkey-Option"><a href="#Monkey-Option" class="headerlink" title="Monkey Option"></a>Monkey Option</h4><p>monkey的option可以根据实际需要进行选择，主要分为<strong>常规类</strong>、<strong>事件类</strong>、<strong>约束类</strong>和<strong>调试类</strong></p><h5 id="常规类"><a href="#常规类" class="headerlink" title="常规类"></a>常规类</h5><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>- - help</td><td>显示帮助信息，usage</td></tr><tr><td>-v</td><td>打印日志信息，每增加一个-v，日志显示的信息越详细，目前最多支持三个-v，即：-v -v -v;  L0:一个-v，除启动提示、测试完成和最终结果之外，提供较少信息；  L1：两个-v，-v -v，提供较详细的运行测试信息，如发送到Activity的事件； L2：三个-v，-v -v -v，提供更加详细的信息，如测试中被选中的或未选中的Activity</td></tr></tbody></table><h5 id="事件类"><a href="#事件类" class="headerlink" title="事件类"></a>事件类</h5><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-s</td><td>伪随机数生成器的seed值，如果用相同的seed值再次运行mnkey，会生成相同的事件序列(重复执行刚才的随机操作，复现问题好用)</td></tr><tr><td>- -throttle</td><td>后面接时间，单位毫秒，表示事件之间的固定延时（执行 每一个指令的间隔时间）</td></tr><tr><td>- -pct-touch</td><td>后接触摸事件百分比(触摸事件是一个down-up事件，它发生在屏幕上的某单一位置)，点击</td></tr><tr><td>- -pct-motion</td><td>后接动作事件百分比(动作事件由屏幕上某处的一个down事件、一系列的伪随机事件和一个up事件组成)，滑动</td></tr><tr><td>- -pct-trackball</td><td>后面接轨迹事件的百分比(轨迹事件由一个或几个随机的移动组成，有时还伴随有点击)</td></tr><tr><td>- -pct-syskeys</td><td>后面接“系统”按键事件的百分比(这些按键通常被保留，由系统使用，如Home、Back、StartCall、End Call及音量控制键)。</td></tr><tr><td>- -pct-nav</td><td>后面接“基本”导航事件百分比(导航事件主要来自方向输入设备的上，下，左，右事件)</td></tr><tr><td>- -pct-majornav</td><td>后面接“主要”导航事件的百分比(这些导航事件通常引发图形界面中的动作，如：键盘的中间按键、回退按键、菜单按键)</td></tr><tr><td>- -pct-appswitch</td><td>后面接启动Activity的百分比。在随机间隔里，Monkey将执行一个startActivity()调用，作为最大程度覆盖包中全部Activity的一种方法。</td></tr><tr><td>- -pct-flip</td><td>键盘翻转事件</td></tr><tr><td>- -pct-anyevent</td><td>调整其他时间比例，比如很少使用的keypress等事件</td></tr><tr><td>- -pct-pinchzoom</td><td>缩放事件</td></tr><tr><td>- -pct-permission</td><td>未知</td></tr></tbody></table><h5 id="约束类"><a href="#约束类" class="headerlink" title="约束类"></a>约束类</h5><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-p</td><td>指定包，可一个可多个，多个包需要多个-p</td></tr><tr><td>-c</td><td>指定类，可一个可多个，多个需多个-c</td></tr></tbody></table><h5 id="调试类"><a href="#调试类" class="headerlink" title="调试类"></a>调试类</h5><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>- -hprof</td><td>设置此选项，将在Monkey事件序列之前和之后立即生成profiling报告。这将会在data/misc中生成大文件(~5Mb)，所以要小心使用它</td></tr><tr><td>- -ignore-crashes</td><td>当应用程序崩溃或发生任何失控异常时，Monkey将停止运行。如果设置此选项，Monkey将继续向系统发送事件，直到计数完成</td></tr><tr><td>- -ignore-timeouts</td><td>当应用程序发生任何超时错误(如“ApplicationNot Responding”对话框)时，Monkey将停止运行。如果设置此选项，Monkey将继续向系统发送事件，直到计数完成</td></tr><tr><td>- -ignore-security-exceptions</td><td>当应用程序发生任何权限错误（如启动一个需要某些权限的Activity)时，monkey将继续运行直到计数完成</td></tr><tr><td>- -ignore-native-crashes</td><td>当应用程序发生native code的崩溃事件时，monkey将继续运行直至计数完成</td></tr><tr><td>- -kill-process-after-error</td><td>设置此项后，当monkey因为应用程序发生错误而停止时，将会通知系统停止发生错误的进程</td></tr><tr><td>- -monitor-native-crashes</td><td>设置此项后，monkey运行时native code的崩溃事件将被监视并报告</td></tr></tbody></table><h4 id="常用monkey示例"><a href="#常用monkey示例" class="headerlink" title="常用monkey示例"></a>常用monkey示例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell monkey -p com.android.camera --ignore-crashes --ignore-timeouts --ignore-security-exceptions  --ignore-native-crashes --pct-touch 70 --pct-motion 25 --pct-majornav 5 -v -v -v --throttle 300 100000 &gt; E:\app_workstation\Android_files\MONKEY\1.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>以上命令执行效果：忽略app崩溃，忽略超时，忽略权限异常，忽略应用程序发生崩溃的本地代码，触摸事件百分比70%，手势事件25%，主要导航事件5%；日志等级三级，事件间隔3s，执行100000次事件，输出和错误都打印进D盘1.log文件中</p><h5 id="补充标准输出知识"><a href="#补充标准输出知识" class="headerlink" title="补充标准输出知识"></a>补充标准输出知识</h5><p>linux中，标准输入<code>stdin</code>，标准输出<code>stdout</code>，标准错误<code>stderr</code>，分别使用0,1,2代替，所以就有了以下几种常用的重定向方式：</p><ol><li><code>sh test.sh &gt; 1.log</code>，标准错误输出到屏幕，标准输出打印到1.log文件中，1.log中没有错误内容</li><li><code>sh test.sh &gt; 2.log 2&gt;&amp;1</code>，标准输出和标准错误都打印到2.log文件中</li><li><code>sh test.sh &gt; 3.log 2 &gt;err.log</code>，标准输出打印到3.log文件，标准错误打印到err.log文件</li></ol><p>使用monkey生成日志之后，需要对日志进行筛查，看是否有APP崩溃记录或者无响应记录。</p><ul><li>崩溃记录查找”CRASH”</li><li>无响应记录查找”ANR”（Application No Responding）</li><li>内存泄露问题搜索”GC”（需进一步分析）</li><li>异常问题搜索“Exception”（如果出现空指针，NullPointerException，需格外重视）</li></ul><h4 id="停止Monkey"><a href="#停止Monkey" class="headerlink" title="停止Monkey"></a>停止Monkey</h4><p>既然是linux进程，想停，很简单，找出来，kill掉..<br><code>adb shell ps | grep monkey</code><br><code>adb shell kill -9 PID</code></p><p>完~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;adb进阶二 —— Monkey (1)&lt;/p&gt;
    
    </summary>
    
      <category term="计算机基础" scheme="http://tokyle.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Android" scheme="http://tokyle.com/tags/Android/"/>
    
      <category term="Monkey" scheme="http://tokyle.com/tags/Monkey/"/>
    
  </entry>
  
  <entry>
    <title>adb进阶一 —— logcat</title>
    <link href="http://tokyle.com/2019/04/10/adb%E8%BF%9B%E9%98%B6%E4%B8%80-%E2%80%94%E2%80%94-logcat/"/>
    <id>http://tokyle.com/2019/04/10/adb进阶一-——-logcat/</id>
    <published>2019-04-10T08:18:18.000Z</published>
    <updated>2019-04-10T08:19:31.368Z</updated>
    
    <content type="html"><![CDATA[<p>adb进阶一 —— logcat</p><a id="more"></a><h3 id="logcat-简介"><a href="#logcat-简介" class="headerlink" title="logcat 简介"></a>logcat 简介</h3><p>logcat是Android中的一个命令行工具，可以用于测试过程中获取程序的log<br>基本用法：<br>测试开始前，可以先清缓存:<code>adb logcat -c</code><br>获取日志：<code>adb logcat &gt; E:\app_workstation\Android_files\logs\1.log</code></p><p>语法格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[adb] logcat [&lt;option&gt;] … [&lt;filter – spec&gt;] …</span><br></pre></td></tr></table></figure></p><p>推荐搭配grep使用</p><h3 id="logcat-缓冲区"><a href="#logcat-缓冲区" class="headerlink" title="logcat 缓冲区"></a>logcat 缓冲区</h3><p>Android log输出量巨大， 特别是通信类log，好在Android降log放在不同的缓冲区内，可用于指定缓冲区输出log，目前有四个缓冲区：</p><table><thead><tr><th>缓冲区名称</th><th>用途</th></tr></thead><tbody><tr><td>Radio</td><td>输出通信系统的log</td></tr><tr><td>System</td><td>输出系统组件的log</td></tr><tr><td>Event</td><td>输出event模块的log</td></tr><tr><td>Main</td><td>所有java层的log，以及不属于上面三层的log</td></tr></tbody></table><p>缓冲区主要是给系统组件使用的，一般的应用不需要考虑，应用的log都在<strong>main</strong>缓冲区中<br>默认log输出（不指定缓冲区的情况下）是输出<code>System</code>和<code>Main</code>缓冲区的log</p><p>获取缓冲区命令：</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>-b <buffer></buffer></td><td>加载一个可使用的日志缓冲区提供查看，默认是main</td></tr></tbody></table><p>实例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">adb logcat –b radio</span><br><span class="line"></span><br><span class="line">adb logcat –b system</span><br><span class="line"></span><br><span class="line">adb logcat –b events</span><br><span class="line"></span><br><span class="line">adb logcat –b main</span><br></pre></td></tr></table></figure></p><h3 id="logcat-参数"><a href="#logcat-参数" class="headerlink" title="logcat 参数"></a>logcat 参数</h3><h4 id="日志级别"><a href="#日志级别" class="headerlink" title="日志级别"></a>日志级别</h4><p>由低到高</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>V</td><td>Verbose（最低优先级）明细</td></tr><tr><td>D</td><td>Debug调试</td></tr><tr><td>I</td><td>Info    信息</td></tr><tr><td>W</td><td>Warning警告</td></tr><tr><td>E</td><td>Error    错误</td></tr><tr><td>F</td><td>Fatal    严重错误</td></tr><tr><td>S</td><td>Silent（Super all output）</td></tr></tbody></table><p>日志过滤器格式：<code>tag: priority</code></p><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 仅输出标记为“ActivityManager”且优先级大于等于“Info”和 标记为“PowerManagerService”并且优先级大于等于“Debug”的日志</span><br><span class="line"></span><br><span class="line">adb logcat ActivityManager:I PowerManagerService:D *:S</span><br><span class="line"></span><br><span class="line"># 显示所有优先级大于等于“warning”的日志</span><br><span class="line"></span><br><span class="line">adb logcat *:W</span><br><span class="line"></span><br><span class="line"># 显示PowerManagerService的日志信息</span><br><span class="line"></span><br><span class="line">adb logcat -s PowerManagerService</span><br></pre></td></tr></table></figure></p><p>tips：<code>*:S</code>设置所有日志级别高于S的日志，由于没有这样级别，所以加上该过滤器可以确保只会输出符合条件的日志</p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>-b</td><td>加载一个可使用的日志缓冲区供查看，默认值为main</td></tr><tr><td>-c</td><td>清除缓冲区中的全部日志并退出（清除完成后可使用-g 查看）</td></tr><tr><td>-g</td><td>打印日志缓冲区的大小并退出</td></tr><tr><td>-d</td><td>将缓冲区的log转存到屏幕中然后退出</td></tr><tr><td>-f</td><td>将log输出到制定的文件中&lt;文件名&gt;，默认为标准输出（stdout）</td></tr><tr><td>-n</td><td>设置日志的最大数目，默认值为4，需要和-r选项一起使用</td></tr><tr><td>-r</td><td>按照每千字节输出日志，默认值为16，需要和-f一起使用</td></tr><tr><td>-s</td><td>设置过滤器</td></tr><tr><td>-v</td><td>设置输出格式的日志消息</td></tr></tbody></table><p>一般长时间输出log的话建议-f -n -r三个参数连用，这样当一个文件日志输出满了之后可以马上在另一个中进行输出（输出多个指定大小的日志文件）<br>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -f /data/local/tmp/log.txt -n 2 -r 3</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -b radio -v time &gt; /tmp/event.log</span><br></pre></td></tr></table></figure><p>tips:<code>-v time</code>表示在log中加入每条log发生的时间</p><h4 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h4><p>-v更多格式：</p><table><thead><tr><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>brief</td><td>显示优先级/标记和过程的PID发出的消息（默认格式）</td></tr><tr><td>process</td><td>仅显示进程PID</td></tr><tr><td>tag</td><td>仅显示优先级/标记</td></tr><tr><td>thread</td><td>仅显示进程：线程和优先级/标记</td></tr><tr><td>raw</td><td>显示原始的日志信息，没有其他的元数据字段</td></tr><tr><td>time</td><td>显示日期，调用时间，优先级/标记，PID</td></tr><tr><td>long</td><td>显示所有的元数据字段并且用空行分隔消息内容</td></tr></tbody></table><p>示例：<code>adb logcat -v thread</code></p><p>以上，完~</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><blockquote><p><a href="https://www.cnblogs.com/bydzhangxiaowei/p/8168598.html" target="_blank" rel="noopener">ADB logcat 过滤方法(抓取日志)</a><br><a href="https://www.cnblogs.com/JianXu/p/5468839.html" target="_blank" rel="noopener">Android logcat命令详解</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;adb进阶一 —— logcat&lt;/p&gt;
    
    </summary>
    
      <category term="计算机基础" scheme="http://tokyle.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Android" scheme="http://tokyle.com/tags/Android/"/>
    
      <category term="adb" scheme="http://tokyle.com/tags/adb/"/>
    
  </entry>
  
  <entry>
    <title>Android调试工具adb简介</title>
    <link href="http://tokyle.com/2019/04/10/Android%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7adb%E7%AE%80%E4%BB%8B/"/>
    <id>http://tokyle.com/2019/04/10/Android调试工具adb简介/</id>
    <published>2019-04-10T05:32:15.000Z</published>
    <updated>2019-04-10T05:35:29.880Z</updated>
    
    <content type="html"><![CDATA[<p>Android调试工具adb简介</p><a id="more"></a><p>对于Android测试和开发，adb使用应该算是一个基本技能，正好最近需要用到这个，结合网上前人经验稍微总结一下。</p><h3 id="adb"><a href="#adb" class="headerlink" title="adb"></a>adb</h3><p>adb全称<code>Android Debug Bridge</code>Android的调试桥，其实就是一个C/S架构的命令行工具。<br>adb有三个部分：</p><ol><li>运行在PC端（Windows，linux，Mac os）的client，功能是可以进行Android应用的安装，卸载，调试。</li><li>运行在PC端的service，作用是管理客户端到Android设备上adb后台进程的连接（adb服务启动后，在Windows资源管理器中可以查看adb.exe是启动状态）</li><li>运行在Android设备上的adb后台进程（adb shell ps | grep adb可见，占用端口5037）</li></ol><h3 id="常用abd命令"><a href="#常用abd命令" class="headerlink" title="常用abd命令"></a>常用abd命令</h3><ul><li><p>安装应用（apk文件在PC本地）<br>命令行进入apk文件所在路径，执行<code>adb install kuaikan.apk</code></p></li><li><p>卸载应用（应用已安装在Android设备）<br>区别与安装应用是试用apk文件，卸载应用试用的是包名，类似：<code>com.android.camera</code><br>连接上设备，执行<code>adb uninstall com.kuaikan.comic</code><br>(关于获取包名，可以问开发，也可以反编译apk文件，从<code>AndroidManifest.xml</code>文件中获取，反编译方法：推荐使用<code>apktool</code>,直接命令行执行<code>java -jar 路径\apktool.jar d 、路径yourApkFile.apk</code>即可，包名在<code>AndroidManifest.xml</code>中的<code>package</code>项可获取，顺便activity也可以在此获取<code>activity</code>)</p><blockquote><p><a href="https://bitbucket.org/iBotPeaches/apktool/downloads/" target="_blank" rel="noopener">apktool下载地址</a></p></blockquote></li><li><p>文件互传<br>Android设备和PC之间的文件互传<br><code>adb pull 文件 目录</code>文件从Android设备推送到本地PC<br><code>adb push 文件 目录</code>文件从本地PC上传到Android设备</p></li><li><p>设备连接<br><code>adb devices</code> 获取设备列表及设备状态<br><code>adb get-state</code> 获取设备状态（device表示连接正常；offline表示连接异常，设备无响应；unknown表示为止设备）</p></li><li><p>日志操作<br><code>adb logcat</code>打印Android系统日志，类似的<code>bugreport</code>、<code>dumpsys</code>、<code>dumpstate</code>，建议重定向到本地：<br><code>adb bugreport &gt; D:\applogs\bugreport.log</code></p></li></ul><h3 id="adb-shell"><a href="#adb-shell" class="headerlink" title="adb shell"></a>adb shell</h3><p>adb shell其实就是调用Android系统中的命令，应该都知道，Android底层其实是linux，adb shell个人理解，和进入linux敲命令差不多，只是敲的是封装好的Android命令，因此，可以直接先执行adb shell进入shell模式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">E:\app_workstation &#123;git&#125;</span><br><span class="line">&#123;lamb&#125; adb shell</span><br><span class="line">sakura:/ $</span><br><span class="line">2|sakura:/ $ cd /data/</span><br><span class="line">sakura:/data $</span><br></pre></td></tr></table></figure></p><p>另外，adb shell的命令，都是执行的/system/bin目录下的执行文件，如果设备是root过的，可以尝试把这个目录导出来，看看命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb pull /system/bin/ E:\app_workstation\BIN</span><br></pre></td></tr></table></figure></p><p>导出之后，可以看一下<code>am</code>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/system/bin/sh</span><br><span class="line"></span><br><span class="line">if [ &quot;$1&quot; != &quot;instrument&quot; ] ; then</span><br><span class="line">    cmd activity &quot;$@&quot;</span><br><span class="line">else</span><br><span class="line">    base=/system</span><br><span class="line">    export CLASSPATH=$base/framework/am.jar</span><br><span class="line">    exec app_process $base/bin com.android.commands.am.Am &quot;$@&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p><p>其实就是shell脚本</p><ul><li>服务启停<br>停：<code>adb kill-server</code><br>启：<code>adb start-server</code><br>一般设备连接异常时，adb devices未显示设备，可以先停再重启服务</li></ul><h4 id="pm"><a href="#pm" class="headerlink" title="pm"></a>pm</h4><ul><li><p>列出安装在设备上的应用<br><code>adb shell pm list package</code></p></li><li><p>列出系统应用<br><code>adb shell pm list package -s</code></p></li><li><p>列出第三方应用<br><code>adb shell pm list package -3</code></p></li><li><p>列出包名及对应的apk名和存放路径<br><code>adb shell pm list package -f</code></p></li><li><p>组合查找，过滤(查找相机包名及安装路径)<br><code>adb shell pm list package -f -i camera</code></p></li><li><p>列出对应包名的.apk位置<br><code>adb shell pm path com.android.camera</code></p></li><li><p>列出对应包名的dump信息（可重定向到本地）<br><code>adb shell pm dump com.android.camera &gt; E:\app_workstation\android_files\camera.dump</code></p></li></ul><h4 id="am"><a href="#am" class="headerlink" title="am"></a>am</h4><ul><li><p>启动activity<br><code>adb shell am start -n package/activity</code><br>例如：<code>adb shell am start -n com.android.camera/.Camera</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;lamb&#125; adb shell am start -n com.android.camera/.Camera</span><br><span class="line">Starting: Intent &#123; cmp=com.android.camera/.Camera &#125;</span><br></pre></td></tr></table></figure></li><li><p>先停止应用再启动<br><code>adb shell am start -S com.android.camera/.Camera</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;lamb&#125; adb shell am start -S com.android.camera/.Camera</span><br><span class="line">Stopping: com.android.camera</span><br><span class="line">Starting: Intent &#123; act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] cmp=com.android.camera/.Camera &#125;</span><br></pre></td></tr></table></figure></li><li><p>启动默认浏览器并打开网页<br><code>adb shell am start -a android.intent.action.VIEW -d https://www.baidu.com</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;lamb&#125; adb shell am start -a android.intent.action.VIEW -d https://www.baidu.com</span><br><span class="line">Starting: Intent &#123; act=android.intent.action.VIEW dat=https://www.baidu.com/... &#125;</span><br></pre></td></tr></table></figure></li><li><p>停止应用<br><code>adb shell am force-stop package</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;lamb&#125; adb shell am force-stop com.android.camera</span><br></pre></td></tr></table></figure></li></ul><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><p>截图<br><code>adb shell screencap -p /sdcard/screen.png</code></p></li><li><p>录制<br><code>adb shell screenrecord sdcard/record.mp4</code></p></li><li><p>查看设备信息（如Android版本号）<br><code>adb shell getprop</code><br>示例：获取sdk版本：<code>adb shell getprop ro.build.version.sdk</code></p></li><li><p>查看分辨率<br><code>adb shell wm size</code></p></li><li><p>查看屏幕密度<br><code>adb shell wm density</code></p></li></ul><p>当设备root后，其实能获取的就更多了，例如MAC 地址啥的</p><p>以上，完~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android调试工具adb简介&lt;/p&gt;
    
    </summary>
    
      <category term="计算机基础" scheme="http://tokyle.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Android" scheme="http://tokyle.com/tags/Android/"/>
    
      <category term="adb" scheme="http://tokyle.com/tags/adb/"/>
    
  </entry>
  
  <entry>
    <title>记cmder/git一个报错解决</title>
    <link href="http://tokyle.com/2019/04/09/%E8%AE%B0cmder-git%E4%B8%80%E4%B8%AA%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/"/>
    <id>http://tokyle.com/2019/04/09/记cmder-git一个报错解决/</id>
    <published>2019-04-10T01:39:50.000Z</published>
    <updated>2019-04-10T01:40:32.624Z</updated>
    
    <content type="html"><![CDATA[<p>记cmder/git一个报错解决</p><a id="more"></a><h3 id="Couldn’t-reserve-space-for-cygwin’s-heap-Win32-error-0"><a href="#Couldn’t-reserve-space-for-cygwin’s-heap-Win32-error-0" class="headerlink" title="Couldn’t reserve space for cygwin’s heap, Win32 error 0"></a>Couldn’t reserve space for cygwin’s heap, Win32 error 0</h3><p>早上开机想试试adb工具，由于是在Windows机器，第一个想到的还是用<code>cmder</code>来命令行操作，然后不知道是昨天系统自动更新强制杀了昨天的cmder进程造成文件损坏还是什么鬼，<code>ls</code>直接报错（普通用户打开cmder就可以执行ls，用管理员打开，就不行），具体报错信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;lamb&#125; ls</span><br><span class="line">      0 [main] us 0 init_cheap: VirtualAlloc pointer is null, Win32 error 487</span><br><span class="line">AllocationBase 0x0, BaseAddress 0x68570000, RegionSize 0x450000, State 0x10000</span><br><span class="line">D:\dev\cmder\vendor\msysgit\bin\ls.exe: *** Couldn&apos;t reserve space for cygwin&apos;s heap, Win32 error 0</span><br></pre></td></tr></table></figure></p><p>同样的报错也可能出现在使用<code>git</code>时候：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Git\bin\git.exe pull --progress &quot;origin&quot; </span><br><span class="line">Done</span><br><span class="line">    0 [main] us 0 init_cheap: VirtualAlloc pointer is null, Win32 error 487</span><br><span class="line">AllocationBase 0x0, BaseAddress 0x68560000, RegionSize 0x390000, State 0x10000</span><br><span class="line">C:\Program Files\Git\bin\sh.exe: *** Couldn&apos;t reserve space for cygwin&apos;s heap, Win32 error 0</span><br></pre></td></tr></table></figure></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><h4 id="重装cmder"><a href="#重装cmder" class="headerlink" title="重装cmder"></a>重装cmder</h4><p>首先以为是昨天系统自动升级时候强制杀了cmder进程造成文件损坏，就尝试重装了次，为了避免注册表问题，还选了其他的地址，安装完毕之后管理员打开cmder，ls还是报那个错，失败</p><h4 id="rebase-exe-b"><a href="#rebase-exe-b" class="headerlink" title="rebase.exe -b"></a>rebase.exe -b</h4><p>这个办法，原理不知道。。。在stackoverflow翻到的，不过是真解决了</p><ol><li><p>首先是进<code>路径\msysgit\bin</code>查看是否有<code>rebase.exe</code>该程序</p></li><li><p>命令行进入<code>路径\msysgit\bin</code>目录，执行<code>rebase.exe -b 0x50000000 msys-1.0.dll</code>即可，正常情况下执行该命令没任何响应，重启cmder或者git即解决</p></li></ol><h5 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h5><ol><li><code>rebase.exe</code>文件所在路径不固定，可能在<code>路径\msysgit\bin</code>下，也可能在<code>C:\Program Files (x86)\Git\bin</code>下</li><li>在执行<code>rebase</code>之前，需要确保<code>msys-1.0.dll</code>不是运行状态，<br> 查看方法，启动命令行，执行<code>tasklist /m msys-1.0.dll</code></li><li>养成好习惯，在执行rebase之前，先备份：<code>copy msys-1.0.dll msys-1.0.dll.bak</code>，如果执行失败<code>ReBaseImage (msys-1.0.dll) failed with last error = 6</code><br>考虑按以下步骤：</li></ol><ul><li>把dll文件拷贝到其他的目录下</li><li>重新复制生成备份文件</li><li>用副本替换原文件<br>另外，考虑用管理员身份运行</li></ul><p>以上，完~</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><blockquote><p><a href="http://jakob.engbloms.se/archives/1403" target="_blank" rel="noopener">初始解决：jakob</a><br><a href="https://stackoverflow.com/questions/18502999/git-extensions-win32-error-487-couldnt-reserve-space-for-cygwins-heap-win32" target="_blank" rel="noopener">stackoverflow问题解决</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记cmder/git一个报错解决&lt;/p&gt;
    
    </summary>
    
      <category term="skill" scheme="http://tokyle.com/categories/skill/"/>
    
    
      <category term="cmder" scheme="http://tokyle.com/tags/cmder/"/>
    
      <category term="git" scheme="http://tokyle.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>网站性能杂货</title>
    <link href="http://tokyle.com/2019/04/08/%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E6%9D%82%E8%B4%A7/"/>
    <id>http://tokyle.com/2019/04/08/网站性能杂货/</id>
    <published>2019-04-08T07:17:59.000Z</published>
    <updated>2019-04-08T07:19:24.084Z</updated>
    
    <content type="html"><![CDATA[<p>页面性能优化参考</p><a id="more"></a><h3 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h3><p>很多时候，会打开chrome F12的network栏，查看页面信息，页面底部会有三个时间：<br><code>DOMContentLoaded</code>,<code>Load</code>,<code>Finish</code></p><h4 id="DOMContentLoaded-和-Load"><a href="#DOMContentLoaded-和-Load" class="headerlink" title="DOMContentLoaded 和 Load"></a>DOMContentLoaded 和 Load</h4><p>DOMContentLoaded 和 Load 分别对应 页面 DOMContentLoaded 和 Load 事件触发的时间点，即：</p><p><code>DOMContentLoaded</code>：DOM树构建完成。即HTML页面由上向下解析HTML结构到末尾封闭标签 。</p><p><code>Load</code>:页面加载完毕。 DOM树构建完成后，继续加载html/css 中的图片资源等外部资源，加载完成后视为页面加载完毕。</p><p>DOMContentLoaded 会比 Load 时间小，两者时间差大致等于外部资源加载的时间。</p><h4 id="Finish"><a href="#Finish" class="headerlink" title="Finish"></a>Finish</h4><p><code>Finish</code> 时间是页面上所有 http 请求发送到响应完成的时间，HTTP1.0/1.1 协议限定，单个域名的请求并发量是 6 个，即Finish是所有请求（不只是XHR请求，还包括DOC，img，js，css等资源的请求）在并发量为6的限制下完成的时间。</p><h3 id="优化实践"><a href="#优化实践" class="headerlink" title="优化实践"></a>优化实践</h3><h4 id="Make-fewer-HTTP-requests-（最大限度地减少HTTP请求）"><a href="#Make-fewer-HTTP-requests-（最大限度地减少HTTP请求）" class="headerlink" title="Make fewer HTTP requests （最大限度地减少HTTP请求）"></a>Make fewer HTTP requests （最大限度地减少HTTP请求）</h4><p>终端用户响应的时间中，有80%用于下载各项内容。这部分时间包括下载页面中的图像、样式表、脚本、Flash等。通过减少页面中的元素可以减少HTTP请求的次数。这是提高网页速度的关键步骤。<br>     减少页面组件的方法其实就是简化页面设计。那么有没有一种方法既能保持页面内容的丰富性又能达到加快响应时间的目的呢？这里有几条减少HTTP请求次数同时又可能保持页面内容丰富的技术。</p><p>合并文件是通过把所有的脚本放到一个文件中来减少HTTP请求的方法，如可以简单地把所有的CSS文件都放入一个样式表中。当脚本或者样式表在不同页面中使用时需要做不同的修改，这可能会相对麻烦点，但即便如此也要把这个方法作为改善页面性能的重要一步。</p><p>CSS Sprites是减少图像请求的有效方法。把所有的背景图像都放到一个图片文件中，然后通过CSS的background-image和background-position属性来显示图片的不同部分；</p><p>图片地图是把多张图片整合到一张图片中。虽然文件的总体大小不会改变，但是可以减少HTTP请求次数。图片地图只有在图片的所有组成部分在页面中是 紧挨在一起的时候才能使用，如导航栏。确定图片的坐标和可能会比较繁琐且容易出错，同时使用图片地图导航也不具有可读性，因此不推荐这种方法；</p><p>内联图像是使用data:URL scheme的方法把图像数据加载页面中。这可能会增加页面的大小。把内联图像放到样式表（可缓存）中可以减少HTTP请求同时又避免增加页面文件的大小。但是内联图像现在还没有得到主流浏览器的支持。</p><h4 id="Use-a-Content-Delivery-Network-CDN-（使用内容分发网络）"><a href="#Use-a-Content-Delivery-Network-CDN-（使用内容分发网络）" class="headerlink" title="Use a Content Delivery Network (CDN)（使用内容分发网络）"></a>Use a Content Delivery Network (CDN)（使用内容分发网络）</h4><p>用户与你网站服务器的接近程度会影响响应时间的长短。把你的网站内容分散到多个、处于不同地域位置的服务器上可以加快下载速度。但是首先我们应该做些什么呢？</p><p>按地域布置网站内容的第一步并不是要尝试重新架构你的网站让他们在分发服务器上正常运行。根据应用的需求来改变网站结构，这可能会包括一些比较复杂的任 务，如在服务器间同步Session状态和合并数据库更新等。要想缩短用户和内容服务器的距离，这些架构步骤可能是不可避免的。</p><p>要记住，在终端用户的响应时间中有80%到90%的响应时间用于下载图像、样式表、脚本、Flash等页面内容。这就是网站性能黄金守则。和重新设计你的 应用程序架构这样比较困难的任务相比，首先来分布静态内容会更好一点。这不仅会缩短响应时间，而且对于内容分发网络来说它更容易实现。</p><p>内容分发网络（Content Delivery Network，CDN）是由一系列分散到各个不同地理位置上的Web服务器组成的，它提高了网站内容的传输速度。用于向用户传输内容的服务器主要是根据 和用户在网络上的靠近程度来指定的。例如，拥有最少网络跳数（network hops）和响应速度最快的服务器会被选定。</p><p>一些大型的网络公司拥有自己的CDN，但是使用像Akamai Technologies，Mirror Image Internet， 或者Limelight Networks这样的CDN服务成本却非常高。对于刚刚起步的企业和个人网站来说，可能没有使用CDN的成本预算，但是随着目标用户群的不断扩大和更加 全球化，CDN就是实现快速响应所必需的了。以Yahoo来说，他们转移到CDN上的网站程序静态内容节省了终端用户20%以上的响应时间。使用CDN是 一个只需要相对简单地修改代码实现显著改善网站访问速度的方法。</p><h4 id="Add-Expires-headers添加一个Expires或Cache-Control头"><a href="#Add-Expires-headers添加一个Expires或Cache-Control头" class="headerlink" title="Add Expires headers添加一个Expires或Cache-Control头"></a>Add Expires headers添加一个Expires或Cache-Control头</h4><p>这条守则包括两方面的内容：<br>对于静态内容：设置文件头过期时间Expires的值为“Never expire”（永不过期）<br>对于动态内容：使用恰当的Cache-Control文件头来帮助浏览器进行有条件的请求</p><p>网页内容设计现在越来越丰富，这就意味着页面中要包含更多的脚本、样式表、图片和Flash。第一次访问你页面的用户就意味着进行多次的HTTP请求，但 是通过使用Expires文件头就可以使这样内容具有缓存性。它避免了接下来的页面访问中不必要的HTTP请求。Expires文件头经常用于图像文件， 但是应该在所有的内容都使用他，包括脚本、样式表和Flash等。</p><p>浏览器（和代理）使用缓存来减少HTTP请求的大小和次数以加快页面访问速度。Web服务器在HTTP响应中使用Expires文件头来告诉客户端内容需 要缓存多长时间。</p><h4 id="Compress-components-with-gzip-用gzip的压缩内容"><a href="#Compress-components-with-gzip-用gzip的压缩内容" class="headerlink" title="Compress components with gzip  用gzip的压缩内容"></a>Compress components with gzip  用gzip的压缩内容</h4><p>网络传输中的HTTP请求和应答时间可以通过前端机制得到显著改善。的确，终端用户的带宽、互联网提供者、与对等交换点的靠近程度等都不是网站开发者所能决定的。但是还有其他因素影响着响应时间。通过减小HTTP响应的大小可以节省HTTP响应时间。</p><p>从HTTP/1.1开始，web客户端都默认支持HTTP请求中有Accept-Encoding文件头的压缩格式<br> Accept-Encoding: gzip, deflate</p><p>如果web服务器在请求的文件头中检测到上面的代码，就会以客户端列出的方式压缩响应内容。Web服务器把压缩方式通过响应文件头中的Content-Encoding来返回给浏览器<br> Content-Encoding: gzip</p><p>Gzip是目前最流行也是最有效的压缩方式。这是由GNU项目开发并通过RFC 1952来标准化的。另外仅有的一个压缩格式是deflate，但是它的使用范围有限效果也稍稍逊色。</p><h4 id="Reduce-DNS-lookups（减少DNS查找）"><a href="#Reduce-DNS-lookups（减少DNS查找）" class="headerlink" title="Reduce DNS lookups（减少DNS查找）"></a>Reduce DNS lookups（减少DNS查找）</h4><p>域名系统（DNS）提供了域名和IP的对应关系，就像电话本中人名和他们的电话号码的关系一样。当你在浏览器地址栏中输入www.dudo.org时，DNS解析服务器就会返回这个域名对应的IP地址。DNS解析的过程同样也是需要时间的。一般情况下返回给定域名对应的IP地址会花费20到120毫秒的时间。而且在这个过程中浏览器什么都不会做直到DNS查找完毕。</p><p> 缓存DNS查找可以改善页面性能。这种缓存需要一个特定的缓存服务器，这种服务器一般属于用户的ISP提供商或者本地局域网控制，但是它同样会在用户使用 的计算机上产生缓存。DNS信息会保留在操作系统的DNS缓存中（微软Windows系统中DNS Client Service）。大多数浏览器有独立于操作系统以外的自己的缓存。由于浏览器有自己的缓存记录，因此在一次请求中它不会受到操作系统的影响。</p><p>Internet Explorer默认情况下对DNS查找记录的缓存时间为30分钟，它在注册表中的键值为DnsCacheTimeout。Firefox对DNS的查找 记录缓存时间为1分钟，它在配置文件中的选项为network.dnsCacheExpiration（Fasterfox把这个选项改为了1小时）</p><p>当客户端中的DNS缓存都为空时（浏览器和操作系统都为空），DNS查找的次数和页面中主机名的数量相同。这其中包括页面中URL、图片、脚本文件、样式表、Flash对象等包含的主机名。减少主机名的数量可以减少DNS查找次数。</p><p>减少主机名的数量还可以减少页面中并行下载的数量。减少DNS查找次数可以节省响应时间，但是减少并行下载却会增加响应时间。我的指导原则是把这些页面中 的内容分割成至少两部分但不超过四部分。这种结果就是在减少DNS查找次数和保持较高程度并行下载两者之间的权衡了</p><h4 id="Reduce-the-number-of-DOM-elements（减少DOM元素的数量）"><a href="#Reduce-the-number-of-DOM-elements（减少DOM元素的数量）" class="headerlink" title="Reduce the number of DOM elements（减少DOM元素的数量）"></a>Reduce the number of DOM elements（减少DOM元素的数量）</h4><p>一个复杂的页面意味着需要下载更多数据，同时也意味着JavaScript遍历DOM的效率越慢。比如当你增加一个事件句柄时在500和5000个DOM元素中循环效果肯定是不一样的。</p><p>  大量的DOM元素的存在意味着页面中有可以不用移除内容只需要替换元素标签就可以精简的部分。你在页面布局中使用表格了吗？你有没有仅仅为了布局而引入更多的<div>元素呢？也许会存在一个适合或者在语意是更贴切的标签可以供你使用。</div></p><p>DOM元素数量很容易计算出来，只需要在Firebug的控制台内输入：<br>document.getElementsByTagName(‘*’).length</p><h4 id="Reduce-cookie-size-（减少Cookie的大小）"><a href="#Reduce-cookie-size-（减少Cookie的大小）" class="headerlink" title="Reduce cookie size （减少Cookie的大小）"></a>Reduce cookie size （减少Cookie的大小）</h4><p>HTTP coockie可以用于权限验证和个性化身份等多种用途。coockie内的有关信息是通过HTTP文件头来在web服务器和浏览器之间进行交流的。因此保持coockie尽可能的小以减少用户的响应时间十分重要。</p><p>有关更多信息可以查看Tenni Theurer和Patty Chi的文章“When the Cookie Crumbles”。这们研究中主要包括：<br>去除不必要的coockie<br>使coockie体积尽量小以减少对用户响应的影响<br>注意在适应级别的域名上设置coockie以便使子域名不受影响<br>设置合理的过期时间。较早地Expire时间和不要过早去清除coockie，都会改善用户的响应时间。</p><h4 id="Use-cookie-free-domains使用无Cookie的域名"><a href="#Use-cookie-free-domains使用无Cookie的域名" class="headerlink" title="Use cookie-free domains使用无Cookie的域名"></a>Use cookie-free domains使用无Cookie的域名</h4><p>当浏览器在请求中同时请求一张静态的图片和发送coockie时，服务器对于这些coockie不会做任何地使用。因此他们只是因为某些负面因素而创建的 网络传输。所有你应该确定对于静态内容的请求是无coockie的请求。创建一个子域名并用他来存放所有静态内容</p><p>如果你的域名是www.example.org，你可以在static.example.org上存在静态内容。但是，如果你不是在www.example.org上 而是在顶级域名example.org设置了coockie，那么所有对于static.example.org的请求都包含coockie。在这种情况 下，你可以再重新购买一个新的域名来存在静态内容，并且要保持这个域名是无coockie的。Yahoo!使用的是ymig.com，YouTube使用 的是ytimg.com，Amazon使用的是images-anazon.com等等。</p><p>使用无coockie域名存在静态内容的另外一个好处就是一些代理（服务器）可能会拒绝对coockie的内容请求进行缓存。一个相关的建议就是，如果你想确定应该使用example.org还是www.example.org作 为你的一主页，你要考虑到coockie带来的影响。忽略掉www会使你除了把coockie设置到<em>.example.org（</em>是泛域名解析，代表了 所有子域名译者dudo注）外没有其它选择，因此出于性能方面的考虑最好是使用带有www的子域名并且在它上面设置coockie。</p><h3 id="…-…"><a href="#…-…" class="headerlink" title="… …"></a>… …</h3><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><blockquote><p><a href="http://www.cnblogs.com/jiahaohk/archive/2009/08/29/1556330.html" target="_blank" rel="noopener">加快您的网站的最佳实践（Best Practices for Speeding Up Your Web Site）</a><br><a href="http://developer.yahoo.com/performance/rules.html" target="_blank" rel="noopener">英文原文</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;页面性能优化参考&lt;/p&gt;
    
    </summary>
    
      <category term="性能测试" scheme="http://tokyle.com/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="性能" scheme="http://tokyle.com/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>伪·influxdb删除数据</title>
    <link href="http://tokyle.com/2019/04/08/%E4%BC%AA%C2%B7influxdb%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE/"/>
    <id>http://tokyle.com/2019/04/08/伪·influxdb删除数据/</id>
    <published>2019-04-08T05:34:15.000Z</published>
    <updated>2019-04-08T05:35:07.577Z</updated>
    
    <content type="html"><![CDATA[<p>伪 influxdb删除数据</p><a id="more"></a><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>大早上的，一大佬跟我说grafan登不上了，让帮忙看看啥情况，登录服务器一通乱看，磁盘满了，因为那台服务器还装了个influxdb，估计也就是数据写的，没空间了。</p><p>influxdb作为时序数据库的一种，是不提供类似mysql的delete操作，也就是，原则上，你删不了数据，除非删库。</p><p>但是，influxdb提供了数据保留策略<code>policies</code>，通过对<code>policies</code>操作，可以达到删除数据的效果</p><h3 id="数据保存策略（Retention-Policies）"><a href="#数据保存策略（Retention-Policies）" class="headerlink" title="数据保存策略（Retention Policies）"></a>数据保存策略（Retention Policies）</h3><p>influxdb的数据保存策略<code>policies</code>主要是用于指定数据的保留时间，超过指定时间，就会删除这部分数据。</p><h4 id="查询策略"><a href="#查询策略" class="headerlink" title="查询策略"></a>查询策略</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; show retention policies on exceptionless;</span><br><span class="line">name    duration shardGroupDuration replicaN default</span><br><span class="line">----    -------- ------------------ -------- -------</span><br><span class="line">autogen 0s       168h0m0s           1        true</span><br></pre></td></tr></table></figure><ul><li>name: 策略名称</li><li>duration： 保留时间，0s表示永久保存</li><li>shardGroupDuration：shardGroup的存储时间，shardGroup是InfluxDB的一个基本储存结构，个人理解为时间分区</li><li>replicaN：全称是REPLICATION，副本个数</li><li>default：是否是默认策略</li></ul><h4 id="新建策略"><a href="#新建策略" class="headerlink" title="新建策略"></a>新建策略</h4><p>语法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE RETENTION POLICY ON &lt;retention_policy_name&gt; </span><br><span class="line">ON &lt;database_name&gt; </span><br><span class="line">DURATION &lt;duration&gt; </span><br><span class="line">REPLICATION &lt;n&gt; [SHARD DURATION &lt;duration&gt; ] [DEFAULT]</span><br></pre></td></tr></table></figure></p><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE RETENTION POLICY &quot;3_day&quot; ON &quot;exceptionless&quot; DURATION 3d REPLICATION 1 SHARD DURATION 3h DEFAULT;</span><br></pre></td></tr></table></figure><p>为库exceptionless创建了一个名称为3_day的策略，其中数据保存时间为3天，SHARDDURATION为3h。</p><h4 id="ShardGroup"><a href="#ShardGroup" class="headerlink" title="ShardGroup"></a>ShardGroup</h4><p>shardgroup是InfluxDB中一个重要的逻辑概念，它负责指定时间跨度的数据存储，这个时间跨度在创建RP时指定。如果没有指定，系统将通过RP的数据保留时间来计算：</p><table><thead><tr><th>Retention Policy‘s DURATION</th><th>Shard Group Duration</th></tr></thead><tbody><tr><td>&lt; 2days</td><td>1h</td></tr><tr><td>&gt;= 2days and &lt;= 6months</td><td>24h</td></tr><tr><td>&gt; 6months</td><td>168h</td></tr></tbody></table><p>不同shardgroup的时间跨度不会重叠。shardgroup实现了数据按时间分区，这样的设计可以：</p><ol><li>一定程度上缓解数据写入热点问题</li><li>加快数据删除效率(将数据按照时间分割成小的粒度会使得数据过期实现非常简单，InfluxDB中数据过期删除的执行粒度就是Shard Group，系统会对每一个Shard Group判断是否过期，而不是一条一条记录判断。InfluxDB没有提供删除和更新数据的接口，数据只能通过RP进行删除)</li><li>加快数据按时间维度查找的效率(实现了将数据按照时间分区的特性。将时序数据按照时间分区是时序数据库一个非常重要的特性，基本上所有时序数据查询操作都会带有时间的过滤条件，比如查询最近一小时或最近一天，数据分区可以有效根据时间维度选择部分目标分区，淘汰部分分区)</li></ol><h4 id="修改及删除策略"><a href="#修改及删除策略" class="headerlink" title="修改及删除策略"></a>修改及删除策略</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 修改策略</span><br><span class="line">alter retention policy &quot;autogen&quot; on &quot;exceptionless&quot; duration 72h0m0s default;</span><br><span class="line"></span><br><span class="line"># 删除策略</span><br><span class="line">drop retention POLICY &quot;2_hours&quot; ON &quot;exceptionless&quot;</span><br></pre></td></tr></table></figure><h3 id="后序"><a href="#后序" class="headerlink" title="后序"></a>后序</h3><p>说回大佬的问题，连接进influxdb：<code>influx -host ip:port -precision rfc3339</code>之后，查看当前库的存储策略：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; show retention policies on exceptionless;</span><br><span class="line">name    duration shardGroupDuration replicaN default</span><br><span class="line">----    -------- ------------------ -------- -------</span><br><span class="line">autogen 0s       168h0m0s           1        true</span><br></pre></td></tr></table></figure></p><p>嗯，保存时间是永久。。再新建一个7天的策略，把原策略删除即可。</p><p>以上，完~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;伪 influxdb删除数据&lt;/p&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="influxdb" scheme="http://tokyle.com/tags/influxdb/"/>
    
  </entry>
  
  <entry>
    <title>Linux垃圾清理</title>
    <link href="http://tokyle.com/2019/02/27/Linux%E5%9E%83%E5%9C%BE%E6%B8%85%E7%90%86/"/>
    <id>http://tokyle.com/2019/02/27/Linux垃圾清理/</id>
    <published>2019-02-28T02:00:04.000Z</published>
    <updated>2019-02-28T02:01:53.729Z</updated>
    
    <content type="html"><![CDATA[<p>linux垃圾清理</p><a id="more"></a><p>起因是阿里云上面一台很穷的机器，大早上来看了下，搭在那服务器上面的grafana直接就登不上了，登服务器看了下日志，磁盘满了，因为就50G的空间，上面还有个influxdb占了大头，在重新申请扩充磁盘空间之前，只能先看看能删啥了。</p><h3 id="Linux垃圾"><a href="#Linux垃圾" class="headerlink" title="Linux垃圾"></a>Linux垃圾</h3><p>坊间有句话：Linux不像windows，Linux没有垃圾。对这句话，只能笑笑。。</p><p>首先<code>df -h</code>看一下哪个分区满了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@izuf633r5fhkmlfxl47zbkz log]# df -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/vda1        50G   43G  28M  100% /</span><br><span class="line">devtmpfs        3.9G     0  3.9G   0% /dev</span><br><span class="line">tmpfs           3.9G     0  3.9G   0% /dev/shm</span><br><span class="line">tmpfs           3.9G  500K  3.9G   1% /run</span><br><span class="line">tmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup</span><br><span class="line">tmpfs           783M     0  783M   0% /run/user/1002</span><br></pre></td></tr></table></figure></p><p>可以看到<code>/dev/vda1</code>分区基本已经使用100%了，这个分区是挂载在<code>/</code>目录下，所以，需要清理的也就是<code>/</code>目录下的垃圾。</p><p>进根目录，一层一层的看文件大小并按文件大小倒序排列：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /</span><br><span class="line"></span><br><span class="line">du -sh * | sort -h</span><br></pre></td></tr></table></figure></p><p>找到最大的文件夹/文件，进入对应的文件夹，一层一层的筛选<br>基本上可以找到<code>/var/log</code>这个文件夹，这个文件夹中有很大的日志文件，尤其是<code>/var/log/messages</code>文件以及<code>/var/log/journal</code>文件夹，这两个都是系统操作日志的记录，尤其是<code>journal</code>文件夹，里面存的大量的日志，这台服务器的日志有4G，需要清理的就是这个文件夹了。</p><h3 id="journalctl"><a href="#journalctl" class="headerlink" title="journalctl"></a>journalctl</h3><p>linux继承unix，也有类似syslog的记录，linux有个journald的日志解决方案，说实话，我对linux底层不是非常了解，所以这个日志系统当前也没多少时间去深究，只能停留在使用上。<br>journald日志系统有个读取日志的工具：<code>journalctl</code>，这个工具应该算是经常用到的一个，经常搭建环境时候出错需要：<code>journalctl -xe</code>查看详细日志</p><p>关于<code>journalctl</code>这个工具的详细介绍这边不说，提供官方地址，不行就直接<code>--help</code></p><blockquote><p><a href="https://www.freedesktop.org/software/systemd/man/journalctl.html" target="_blank" rel="noopener">journalctl各参数详细介绍</a></p></blockquote><p>其中可以找到一个参数：<code>--vacuum-size=, --vacuum-time=, --vacuum-files=</code><br>官方解释：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Removes the oldest archived journal files until the disk space they use falls below the specified size (specified with the usual &quot;K&quot;, &quot;M&quot;, &quot;G&quot; and &quot;T&quot; suffixes), or all archived journal files contain no data older than the specified timespan (specified with the usual &quot;s&quot;, &quot;m&quot;, &quot;h&quot;, &quot;days&quot;, &quot;months&quot;, &quot;weeks&quot; and &quot;years&quot; suffixes), or no more than the specified number of separate journal files remain. Note that running --vacuum-size= has only an indirect effect on the output shown by --disk-usage, as the latter includes active journal files, while the vacuuming operation only operates on archived journal files. Similarly, --vacuum-files= might not actually reduce the number of journal files to below the specified number, as it will not remove active journal files.</span><br></pre></td></tr></table></figure></p><p>这三个参数，可以帮助我们删除journald的日志</p><p>用法：<br><code>journalctl --vacuum-size=1G</code>  指定日志文件最大占据空间为1G<br><code>journalctl --vacuum-time=1years</code> 指定日志文件保存时间为1年</p><p>更多用法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">#查看所有日志（默认情况下 ，只保存本次启动的日志）</span><br><span class="line">$ sudo journalctl</span><br><span class="line"></span><br><span class="line">#查看内核日志（不显示应用日志）</span><br><span class="line">$ sudo journalctl -k</span><br><span class="line"></span><br><span class="line">#查看系统本次启动的日志</span><br><span class="line">$ sudo journalctl -b</span><br><span class="line">$ sudo journalctl -b -0</span><br><span class="line"></span><br><span class="line">#查看上一次启动的日志（需更改设置）</span><br><span class="line">$ sudo journalctl -b -1</span><br><span class="line"></span><br><span class="line">#查看指定时间的日志</span><br><span class="line">$ sudo journalctl --since=&quot;2012-10-30 18:17:16&quot;</span><br><span class="line">$ sudo journalctl --since &quot;20 min ago&quot;</span><br><span class="line">$ sudo journalctl --since yesterday</span><br><span class="line">$ sudo journalctl --since &quot;2015-01-10&quot; --until &quot;2015-01-11 03:00&quot;</span><br><span class="line">$ sudo journalctl --since 09:00 --until &quot;1 hour ago&quot;</span><br><span class="line"></span><br><span class="line">#显示尾部的最新10行日志</span><br><span class="line">$ sudo journalctl -n</span><br><span class="line"></span><br><span class="line">#显示尾部指定行数的日志</span><br><span class="line">$ sudo journalctl -n 20</span><br><span class="line"></span><br><span class="line">#实时滚动显示最新日志</span><br><span class="line">$ sudo journalctl -f</span><br><span class="line"></span><br><span class="line">#查看指定服务的日志</span><br><span class="line">$ sudo journalctl /usr/lib/systemd/systemd</span><br><span class="line"></span><br><span class="line">#查看指定进程的日志</span><br><span class="line">$ sudo journalctl _PID=1</span><br><span class="line"></span><br><span class="line">#查看某个路径的脚本的日志</span><br><span class="line">$ sudo journalctl /usr/bin/bash</span><br><span class="line"></span><br><span class="line">#查看指定用户的日志</span><br><span class="line">$ sudo journalctl _UID=33 --since today</span><br><span class="line"></span><br><span class="line">#查看某个 Unit 的日志</span><br><span class="line">$ sudo journalctl -u nginx.service</span><br><span class="line">$ sudo journalctl -u nginx.service --since today</span><br><span class="line"></span><br><span class="line">#实时滚动显示某个 Unit 的最新日志</span><br><span class="line">$ sudo journalctl -u nginx.service -f</span><br><span class="line"></span><br><span class="line">#合并显示多个 Unit 的日志</span><br><span class="line">$ journalctl -u nginx.service -u php-fpm.service --since today</span><br><span class="line"></span><br><span class="line">#查看指定优先级（及其以上级别）的日志，共有8级</span><br><span class="line"># 0: emerg</span><br><span class="line"># 1: alert</span><br><span class="line"># 2: crit</span><br><span class="line"># 3: err</span><br><span class="line"># 4: warning</span><br><span class="line"># 5: notice</span><br><span class="line"># 6: info</span><br><span class="line"># 7: debug</span><br><span class="line">$ sudo journalctl -p err -b</span><br><span class="line"></span><br><span class="line">#日志默认分页输出，--no-pager 改为正常的标准输出</span><br><span class="line">$ sudo journalctl --no-pager</span><br><span class="line"></span><br><span class="line">#以 JSON 格式（单行）输出</span><br><span class="line">$ sudo journalctl -b -u nginx.service -o json</span><br><span class="line"></span><br><span class="line">#以 JSON 格式（多行）输出，可读性更好</span><br><span class="line">$ sudo journalctl -b -u nginx.serviceqq</span><br><span class="line"> -o json-pretty</span><br><span class="line"></span><br><span class="line">#显示日志占据的硬盘空间</span><br><span class="line">$ sudo journalctl --disk-usage</span><br><span class="line"></span><br><span class="line">#指定日志文件占据的最大空间</span><br><span class="line">$ sudo journalctl --vacuum-size=1G</span><br><span class="line"></span><br><span class="line">#指定日志文件保存多久</span><br><span class="line">$ sudo journalctl --vacuum-time=1years</span><br></pre></td></tr></table></figure></p><p>附上一篇关于<code>systemd</code>命令介绍的博客：</p><blockquote><p><a href="https://www.linuxprobe.com/systemd-command.html" target="_blank" rel="noopener">systemd命令</a></p></blockquote><p>完~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux垃圾清理&lt;/p&gt;
    
    </summary>
    
      <category term="计算机基础" scheme="http://tokyle.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="journalctl" scheme="http://tokyle.com/tags/journalctl/"/>
    
      <category term="systemd" scheme="http://tokyle.com/tags/systemd/"/>
    
  </entry>
  
  <entry>
    <title>Centos7安装pip3</title>
    <link href="http://tokyle.com/2019/01/29/Centos7%E5%AE%89%E8%A3%85pip3/"/>
    <id>http://tokyle.com/2019/01/29/Centos7安装pip3/</id>
    <published>2019-01-30T01:58:33.000Z</published>
    <updated>2019-01-30T01:59:22.984Z</updated>
    
    <content type="html"><![CDATA[<p>centos7安装pip3</p><a id="more"></a><p>当前基本拿到手的centos安装的可能都是python2.7，对应的pip版本也很低，很多后面的工具包都安装不了，所以，需要安装个pip3</p><blockquote><p><a href="http://tokyle.com/2018/04/20/Centos%E4%B8%8B%E5%8D%87%E7%BA%A7python2-7%E5%88%B03-6/">python2.7和python3共存</a></p></blockquote><p>安装完python3之后，就可以安装pip</p><h3 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">wget --no-check-certificate  https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb</span><br><span class="line"></span><br><span class="line">tar -zxvf pip-8.0.2.tar.gz</span><br><span class="line"></span><br><span class="line">mv pip-8.0.2  /usr/local/pip3</span><br><span class="line"></span><br><span class="line">cd  /usr/local/pip3</span><br><span class="line"></span><br><span class="line">python3 setup.py build</span><br><span class="line"></span><br><span class="line">python3 setup.py install</span><br></pre></td></tr></table></figure><p>测试：<code>pip3 install xmind</code></p><p>需要注意的是的，当前安装的pip3不是最新版本，需要升级：<code>pip3 install --upgrade pip</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;centos7安装pip3&lt;/p&gt;
    
    </summary>
    
      <category term="skill" scheme="http://tokyle.com/categories/skill/"/>
    
    
      <category term="Centos7" scheme="http://tokyle.com/tags/Centos7/"/>
    
      <category term="pip3" scheme="http://tokyle.com/tags/pip3/"/>
    
  </entry>
  
  <entry>
    <title>2019年关将至有感</title>
    <link href="http://tokyle.com/2019/01/24/2019%E5%B9%B4%E5%85%B3%E5%B0%86%E8%87%B3%E6%9C%89%E6%84%9F/"/>
    <id>http://tokyle.com/2019/01/24/2019年关将至有感/</id>
    <published>2019-01-25T00:53:07.000Z</published>
    <updated>2019-01-25T00:55:03.239Z</updated>
    
    <content type="html"><![CDATA[<p>2019农历年来临之际有感</p><a id="more"></a><p>年关将近，发发牢骚…<br>近几天“百度已死”的文章铺天盖地，随之而来的很多分析互联网的文章出现，年末了，也扯扯自己感受。最大的感触就是“中国互联网”的确是不再互联。曾经还在百度搜音乐，搜商品..而今，基本都是对应网站（网易云，淘宝）直接搜索。可能也有近几年百度搜索结果太烂的原因，然后呢，不是很关注这行的可能不怎么知道，当前国内互联网，巨头分地，彼此吃像都不怎么样，说到底都是数据，隐私，流量，具体点就是钱。</p><p>微信公众号的内容，普通搜索引擎的爬虫无法收录；<br>淘宝为代表的网购平台, 长时间的封杀搜索引擎爬虫（结果就是搜商品只能淘宝、京东站内搜索）；<br>app之间互转越来越困难（抖音转微信等）<br>加上前段时间的马桶MT，聊天宝，多闪被微信封杀…<br>巨头圈地，彼此不互联貌似已经越来越具象；相比之下，国外谷歌搜索结果仍然可以直连亚马逊…无话可说..</p><p>最后，还是扯到搜索上，当前百度基本我是放弃了，必应最近日子也不好过；最最推荐的方式，就是有能力就买台服务器，自己搭个梯子吧，万里长城永不倒啊（直接买VPN不怎么推荐，有点手段的能把你祖宗辈信息都截到）；科学上网做不到，推荐几个小众的搜索网站：</p><p>无隐私搜索（chrome有插件，地址栏直接输搜索项，实测非常干净）：<br><code>https://www.duckduckgo.com/</code></p><p>类似网站查询网站，可查用户覆盖率和用户标签，其他功能自行体会（有chrome插件）：<br><code>https://www.similarweb.com/</code></p><p>在线问答系统（类似百科）：<br><code>https://www.wolframalpha.com/</code></p><p>（以上网站可能都需要至少科学上网一次装完插件..所以，还是赶紧会科学上网现实，直接Google多方便）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2019农历年来临之际有感&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://tokyle.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>jmeter吞吐量几个插件介绍</title>
    <link href="http://tokyle.com/2019/01/18/jmeter%E5%90%9E%E5%90%90%E9%87%8F%E5%87%A0%E4%B8%AA%E6%8F%92%E4%BB%B6%E4%BB%8B%E7%BB%8D/"/>
    <id>http://tokyle.com/2019/01/18/jmeter吞吐量几个插件介绍/</id>
    <published>2019-01-18T06:50:55.000Z</published>
    <updated>2019-01-18T06:51:35.380Z</updated>
    
    <content type="html"><![CDATA[<p>几个jmeter吞吐量相关插件</p><a id="more"></a><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>测试接口：获取系统时间<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://192.168.0.1:8080/api/v1/Other/GetServiceTime</span><br></pre></td></tr></table></figure></p><p>jmeter脚本结构：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- 线程组</span><br><span class="line">-- HTTP信息头管理器</span><br><span class="line">    -- Throughput Controller 1</span><br><span class="line">    -- GetService Time 1</span><br><span class="line">    -- Throughput Controller 2</span><br><span class="line">    -- GetService Time 2</span><br><span class="line">    -- 查看结果树</span><br></pre></td></tr></table></figure></p><h3 id="吞吐量控制器（Throughput-Controller）"><a href="#吞吐量控制器（Throughput-Controller）" class="headerlink" title="吞吐量控制器（Throughput Controller）"></a>吞吐量控制器（Throughput Controller）</h3><p>这个组件，其实按照我们的理解，不应该翻译成吞吐量控制器，这个组件的作用是控制子节点执行频率，有两个控制方式：</p><ol><li>Total Executions(执行总次数):控制执行次数</li><li>Percent Executions(执行百分比)：执行设置的测试计划的总测试次数的百分比</li></ol><ul><li>测试计划总测试次数在线程组处设置，总次数=（Number of Threaders(users) * Loop Count）</li></ul><p>这两个很好理解，选择模式为总次数，设置几次，就执行几次；选模式为百分比，执行次数就是总次数的百分之n</p><p>这个组件，还有个<code>per user</code>选项</p><ul><li><p>勾选：会按照每个线程单独计算吞吐量，如线程组设置了5个线程，循环次数为2的情况，吞吐量为1时，吞吐量的子节点每个线程执行一次，总共会执行5次。</p></li><li><p>不勾选：按照全局的执行数次进行计数，如线程组设置了5个线程，循环次数为2的情况，吞吐量为1时，吞吐量的子节点仅会执行一次。</p></li></ul><h4 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h4><p>线程组：5个线程，循环次数2次（测试计划总次数为10）</p><ol><li><p>没有 Throughput Controller 这个组件，直接执行，在查看结果树种会有<strong>10</strong>条记录；</p></li><li><p>有Throughput Controller，模式选择Total Executions，Throughput设置为1，不勾选<code>Per User</code>，点击执行，查看结果树会有<strong>1</strong>条记录；（设置的throughput）</p></li><li><p>有Throughput Controller，模式选择Total Executions，Throughput设置为1，<strong>勾选</strong><code>Per User</code>，点击执行，查看结果树会有<strong>5</strong>条记录；（线程数*设置的throughput）</p></li><li><p>有Throughput Controller，模式选择Percent Executions，Throughput设置为40，不勾选<code>Per User</code>，点击执行，查看结果树会有<strong>4</strong>条记录；（设置的throughput% * 总次数）</p></li><li><p>有Throughput Controller，模式选择Percent Executions，Throughput设置为40，<strong>勾选</strong><code>Per User</code>，点击执行，查看结果树会有<strong>5</strong>条记录；（一个用户的吞吐量（1<em>循环次数）</em>设置的throurhput%，四舍五入之后，相加 ）（注意会有四舍五入，所以，当百分比设置为20%时候，一个用户的吞吐量的20%就是 1<em>2</em>20%，直接四舍五入成了0，最后在查看结果树，就看不见执行记录）</p></li></ol><h3 id="Constant-Timer"><a href="#Constant-Timer" class="headerlink" title="Constant Timer"></a>Constant Timer</h3><p>这个就可以理解为  思考时间（thinktime），单位是毫秒</p><p><strong>作用域为当前线程组</strong></p><h4 id="实验-1"><a href="#实验-1" class="headerlink" title="实验"></a>实验</h4><p>jmeter测试脚本层级：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 线程组</span><br><span class="line">-- HTTP信息头管理器</span><br><span class="line">    -- GetServiceTim1-$&#123;__time(YMDHMS,)&#125;</span><br><span class="line">    -- Constant Timer（3000 ms）</span><br><span class="line">    -- GetServiceTim2-$&#123;__time(YMDHMS,)&#125;</span><br><span class="line">    -- GetServiceTim3-$&#123;__time(YMDHMS,)&#125;</span><br><span class="line">    -- GetServiceTim4-$&#123;__time(YMDHMS,)&#125;</span><br><span class="line">    -- 查看结果树</span><br></pre></td></tr></table></figure></p><p>点击执行，在点击执行后3s，GetServiceTim1开始执行，再过3s，GetServiceTim2执行，以此类推</p><h3 id="Constant-Throughput-Timer（固定QPS）"><a href="#Constant-Throughput-Timer（固定QPS）" class="headerlink" title="Constant Throughput Timer（固定QPS）"></a>Constant Throughput Timer（固定QPS）</h3><p>这个组件就是给需要特定QPS的场景，组件里有两个菜单：<br>Target throughput(in samples per minute)：目标QPS，单位是分钟，1200/min -&gt; 20/s<br>Calculate Throughput based on：计算基准，有五种<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">This thread only ：分别控制每个线程的吞吐量，选择这种模式时，总的吞吐量为设置的 target Throughput 乘以线程的数量</span><br><span class="line"></span><br><span class="line">All active threads ： 设置的target Throughput 将分配在每个活跃线程上，每个活跃线程在上一次运行结束后等待合理的时间后再次运行。活跃线程指同一时刻同时运行的线程。</span><br><span class="line"></span><br><span class="line">All active threads in current thread group ：设置的target Throughput将分配在当前线程组的每一个活跃线程上，当测试计划中只有一个线程组时，该选项和All active threads选项的效果完全相同。</span><br><span class="line"></span><br><span class="line">All active threads （shared ）：与All active threads 的选项基本相同，唯一的区别是，每个活跃线程都会在所有活跃线程上一次运行结束后等待合理的时间后再次运行。</span><br><span class="line"></span><br><span class="line">All cative threads in current thread group （shared ）：与All active threads in current thread group 基本相同，唯一的区别是，每个活跃线程都会在所有活跃线程的上一次运行结束后等待合理的时间后再次运行。</span><br></pre></td></tr></table></figure></p><h4 id="实验-2"><a href="#实验-2" class="headerlink" title="实验"></a>实验</h4><p>线程数设置为10，循环次数：永远，持续时间90s<br>jmeter 脚本层级结构：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- 线程组</span><br><span class="line">-- HTTP信息头管理器</span><br><span class="line">    -- Constant Throughput Timer</span><br><span class="line">    -- GetServiceTime接口</span><br><span class="line">    -- 查看结果树</span><br><span class="line">    -- 聚合报告</span><br><span class="line">    -- jp@gc - Transactions per Second</span><br></pre></td></tr></table></figure></p><ol><li><p>target throughput设置：1200/m（20/s），模式选择：this thread only，点击执行，当前QPS为 <code>20*10（线程数）=200/s</code></p></li><li><p>target throughput设置：1200/m（20/s），模式选择: All active threads，点击执行，当前QPS为 <code>20/s</code><br>(All active threads （shared ）和All cative threads in current thread group （shared ）没怎么实验，感觉至少没怎么用到。。。主要是懒。。)</p></li></ol><p>完~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;几个jmeter吞吐量相关插件&lt;/p&gt;
    
    </summary>
    
    
      <category term="jmeter" scheme="http://tokyle.com/tags/jmeter/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter压测关联接口</title>
    <link href="http://tokyle.com/2019/01/16/Jmeter%E5%8E%8B%E6%B5%8B%E5%85%B3%E8%81%94%E6%8E%A5%E5%8F%A3/"/>
    <id>http://tokyle.com/2019/01/16/Jmeter压测关联接口/</id>
    <published>2019-01-17T04:15:43.000Z</published>
    <updated>2019-01-17T04:19:13.370Z</updated>
    
    <content type="html"><![CDATA[<p>jmeter关联接口性能测试</p><a id="more"></a><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>进行接口性能测试时候，尤其是登录类接口，经常需要先进行登录，然后拿到登录返回的token，比如sessionid，来作为参数传给下一个接口作为入参</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>测试接口：<br>登录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">POST http://192.168.0.1:8080/api/Login</span><br><span class="line"></span><br><span class="line">POST data:</span><br><span class="line">&#123;</span><br><span class="line">    &quot;mobileId&quot;:&quot;ad9ec085&quot;,</span><br><span class="line">    &quot;loginUrl&quot;:&quot;P00019452&quot;,</span><br><span class="line">    &quot;simId&quot;:&quot;|&quot;,</span><br><span class="line">    &quot;phoneModel&quot;:&quot;vivo vivo X6SPlus D&quot;,</span><br><span class="line">    &quot;phoneSysVersion&quot;:&quot;5.1.1&quot;,</span><br><span class="line">    &quot;appVersion&quot;:&quot;4.2.0&quot;,</span><br><span class="line">    &quot;language&quot;:&quot;ZH-CN&quot;,</span><br><span class="line">    &quot;isClearGesturePwd&quot;:0,</span><br><span class="line">    &quot;companyCode&quot;:&quot;test&quot;,</span><br><span class="line">    &quot;registrationId&quot;:&quot;120c83f7601a92735ae&quot;,</span><br><span class="line">    &quot;isAutoLogin&quot;:&quot;0&quot;,</span><br><span class="line">    &quot;sign&quot;:&quot;a8a922d705c15686232d963e3ce9461aa96df4689420e5abab76535c00532417&quot;,</span><br><span class="line">    &quot;timeStamp&quot;:&quot;20181029101835&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>接口返回信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;result&quot;:true,</span><br><span class="line">    &quot;data&quot;:&#123;</span><br><span class="line">        &quot;sysPara&quot;:&#123;</span><br><span class="line">            &quot;CancelAttachmentAmount&quot;:&quot;0&quot;,</span><br><span class="line">            &quot;CustomerIsVisible&quot;:&quot;N&quot;,</span><br><span class="line">            &quot;ExceptionAttachmentAmount&quot;:&quot;0&quot;,</span><br><span class="line">            &quot;IsAllowRevoke&quot;:&quot;N&quot;,</span><br><span class="line">            &quot;IsNeedApproveComment&quot;:&quot;N&quot;,</span><br><span class="line">            &quot;IsNeedOTReason&quot;:&quot;N&quot;,</span><br><span class="line">            &quot;IsNeedRejectComment&quot;:&quot;Y&quot;,</span><br><span class="line">            &quot;IsShowOTType&quot;:&quot;1&quot;,</span><br><span class="line">            &quot;LeaveAttachmentAmount&quot;:&quot;2&quot;,</span><br><span class="line">            &quot;OTAttachmentAmount&quot;:&quot;0&quot;,</span><br><span class="line">            &quot;OTDayTypeIsVisible&quot;:&quot;N&quot;,</span><br><span class="line">            &quot;ShiftAttachmentAmount&quot;:&quot;0&quot;,</span><br><span class="line">            &quot;isNeedOTExplain&quot;:&quot;1&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;userInfo&quot;:&#123;</span><br><span class="line">            &quot;BackGroundVersion&quot;:&quot;Y1&quot;,</span><br><span class="line">            &quot;GesturePwd&quot;:&quot;&quot;,</span><br><span class="line">            &quot;IsValid&quot;:true,</span><br><span class="line">            &quot;LoginName&quot;:&quot;P00019452&quot;,</span><br><span class="line">            &quot;ModuleList&quot;:Array[9],</span><br><span class="line">            &quot;PersonID&quot;:&quot;www-2f7f-4203-23212-5cc00acbcd0a&quot;,</span><br><span class="line">            &quot;ServiceTime&quot;:&quot;11:37&quot;,</span><br><span class="line">            &quot;SessionId&quot;:&quot;19431489-f4df-4143-b254-15b2f74f449a,a13b648f-6d81-4307-8ee1-b04c5b976246&quot;,</span><br><span class="line">            &quot;TimeClassE&quot;:&quot;&quot;,</span><br><span class="line">            &quot;TimeClassS&quot;:&quot;&quot;,</span><br><span class="line">            &quot;UserID&quot;:&quot;112dcs-6d81-ewew-8ee1-b04c5b976246&quot;,</span><br><span class="line">            &quot;Uuid&quot;:&quot;darcc75332-A4E2-4FB1-AFCF-C6EB07647825&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;user&quot;:&#123;</span><br><span class="line">            &quot;BirthDay&quot;:&quot;&quot;,</span><br><span class="line">            &quot;CompanyEngName&quot;:&quot;&quot;,</span><br><span class="line">            &quot;CompanyName&quot;:&quot;&quot;,</span><br><span class="line">            &quot;DeptId&quot;:&quot;0&quot;,</span><br><span class="line">            &quot;DeptName&quot;:&quot;测试部&quot;,</span><br><span class="line">            &quot;EmpID&quot;:&quot;P00019452&quot;,</span><br><span class="line">            &quot;EmpName&quot;:&quot;虚拟主管&quot;,</span><br><span class="line">            &quot;EnglishName&quot;:&quot;&quot;,</span><br><span class="line">            &quot;Gender&quot;:&quot;&quot;,</span><br><span class="line">            &quot;HeadImgUrl&quot;:&quot;&quot;,</span><br><span class="line">            &quot;LoginName&quot;:&quot;P00019452&quot;,</span><br><span class="line">            &quot;Position&quot;:&quot;测试总经理&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>获取用户信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.0.1:8080/api/History/GetUserInfo?sessionId=7f959f6d-4b63-4d2d-8f88-025dc80e40f9,a13b648f-6d81-4307-8ee1-b04c5b976246</span><br></pre></td></tr></table></figure></p><p>其中获取用户信息接口，需要传<code>sessionId</code>字段，该字段为登录接口的返回字段</p><p>所以需要先登录，再获取sessionid，再传给获取用户信息接口</p><h4 id="jmeter实现"><a href="#jmeter实现" class="headerlink" title="jmeter实现"></a>jmeter实现</h4><p>jmeter也是正常的创建线程组，添加http请求头，添加http请求，添加响应断言，添加查看结果树和聚合报告</p><p>不同的是，在一个线程组中会有两个接口，第一个是登录，第二个是获取用户信息，并且在登录接口后需要添加一个组件：<code>JSON Extractor</code>作用就是提取登录返回的sessionid</p><p>JSON Extractor内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Name of created variables:  变量名（后面参数化的变量名称，这边是sessionid）</span><br><span class="line"></span><br><span class="line">JSON Path expressions:  json提取表达式</span><br></pre></td></tr></table></figure></p><p>根据登录接口返回的层级结构，json表达式可以写成：<code>$.data.userInfo.SessionId</code><br>需要注意的是$后有一个.，表示当前路径</p><p>JSON表达式可以实现，只需要在登录接口后添加一个查看结果树，显示模式切换成<code>JSON Path Tester</code>，右下角就有<code>JSON Path Expression</code>测试</p><p>jmeter关联接口的层级结构：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- 线程组</span><br><span class="line">  - - CSV数据文件设置</span><br><span class="line">  - - HTTP信息头管理器</span><br><span class="line">  - - 登录接口（http请求）</span><br><span class="line">    - - 查看结果树</span><br><span class="line">    - - 响应断言</span><br><span class="line">    - - JSON Extractor</span><br><span class="line">  - - 获取用户信息接口</span><br><span class="line">  - - 响应断言</span><br><span class="line">  - - 查看结果树</span><br><span class="line">  - - 聚合报告</span><br></pre></td></tr></table></figure></p><p>完~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jmeter关联接口性能测试&lt;/p&gt;
    
    </summary>
    
      <category term="性能测试" scheme="http://tokyle.com/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="jmeter" scheme="http://tokyle.com/tags/jmeter/"/>
    
  </entry>
  
  <entry>
    <title>SqlServer清理事务日志</title>
    <link href="http://tokyle.com/2019/01/13/SqlServer%E6%B8%85%E7%90%86%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97/"/>
    <id>http://tokyle.com/2019/01/13/SqlServer清理事务日志/</id>
    <published>2019-01-14T01:49:19.000Z</published>
    <updated>2019-01-30T01:34:12.792Z</updated>
    
    <content type="html"><![CDATA[<p>SqlServer事务日志已满解决办法</p><a id="more"></a><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>压测时候，web对接了SqlServer，时间长，SqlServer报了错，事务日志已满，无法查询</p><h3 id="事务日志"><a href="#事务日志" class="headerlink" title="事务日志"></a>事务日志</h3><p>事务日志是一个与数据库文件分开的文件。它存储对数据库进行的所有更改，并全部记录插入、更新、删除、提交、回退和数据库模式变化。事务日志还称作前滚日志或重做日志。</p><p>事务日志是备份和恢复的重要组件，也是使用 SQL Remote 或 [复制代理] 复制数据所必需的。</p><p>在缺省情况下，所有数据库都使用事务日志。事务日志的使用是可选的，但是，除非您因特殊原因而不使用，否则您应始终使用它。运行带有事务日志的数据库可提供更强的故障保护功能、更好的性能以及数据复制功能。</p><h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1，数据库属性-选项-恢复模式-选择简单-点击确定</span><br><span class="line"></span><br><span class="line">2，右键数据库-任务-收缩-文件-文件类型-选择日志-收缩操作-选择在释放未使用的空间前重新组织页，选择1M-点击确定</span><br><span class="line"></span><br><span class="line">3，数据库属性-选项-恢复模式-选择完整-点击确定</span><br></pre></td></tr></table></figure><p>完~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SqlServer事务日志已满解决办法&lt;/p&gt;
    
    </summary>
    
      <category term="性能测试" scheme="http://tokyle.com/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="SqlServer" scheme="http://tokyle.com/tags/SqlServer/"/>
    
  </entry>
  
  <entry>
    <title>zabbix触发器函数介绍</title>
    <link href="http://tokyle.com/2019/01/07/zabbix%E8%A7%A6%E5%8F%91%E5%99%A8%E5%87%BD%E6%95%B0%E4%BB%8B%E7%BB%8D/"/>
    <id>http://tokyle.com/2019/01/07/zabbix触发器函数介绍/</id>
    <published>2019-01-07T07:54:52.000Z</published>
    <updated>2019-01-07T07:55:52.702Z</updated>
    
    <content type="html"><![CDATA[<p>zabbix触发器函数说明</p><a id="more"></a><blockquote><p><a href="https://www.zabbix.com/documentation/3.4/zh/manual/appendix/triggers/functions" target="_blank" rel="noopener">触发器函数官方文档</a></p></blockquote><p><strong>函数</strong></p><h3 id="abschange"><a href="#abschange" class="headerlink" title="abschange"></a>abschange</h3><p>描述：最近获取值与之前获取值差的绝对值。</p><p>参数：</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int, str, text, log</span><br><span class="line"></span><br><span class="line">例如:</span><br><span class="line">(最近获取值;之前获取值=abschange)</span><br><span class="line">1;5=4</span><br><span class="line">3;1=2</span><br><span class="line">0;-2.5=2.5</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">0 - 两值相等</span><br><span class="line">1 - 两值不等</span><br></pre></td></tr></table></figure></p><h3 id="avg-sec-num"><a href="#avg-sec-num" class="headerlink" title="avg (sec|#num,)"></a>avg (sec|#num,<time_shift>)</time_shift></h3><p>描述：指定评估期内一个项目的平均值</p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sec or #num - 评估期以秒值或最新值个数（跟在#号后）表示</span><br><span class="line"></span><br><span class="line">time_shift （可选） - 时间偏移</span><br></pre></td></tr></table></figure></p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int</span><br><span class="line"></span><br><span class="line">例如:</span><br><span class="line">⇒ avg(#5) → 五个最新值的平均值</span><br><span class="line">⇒ avg(1h) → 一个小时的平均值</span><br><span class="line">⇒ avg(1h,1d) → 一天前一个小时的平均值。</span><br><span class="line"></span><br><span class="line">从Zabbix 1.8.2开始支持time_shift参数。当需要比较当前平均值和指定时间之前的平均值（由time_shift参数指定）时，它就很有用了。</span><br></pre></td></tr></table></figure></p><h3 id="band-sec-num-mask"><a href="#band-sec-num-mask" class="headerlink" title="band (sec|#num,mask,)"></a>band (sec|#num,mask,<time_shift>)</time_shift></h3><p>描述：项目值和掩码的按位与值。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sec (可省略) or #num - 最新的第N个值</span><br><span class="line">mask (必须有) - 64位无符号整数 (0 - 18446744073709551615)</span><br><span class="line">time_shift (可选) - 参照 avg()</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: int</span><br><span class="line"></span><br><span class="line">注意此处的 #num 参数和其它一些函数的作用不用 (参照 last()).</span><br><span class="line"></span><br><span class="line">尽管以二进制方式进行比较，但是所有的参数和返回值都是十进制数。 例如, 检查第三位是和4做比较而不是100。</span><br><span class="line"></span><br><span class="line">例如:</span><br><span class="line">⇒ band(,12)=8 or band(,12)=4 → 第三位和第四位被设置，但不是同时</span><br><span class="line">⇒ band(,20)=16 → 第三位没有被设置但是第五位被设置了。</span><br><span class="line"></span><br><span class="line">从Zabbix 2.2.0开始支持该函数。</span><br></pre></td></tr></table></figure></p><h3 id="change"><a href="#change" class="headerlink" title="change"></a>change</h3><p>描述：最近获取值与之前获取值的差。</p><p>说明：</p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">支持的值类型: float, int, str, text, log</span><br><span class="line"></span><br><span class="line">例如:</span><br><span class="line">(最近获取值;之前获取值=change)</span><br><span class="line">1;5=+4</span><br><span class="line">3;1=-2</span><br><span class="line">0;-2.5=-2.5</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">0 - 两值相等</span><br><span class="line">1 - 两值不等</span><br></pre></td></tr></table></figure></p><h3 id="count-sec-num"><a href="#count-sec-num" class="headerlink" title="count (sec|#num,,,)"></a>count (sec|#num,<pattern>,<operator>,<time_shift>)</time_shift></operator></pattern></h3><p>描述：指定评估期内值的个数。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">sec or #num - 评估期以秒值或最新值个数（跟在#号后）表示</span><br><span class="line">pattern (可选) - 所需模式 (整型项目 - 精确匹配; 浮点型项目 - 误差值0.000001内)</span><br><span class="line">operator (可选)</span><br><span class="line"></span><br><span class="line">支持的 operators:</span><br><span class="line">eq - 相等</span><br><span class="line">ne - 不相等</span><br><span class="line">gt - 大于</span><br><span class="line">ge - 大于等于</span><br><span class="line">lt - 小于</span><br><span class="line">le - 小于等于</span><br><span class="line">like - 只要包含pattern (区分大小写)就被匹配</span><br><span class="line">band - 按位与</span><br><span class="line">regexp - 给定 pattern 的正则表达式，区分大小写</span><br><span class="line">iregexp - 给定 pattern 的正则表达式，不区分大小写</span><br><span class="line"></span><br><span class="line">注意:</span><br><span class="line">eq (默认), ne, gt, ge, lt, le, band, regexp, iregexp 支持整数型项目</span><br><span class="line">eq (默认), ne, gt, ge, lt, le, regexp, iregexp 支持浮点型项目</span><br><span class="line">like (默认), eq, ne, regexp, iregexp支持string, text and log 型项目</span><br><span class="line"></span><br><span class="line">time_shift (可选) - 参照 avg()</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int, str, text, log</span><br><span class="line"></span><br><span class="line">band 做第三个参数时，第二个 pattern 参数可以用两个数字表示， 以&apos;/&apos;分隔: number_to_compare_with/mask。 count() 计算项目值和掩码的按位与，再和 number_to_compare_with 比较的结果。如果按位与值等于 number_to_compare_with ，则计数。</span><br><span class="line">如果掩码值等于 number_to_compare_with, 只需要指定掩码值。</span><br><span class="line"></span><br><span class="line">regexp 或 iregexp 做为第三个参数时，第二个 pattern 参数可以是一个普通的或 global ( &apos;@&apos; 开头)的正则表达式。 避免全局表达式大小写敏感从全局表达式设置中继承。为了方便正则匹配，浮点型数值通常以四位小数方式表示。也应该注意大数值在以十进制（存储在数据库中）和二进制（zabbix server中使用）表示中的区别，可能会影响十进制的第四位小数。 </span><br><span class="line"></span><br><span class="line">例如:</span><br><span class="line">⇒ count(10m) → 过去10分钟值的个数</span><br><span class="line">⇒ count(10m,12) → 过去10分钟值等于12的个数</span><br><span class="line">⇒ count(10m,12,&quot;gt&quot;) → 过去10分钟值大于12的个数</span><br><span class="line">⇒ count(#10,12,&quot;gt&quot;) → 最新10个值，它们的值大于12的个数</span><br><span class="line">⇒ count(10m,12,&quot;gt&quot;,1d) → 一天前的前十分钟值大于12的个数</span><br><span class="line">⇒ count(10m,6/7,&quot;band&quot;) → 过去10分钟值最低三个有效位是 &apos;110&apos; (十进制)的个数。</span><br><span class="line">⇒ count(10m,,,1d) → 一天前的前十分钟值的个数</span><br><span class="line"></span><br><span class="line">从Zabbix 1.6.1开始支持#num参数。</span><br><span class="line">从Zabbix 1.8.2开始支持time_shift参数和字符串运算符。</span><br><span class="line">从Zabbix 2.2.0开始支持band运算符。</span><br><span class="line">从Zabbix 3.2.0开始支持regexp, iregexp运算符。</span><br></pre></td></tr></table></figure></p><h3 id="date"><a href="#date" class="headerlink" title="date"></a>date</h3><p>描述：    当前日期，以YYYYMMDD格式表示。</p><p>说明：</p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: any</span><br><span class="line"></span><br><span class="line">返回值如: 20150731</span><br></pre></td></tr></table></figure></p><h3 id="dayofmonth"><a href="#dayofmonth" class="headerlink" title="dayofmonth"></a>dayofmonth</h3><p>描述：当前是本月的第几天，取值范围从1到31。</p><p>说明：</p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: any</span><br><span class="line"></span><br><span class="line">从Zabbix 1.8.5开始支持该函数。</span><br></pre></td></tr></table></figure></p><h3 id="dayofweek"><a href="#dayofweek" class="headerlink" title="dayofweek"></a>dayofweek</h3><p>描述：当前是本周的第几天，取值范围从1到7 (周一 - 1, 周日 - 7)。</p><p>说明：</p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: any</span><br></pre></td></tr></table></figure></p><h3 id="delta-sec-num"><a href="#delta-sec-num" class="headerlink" title="delta (sec|#num,)"></a>delta (sec|#num,<time_shift>)</time_shift></h3><p>描述：指定评估期内最大值和最小值的差(‘max()’ 减去 ‘min()’)。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sec or #num - 评估期以秒值或最新值个数（跟在#号后）表示</span><br><span class="line">time_shift (可选) - see avg()</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int</span><br><span class="line"></span><br><span class="line">从Zabbix 1.8.2开始支持time_shift参数。</span><br></pre></td></tr></table></figure></p><h3 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h3><p>描述：比较最近获取值与之前获取值是否相同。</p><p>说明：</p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int, str, text, log</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">1 - 两值不等</span><br><span class="line">0 - 两值相等</span><br></pre></td></tr></table></figure></p><h3 id="forecast-sec-num-time"><a href="#forecast-sec-num-time" class="headerlink" title="forecast (sec|#num,,time,,)"></a>forecast (sec|#num,<time_shift>,time,<fit>,<mode>)</mode></fit></time_shift></h3><p>描述：项目的未来值，最大值，最小值，差值或平均值。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">sec or #num - 评估期以秒值或最新值个数（跟在#号后）表示</span><br><span class="line">time_shift (可选) - see avg()</span><br><span class="line">time - 需要进行估计的指定时间</span><br><span class="line">fit (可选) - 用于匹配历史数据的函数</span><br><span class="line"></span><br><span class="line">支持的fits:</span><br><span class="line">linear - 线性函数</span><br><span class="line">polynomialN - n次多项式 (1 &lt;= N &lt;= 6)</span><br><span class="line">exponential - 指数函数</span><br><span class="line">logarithmic - 对数函数</span><br><span class="line">power - 幂函数</span><br><span class="line"></span><br><span class="line">注意:</span><br><span class="line">默认是linear , polynomial1 等同于 linear</span><br><span class="line"></span><br><span class="line">mode (可选) - demanded output</span><br><span class="line"></span><br><span class="line">支持的 modes:</span><br><span class="line">value - 值 (默认)</span><br><span class="line">max - 最大值</span><br><span class="line">min - 最小值</span><br><span class="line">delta - 最大值-最小值</span><br><span class="line">avg - 平均值</span><br><span class="line"></span><br><span class="line">注意:</span><br><span class="line">value 估计项目值在此刻now + time</span><br><span class="line">max, min, delta and avg 根据now 和 now + time 时间段估计的项目值确定结果</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int</span><br><span class="line"></span><br><span class="line">如果返回值大于 999999999999.9999 或者小于 -999999999999.9999, 返回值相应被设置为999999999999.9999 或 -999999999999.9999 。</span><br><span class="line"></span><br><span class="line">只有在表达式被误用时才不被支持（错误的项目类型，无效的参数），出现错误时返回-1。</span><br><span class="line"></span><br><span class="line">例如:</span><br><span class="line">⇒ forecast(#10,,1h) → 根据最新的十个值估计一小时后的项目值</span><br><span class="line">⇒ forecast(1h,,30m) → 根据过去一小时的值估计三十分钟后的项目值</span><br><span class="line">⇒ forecast(1h,1d,12h) → 根据一天前的一个小时值估计十二个小时后的项目值</span><br><span class="line">⇒ forecast(1h,,10m,exponential) → 根据过去一小时并按照指数函数方式估计十分钟后的项目值</span><br><span class="line">⇒ forecast(1h,,2h,polynomial3,max) → 根据过去一小时并按照三次多项式方式估计两小时的最大项目值</span><br><span class="line">⇒ forecast(#​2,,​-20m) → 根据最新的两个值估计二十分钟前的项目值 （比使用last()或prev()函数更加精确, 特别是项目很少更新的时候, 比如说, 一小时一次）</span><br><span class="line"></span><br><span class="line">从Zabbix 3.0.0开始支持该函数。</span><br><span class="line">​从Zabbix 3.0.6 和 3.2.2开始支持负的​time值。</span><br><span class="line">通过 predictive trigger functions查看扩展信息。</span><br></pre></td></tr></table></figure></p><h3 id="fuzzytime-sec"><a href="#fuzzytime-sec" class="headerlink" title="fuzzytime (sec)"></a>fuzzytime (sec)</h3><p>描述：检查项目时间戳和zabbix服务器时间相差多大。</p><p>说明：sec - 秒数</p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">0 - 如果项目时间戳和zabbix服务器时间戳之间相差超过指定的时间</span><br><span class="line">1 - 其它。</span><br><span class="line"></span><br><span class="line">常使用system.localtime来检查本地时间是否与zabbix服务器的时间相同。</span><br><span class="line">也可以使用vfs.file.time[/path/file,modify]键值检测文件是否长时间未更新。</span><br><span class="line"></span><br><span class="line">例如:</span><br><span class="line">⇒ fuzzytime(60)=0 → 如果时间差超过60秒，就会检测到一个问题</span><br></pre></td></tr></table></figure></p><h3 id="iregexp-pattern"><a href="#iregexp-pattern" class="headerlink" title="iregexp (pattern,)"></a>iregexp (pattern,<sec|#num>)</sec|#num></h3><p>描述：该函数和 regexp() 类似，只是不区分大小写。</p><p>说明：see regexp()</p><p>参数：支持值的类型: str, log, text</p><h3 id="last-sec-num"><a href="#last-sec-num" class="headerlink" title="last (sec|#num,)"></a>last (sec|#num,<time_shift>)</time_shift></h3><p>描述：最近的值。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sec (可省略) or #num - 最新的第N个值</span><br><span class="line">time_shift (可选) - see avg()</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int, str, text, log</span><br><span class="line"></span><br><span class="line">注意此处的 #num 参数和其它一些函数的作用不用。</span><br><span class="line">例如:</span><br><span class="line">last() 通常等同于 last(#1)</span><br><span class="line">last(#3) - 第三个最新值 (不是三个最新值)</span><br><span class="line"></span><br><span class="line">如果在history中同一秒有多个值存在，Zabbix不能保证值的精确顺序。</span><br><span class="line"></span><br><span class="line">从Zabbix 1.6.2开始支持 #num 参数。</span><br><span class="line">从Zabbix 1.8.2开始支持 time_shift 参数。</span><br></pre></td></tr></table></figure></p><h3 id="logeventid-pattern"><a href="#logeventid-pattern" class="headerlink" title="logeventid (pattern)"></a>logeventid (pattern)</h3><p>描述：检查最近日志记录的EventID是否匹配正则表达式。</p><p>说明：pattern - 使用正则表达式表示需要匹配的模式， POSIX extended 类型。</p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: log</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">0 - 不匹配</span><br><span class="line">1 - 匹配</span><br><span class="line"></span><br><span class="line">从Zabbix 1.8.5开始支持该函数</span><br></pre></td></tr></table></figure></p><h3 id="logseverity"><a href="#logseverity" class="headerlink" title="logseverity"></a>logseverity</h3><p>描述：最近日志记录的日志等级。</p><p>说明：</p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: log</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">0 - 默认等级</span><br><span class="line">N - 对应的等级 (整数，常用语Windows event logs: 1 - Information, 2 - Warning, 4 - Error, 7 - Failure Audit, 8 - Success Audit, 9 - Critical, 10 - Verbose).</span><br><span class="line">Zabbix从Windows event log Information域获取日志等级。</span><br></pre></td></tr></table></figure></p><h3 id="logsource-pattern"><a href="#logsource-pattern" class="headerlink" title="logsource (pattern)"></a>logsource (pattern)</h3><p>描述：检查最近的日志记录是否匹配参数的日志来源。</p><p>说明：pattern - string类型</p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: log</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">0 - 不匹配</span><br><span class="line">1 - 匹配</span><br><span class="line">通常用于Windows event logs. 例如, logsource(&quot;VMware Server&quot;).</span><br></pre></td></tr></table></figure></p><h3 id="max-sec-num"><a href="#max-sec-num" class="headerlink" title="max (sec|#num,)"></a>max (sec|#num,<time_shift>)</time_shift></h3><p>描述：    指定评估期内一个项目的最大值。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sec or #num - 评估期以秒值或最新值个数（跟在#号后）表示</span><br><span class="line">time_shift (可选) - see avg()</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int</span><br><span class="line"></span><br><span class="line">从Zabbix 1.8.2开始支持 time_shift 参数。</span><br></pre></td></tr></table></figure></p><h3 id="min-sec-num"><a href="#min-sec-num" class="headerlink" title="min (sec|#num,)"></a>min (sec|#num,<time_shift>)</time_shift></h3><p>描述：指定评估期内一个项目的最小值。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sec or #num - 评估期以秒值或最新值个数（跟在#号后）表示</span><br><span class="line">time_shift (可选) - see avg(</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int</span><br><span class="line"></span><br><span class="line">从Zabbix 1.8.2开始支持 time_shift 参数。</span><br></pre></td></tr></table></figure></p><h3 id="nodata-sec"><a href="#nodata-sec" class="headerlink" title="nodata (sec)"></a>nodata (sec)</h3><p>描述：检查是否没有接收到数据。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sec - 评估期以秒值表示。</span><br><span class="line">时间不应该少于30秒，因为timer处理器每30秒计算一次该函数。</span><br><span class="line"></span><br><span class="line">nodata(0) 不被允许.</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: any</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">1 - 指定评估期没有接收到数据</span><br><span class="line">0 - 其它</span><br><span class="line"></span><br><span class="line">注意，如果在第一个参数指定的时间内出现以下问题，该函数会报错:</span><br><span class="line">- 没有数据以及Zabbix server被重启</span><br><span class="line">- 没有数据以及修复完成</span><br><span class="line">- 没有数据以及项目被添加或重新激活</span><br><span class="line">错误显示在触发器configuration的 Info 列 .</span><br></pre></td></tr></table></figure></p><h3 id="now"><a href="#now" class="headerlink" title="now"></a>now</h3><p>描述：距离Epoch (00:00:00 UTC, January 1, 1970)时间的秒数。</p><p>说明：</p><p>参数：支持值的类型: any</p><h3 id="percentile-sec-num-percentage"><a href="#percentile-sec-num-percentage" class="headerlink" title="percentile (sec|#num,,percentage)"></a>percentile (sec|#num,<time_shift>,percentage)</time_shift></h3><p>描述：P-th 一段时间的百分值， P (percentage) 做为第三个参数。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sec or #num - 评估期以秒值或最新值个数（跟在#号后）表示</span><br><span class="line">time_shift (可选) - see avg()</span><br><span class="line">percentage - 0 and 100 (包括)之间的一个浮点数，小数点后最多四位</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int</span><br><span class="line"></span><br><span class="line">从Zabbix 3.0.0开始支持该函数。</span><br></pre></td></tr></table></figure></p><h3 id="prev"><a href="#prev" class="headerlink" title="prev"></a>prev</h3><p>描述：前一个值。</p><p>说明：</p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int, str, text, log</span><br><span class="line"></span><br><span class="line">返回值和 last(#2)相同。</span><br></pre></td></tr></table></figure></p><h3 id="regexp-pattern"><a href="#regexp-pattern" class="headerlink" title="regexp (pattern,)"></a>regexp (pattern,<sec|#num>)</sec|#num></h3><p>描述：检查最近的值是否匹配正则表达式。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pattern - 正则表达式, POSIX extended 样式。</span><br><span class="line">sec or #num (可选) - 评估期以秒值或最新值个数（跟在#号后）表示。 这种情况下，可处理一个值以上。</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: str, text, log</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">1 - 找到</span><br><span class="line">0 - 其它</span><br><span class="line"></span><br><span class="line">该函数区分大小写。</span><br></pre></td></tr></table></figure></p><h3 id="str-pattern"><a href="#str-pattern" class="headerlink" title="str (pattern,)"></a>str (pattern,<sec|#num>)</sec|#num></h3><p>描述：从最新值中查找一个字符串。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pattern - string型</span><br><span class="line">sec or #num (可选) - 评估期以秒值或最新值个数（跟在#号后）表示。 这种情况下，可处理一个值以上。</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: str, text, log</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">1 - 找到</span><br><span class="line">0 - 其它</span><br><span class="line"></span><br><span class="line">该函数区分大小写。</span><br></pre></td></tr></table></figure></p><h3 id="strlen-sec-num"><a href="#strlen-sec-num" class="headerlink" title="strlen (sec|#num,)"></a>strlen (sec|#num,<time_shift>)</time_shift></h3><p>描述：最新值的字符长度（而不是字节数）。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sec (可省略) or #num - 最新的第N个值</span><br><span class="line">time_shift (可选) - see avg()</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: str, text, log</span><br><span class="line"></span><br><span class="line">注意此处的 #num 参数和其它一些函数的作用不用。</span><br><span class="line"></span><br><span class="line">例如:</span><br><span class="line">⇒ strlen()(等同于 strlen(#1)) → 最新值的长度</span><br><span class="line">⇒ strlen(#3) → 最新的第三个值的长度</span><br><span class="line">⇒ strlen(,1d) → 一天前最新值的长度。</span><br><span class="line"></span><br><span class="line">从Zabbix 1.8.4开始支持该函数。</span><br></pre></td></tr></table></figure></p><h3 id="sum-sec-num"><a href="#sum-sec-num" class="headerlink" title="sum (sec|#num,)"></a>sum (sec|#num,<time_shift>)</time_shift></h3><p>描述：指定评估期内项目值的和。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sec or #num - 评估期以秒值或最新值个数（跟在#号后）表示。</span><br><span class="line">time_shift (可选) - see avg()</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int</span><br><span class="line"></span><br><span class="line">从Zabbix 1.8.2开始支持 time_shift 参数。</span><br></pre></td></tr></table></figure></p><h3 id="time"><a href="#time" class="headerlink" title="time"></a>time</h3><p>描述：当前时间，以HHMMSS格式表示。</p><p>说明：</p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: any</span><br><span class="line"></span><br><span class="line">返回值如: 123055</span><br></pre></td></tr></table></figure></p><h3 id="timeleft-sec-num-threshold"><a href="#timeleft-sec-num-threshold" class="headerlink" title="timeleft (sec|#num,,threshold,)"></a>timeleft (sec|#num,<time_shift>,threshold,<fit>)</fit></time_shift></h3><p>描述：达到阀值需要多久时间。</p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sec or #num - 评估期以秒值或最新值个数（跟在#号后）表示。</span><br><span class="line">time_shift (可选) - see avg()</span><br><span class="line">threshold - 阀值</span><br><span class="line">fit (可选) - see forecast()</span><br></pre></td></tr></table></figure></p><p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">支持值的类型: float, int</span><br><span class="line"></span><br><span class="line">如果返回值大于 999999999999.9999, 则被设置为999999999999.9999.</span><br><span class="line"></span><br><span class="line">如果达不到阀值则将返回值设置为999999999999.9999。</span><br><span class="line"></span><br><span class="line">只有在表达式被误用时才不被支持（错误的项目类型，无效的参数），出现错误时返回-1。</span><br><span class="line"></span><br><span class="line">例如:</span><br><span class="line">⇒ timeleft(#10,,0) → 根据最新的十个值估计项目值达到0需要的时间</span><br><span class="line">⇒ timeleft(1h,,100) → 根据过去一小时的值估计项目值达到100需要的时间</span><br><span class="line">⇒ timeleft(1h,1d,0) → 根据一天前的一个小时值估计项目值达到0需要的时间</span><br><span class="line">⇒ timeleft(1h,,200,polynomial2) → 根据过去一小时并按照二次多项式方式估计项目值达到200需要的时间</span><br><span class="line"></span><br><span class="line">从Zabbix 3.0.0开始支持该函数。</span><br><span class="line">从Zabbix 3.0.6 和 3.2.2开始支持Unit symbols 的 ​threshold 参数。</span><br><span class="line">通过 predictive trigger functions查看扩展信息。</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;zabbix触发器函数说明&lt;/p&gt;
    
    </summary>
    
      <category term="skill" scheme="http://tokyle.com/categories/skill/"/>
    
    
      <category term="zabbix3.4" scheme="http://tokyle.com/tags/zabbix3-4/"/>
    
  </entry>
  
  <entry>
    <title>zabbix监控磁盘使用率</title>
    <link href="http://tokyle.com/2018/12/29/zabbix%E7%9B%91%E6%8E%A7%E7%A3%81%E7%9B%98%E4%BD%BF%E7%94%A8%E7%8E%87/"/>
    <id>http://tokyle.com/2018/12/29/zabbix监控磁盘使用率/</id>
    <published>2018-12-29T08:38:48.000Z</published>
    <updated>2018-12-29T08:54:51.910Z</updated>
    
    <content type="html"><![CDATA[<p>zabbix各种键值</p><a id="more"></a><p>做grafana对接zabbix展示磁盘指定分区当前使用百分比时候，找到了一篇总结了zabbix各种键值的博客，搬运来做记录</p><h3 id="监控磁盘"><a href="#监控磁盘" class="headerlink" title="监控磁盘"></a>监控磁盘</h3><p>zabbix监控linux不用分区磁盘使用量百分比方式：<br>配置-模板-Template OS Linux-自动发现规则-Mounted filesystem discovery-监控项原型，添加两个监控项，used以及pused（百分比）</p><p>used<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">名称：Used disk space on $1</span><br><span class="line"></span><br><span class="line">类型：zabbix客户端</span><br><span class="line"></span><br><span class="line">键值：“vfs.fs.size[/elasticsearch,used]”</span><br><span class="line"></span><br><span class="line">信息类型：数字（无正负）</span><br><span class="line"></span><br><span class="line">单位：B</span><br></pre></td></tr></table></figure></p><p>pused<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">名称：Used disk space on $1 (percentage)</span><br><span class="line"></span><br><span class="line">类型：zabbix客户端</span><br><span class="line"></span><br><span class="line">键值：“vfs.fs.size[/elasticsearch,pused]”</span><br><span class="line"></span><br><span class="line">信息类型：浮点型</span><br><span class="line"></span><br><span class="line">单位：%</span><br></pre></td></tr></table></figure></p><p>然后将图加进去：<code>图形原型</code>,”Disk space usage /elasticsearch”，选择<code>添加原型</code>，选择”Template OS Linux: Used disk space on /elasticsearch”保存，完成。</p><h3 id="各键值"><a href="#各键值" class="headerlink" title="各键值"></a>各键值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br></pre></td><td class="code"><pre><span class="line">以下表格是zabbix agent所支持的所有key列表，添加一项监控的时候，首先想到的应该是zabbix agent是否已经有相关的key存在，而不是自己去写脚本来获取key。</span><br><span class="line"></span><br><span class="line">agent.hostname</span><br><span class="line">返回被监控端名称(字符串)</span><br><span class="line"></span><br><span class="line">agent.ping</span><br><span class="line">检测被监控端是否存活(1:运行中 其他:未运行)-使用函数 nodata()检测客户端是否正在运行</span><br><span class="line"></span><br><span class="line">agent.version</span><br><span class="line">zabbix agent版本字符串</span><br><span class="line"></span><br><span class="line">kernel.maxfiles</span><br><span class="line">系统支持最大的open files整数</span><br><span class="line"></span><br><span class="line">kernel.maxproc</span><br><span class="line">系统支持最大的进程数量整数</span><br><span class="line"></span><br><span class="line">log[file,&lt;regexp&gt;,&lt;encoding&gt;,&lt;maxlines&gt;,&lt;mode&gt;,&lt;output&gt;]</span><br><span class="line">监控日志文件</span><br><span class="line">file - 文件详细路径</span><br><span class="line">regexp - 正则</span><br><span class="line">encoding - 编码</span><br><span class="line">maxlines - zabbix agent向server或者proxy发送最大的行数。</span><br><span class="line">  这个参数覆盖配置文件zabbxi_agentd.conf中的’MaxLinesPerSecond’</span><br><span class="line">mode - 可选值:all (默认), skip (跳过处理老数据).mode参数从2.0版本开始支持</span><br><span class="line">output - 可选项，输出格式模板.</span><br><span class="line">示例: log[/var/log/syslog] log[/var/log/syslog,error] log[/home/zabbix/logs/logfile,,,100]</span><br><span class="line"></span><br><span class="line">logrt[file_pattern,&lt;regexp&gt;,&lt;encoding&gt;,&lt;maxlines&gt;,&lt;mode&gt;,&lt;output&gt;]</span><br><span class="line">Monitoring of log file with log rotation support.</span><br><span class="line">file_pattern - 文件绝对路径</span><br><span class="line"></span><br><span class="line">net.dns[&lt;ip&gt;,zone,&lt;type&gt;,&lt;timeout&gt;,&lt;count&gt;]</span><br><span class="line">检测DNS服务是否开启0 – DNS挂了  1 - DNS运行中</span><br><span class="line">ip - DNS服务器的ip地址(留空表示使用本地DNS, ignored onWindows)</span><br><span class="line">zone - 需要测试的域名</span><br><span class="line">type - 记录类型 (默认为 SOA),type可选值:  ANY, A, NS, CNAME, MB, MG, MR, PTR, MD, MF, MX, SOA, NULL, WKS (除了windows), HINFO, MINFO, TXT, SRV SRV</span><br><span class="line">timeout (ignored on Windows) – 超时时间(默认1秒)</span><br><span class="line">count (ignored on Windows) – 重试次数 (默认值2)</span><br><span class="line">示例key: net.dns[8.8.8.8,zabbix.com,MX,2,1]</span><br><span class="line"></span><br><span class="line">net.dns.record[&lt;ip&gt;,zone,&lt;type&gt;,&lt;timeout&gt;,&lt;count&gt;]</span><br><span class="line">执行一个DNS查询获取DNS查询数据.</span><br><span class="line">ip - DNS服务器的ip地址(留空表示使用本地DNS, ignored on Windows)</span><br><span class="line">zone - 需要测试的域名</span><br><span class="line">type - 记录类型 (默认SOA,可选值同net.dns)</span><br><span class="line">timeout (ignored on Windows) – 超时时间(默认1秒)</span><br><span class="line">count (ignored on Windows) – 重试次数 (默认值2)</span><br><span class="line">示例key: net.dns.record[8.8.8.8,ttlsa.com,MX,2,1]</span><br><span class="line"></span><br><span class="line">net.if.collisions[if]</span><br><span class="line">Out-of-window collision.Number of collisions. Integer.if - 网卡</span><br><span class="line"></span><br><span class="line">net.if.discovery</span><br><span class="line">列出网卡.通常用于低级别的discovery.JSON对象</span><br><span class="line"></span><br><span class="line">net.if.in[if,&lt;mode&gt;]</span><br><span class="line">网卡入口流量整数.</span><br><span class="line">if - 网卡名称</span><br><span class="line">mode - 可用值: bytes - 字节数 (默认)</span><br><span class="line">packets - 包数量</span><br><span class="line">errors - 错误数量</span><br><span class="line">dropped - 丢包数量</span><br><span class="line">示例keys: net.if.in[eth0,errors] net.if.in[eth0]</span><br><span class="line"></span><br><span class="line">net.if.out[if,&lt;mode&gt;]</span><br><span class="line">网卡出口流量（参数参见net.if.in）</span><br><span class="line"></span><br><span class="line">net.if.total[if,&lt;mode&gt;]</span><br><span class="line">网卡进/出流量的总和（参数参见net.if.in）</span><br><span class="line"></span><br><span class="line">net.tcp.listen[port]</span><br><span class="line">检测端口是否开启0 – （not listen） 1 –  in LISTEN stateport</span><br><span class="line">示例: net.tcp.listen[80]</span><br><span class="line"></span><br><span class="line">net.tcp.port[&lt;ip&gt;,port]</span><br><span class="line">是否可以连接到指定的TCP端口0 – cannot connect 1 – can connect</span><br><span class="line">   ip - IP地址(默认是 127.0.0.1)</span><br><span class="line">   port - 端口</span><br><span class="line">范例: net.tcp.port[,80] 检测web服务器端口是否运行中</span><br><span class="line"></span><br><span class="line">net.tcp.service[service,&lt;ip&gt;,&lt;port&gt;]</span><br><span class="line">检测服务是否开启，并且端口可用0 – 服务挂了 1 – 服务运行中</span><br><span class="line">    service - 如下:ssh, ntp, ldap, smtp, ftp, http, pop, nntp,imap, tcp, https, telnet</span><br><span class="line">    ip - IP地址 (默认127.0.0.1)</span><br><span class="line">    port - 端口 (默认情况为标准端口号)</span><br><span class="line">示例key: net.tcp.service[ftp,,45]</span><br><span class="line"></span><br><span class="line">net.tcp.service.perf[service,&lt;ip&gt;,&lt;port&gt;]</span><br><span class="line">检测服务器性能0 – 服务挂了; seconds – 链接到服务器端口消耗的时间</span><br><span class="line">service - 如下:ssh, ntp, ldap, smtp, ftp, http, pop, nntp,imap, tcp, https, telnet</span><br><span class="line">ip - IP地址 (默认127.0.0.1)</span><br><span class="line">port - 端口 (默认情况为标准端口号)</span><br><span class="line">示例key: net.tcp.service.perf[ssh]</span><br><span class="line"></span><br><span class="line">         net.udp.listen[port]</span><br><span class="line"></span><br><span class="line">proc.mem[&lt;name&gt;,&lt;user&gt;,&lt;mode&gt;,&lt;cmdline&gt;]</span><br><span class="line">用户进程消耗的内存内存使用量 (字节单位).</span><br><span class="line">name - 进程名 (默认值 “all processes”)</span><br><span class="line">user - 用户名 (默认值“all users”)</span><br><span class="line">mode - 可选值: avg, max, min, sum (默认)</span><br><span class="line">cmdline - 命令行过滤(正则表达时)</span><br><span class="line">示例keys: proc.mem[,root] – root的进程消耗了多少内存</span><br><span class="line">    proc.mem[zabbix_server,zabbix] – zabbix用户运行的zabbix_server使用了多少内存</span><br><span class="line">    proc.mem[,oracle,max,oracleZABBIX]</span><br><span class="line"></span><br><span class="line">proc.num[&lt;name&gt;,&lt;user&gt;,&lt;state&gt;,&lt;cmdline&gt;]</span><br><span class="line">某用户某些状态的进程的数量进程数量</span><br><span class="line">name - 进程名称 (默认“all processes”)</span><br><span class="line">user - 用户名 (默认 “all users”)</span><br><span class="line">state - 可用值: all (默认), run,sleep, zomb</span><br><span class="line">cmdline - 命令行过滤(正则表达时)</span><br><span class="line">示例keys: proc.num[,mysql] – MySQL用户运行的进程数量</span><br><span class="line">proc.num[apache2,www-data] – www-data运行了多少个apache2进程</span><br><span class="line">proc.num[,oracle,sleep,oracleZABBIX]</span><br><span class="line">备注：Windows系统只支持name和user两个参数</span><br><span class="line"></span><br><span class="line">sensor[device,sensor,&lt;mode&gt;]</span><br><span class="line">读取硬件传感器</span><br><span class="line">device - 设备名称</span><br><span class="line">sensor - 传感器名称</span><br><span class="line">mode - 可选值:avg, max, min</span><br><span class="line">示例key: sensor[w83781d-i2c-0-2d,temp1] Prior to Zabbix 1.8.4, the sensor[temp1] format was used. On Linux 2.6+, 读取/sys/class/hwmon. On OpenBSD, 读取hw.sensors MIB.示例keys: sensor[cpu0,temp0] – CPU0的温度 sensor[cpu[0-2]$,temp,avg] – cpu平均温度Zabbix 1.8.4开始支持OpenBSD</span><br><span class="line"></span><br><span class="line">system.boottime</span><br><span class="line">系统启动的时间戳整数.unix时间戳</span><br><span class="line"></span><br><span class="line">system.cpu.intr</span><br><span class="line">设备中断整数</span><br><span class="line"></span><br><span class="line">system.cpu.load[&lt;cpu&gt;,&lt;mode&gt;]</span><br><span class="line">CPU负载浮点数</span><br><span class="line">cpu - 可用值: all (默认), percpu (所有在线cpu的负载)</span><br><span class="line">mode - 可用值:avg1 (1分钟 默认值), avg5(5分钟平均), avg15 (15分钟平均值)</span><br><span class="line">范例key: system.cpu.load[,avg5]</span><br><span class="line"></span><br><span class="line">system.cpu.num[&lt;type&gt;]</span><br><span class="line">CPU数量处理器个数type - 可用值: online (默认值), max范例: system.cpu.num</span><br><span class="line"></span><br><span class="line">system.cpu.switches</span><br><span class="line">上下文交换交换次数老命名方式: system[switches]</span><br><span class="line"></span><br><span class="line">system.cpu.util[&lt;cpu&gt;,&lt;type&gt;,&lt;mode&gt;]</span><br><span class="line">CPU利用率百分比</span><br><span class="line">cpu - cpu数量 (默认是所有cpu)</span><br><span class="line">type - 可用值: idle, nice, user (默认), system (windows系统默认值）, iowait, interrupt, softirq,steal</span><br><span class="line">mode - 可用值: avg1 (一分钟平均，默认值), avg5(5分钟平均, avg15 (15分钟平均值)</span><br><span class="line">范例key: system.cpu.util[0,user,avg5]</span><br><span class="line"></span><br><span class="line">system.hostname[&lt;type&gt;]</span><br><span class="line">返回主机名字符串</span><br><span class="line">type (仅用于windows系统) – 可用值: netbios(默认) or host</span><br><span class="line"></span><br><span class="line">system.hw.chassis[&lt;info&gt;]</span><br><span class="line">返回机架信息字符串</span><br><span class="line">info - full (默认), model, serial, type 或vendor</span><br><span class="line">例如: system.hw.chassis</span><br><span class="line">Hewlett-Packard HP Pro 3010 Small Form Factor PC CZXXXXXXXX Desktop]</span><br><span class="line">备注：要root权限，因为这些信息是从内存中读取的。</span><br><span class="line"></span><br><span class="line">system.hw.cpu[&lt;cpu&gt;,&lt;info&gt;]</span><br><span class="line">返回CPU信息字符/数字</span><br><span class="line">cpu - cpu数量或者all (默认)</span><br><span class="line">info - full (默认), curfreq, maxfreq, model 或者vendor</span><br><span class="line">例如: system.hw.cpu[0,vendor] AuthenticAMD 从/proc/cpuinfo、/sys/devices/system/cpu/[cpunum]/cpufreq/cpuinfo_max_freq获取信息. 如果指定了CPU数量和 curfreq或者maxfreq, 将会返回数值(Hz).</span><br><span class="line"></span><br><span class="line">system.hw.devices[&lt;type&gt;]</span><br><span class="line">列出PCI或者USB文本值</span><br><span class="line">type - pci (默认) or usb</span><br><span class="line">范例: system.hw.devices[pci] 00:00.0 Host bridge: Advanced Micro Devices [AMD] RS780 Host Bridge [..] 返回lspci或者lsusb (不带参数)</span><br><span class="line"></span><br><span class="line">system.hw.macaddr[&lt;interface&gt;,&lt;format&gt;]</span><br><span class="line">列出MAC地址字符串</span><br><span class="line">interface - all (默认) 或者正则表达式</span><br><span class="line">format - full (默认) 、short</span><br><span class="line">范例: system.hw.macaddr[&quot;eth0$&quot;,full] [eth0] 00:11:22:33:44:55 列出指定接口mac地址 如果format指定为short，MAC地址相同的将会被忽略掉</span><br><span class="line"></span><br><span class="line">system.localtime[&lt;type&gt;]</span><br><span class="line">系统时间.数字或者字符串</span><br><span class="line"></span><br><span class="line">system.run[command,&lt;mode&gt;]</span><br><span class="line">在制定的主机上运行命令文本</span><br><span class="line">command - 命令</span><br><span class="line">mode - wait (默认值, 执行超时时间), nowait (不等待)最大可用返回512KB数据，包含空白数据。 命令输出数据必须是文本</span><br><span class="line">例如: system.run[ls -l /] – 列出/的文件和目录.</span><br><span class="line">Note: 启用这个方法, agent配置文件必须配置 EnableRemoteCommands=1选项</span><br><span class="line"></span><br><span class="line">system.stat[resource,&lt;type&gt;]</span><br><span class="line">虚拟内存状态数字ent</span><br><span class="line"></span><br><span class="line">system.sw.arch</span><br><span class="line">返回软件信息字符串</span><br><span class="line">范例: system.sw.arch i686</span><br><span class="line"></span><br><span class="line">system.sw.os[&lt;info&gt;]</span><br><span class="line">返回系统信息字符串</span><br><span class="line">info - full (default), short ,name</span><br><span class="line">范例: system.sw.os[short] Ubuntu 2.6.35-28.50-generic 2.6.35.11</span><br><span class="line">信息来自如下文件：</span><br><span class="line">/proc/version [short]</span><br><span class="line">/proc/version_signature [name]</span><br><span class="line">/etc/issue.net</span><br><span class="line"></span><br><span class="line">system.sw.packages[&lt;package&gt;,&lt;manager&gt;,&lt;format&gt;]</span><br><span class="line">已安装软件列表文本值</span><br><span class="line">package - all (默认)或者正则表达式</span><br><span class="line">manager - all (默认) or a package manager</span><br><span class="line">format - full (默认) ，short</span><br><span class="line">范例: system.sw.packages[mini,dpkg,short]</span><br><span class="line"></span><br><span class="line">system.swap.in[&lt;device&gt;,&lt;type&gt;]</span><br><span class="line">交换分区IN（磁盘交换到内存）数字</span><br><span class="line">device - 交换分区设备 (默认all)</span><br><span class="line">type - 可选值: count (swapins数量), sectors(sectors swapped in), pages (pages swapped in).</span><br><span class="line">示例key: system.swap.in[,pages]</span><br><span class="line">数据采集自: Linux 2.4: /proc/swaps, /proc/partitions, /proc/stat</span><br><span class="line">            Linux 2.6: /proc/swaps, /proc/diskstats, /proc/vmstat</span><br><span class="line"></span><br><span class="line">system.swap.out[&lt;device&gt;,&lt;type&gt;]</span><br><span class="line">Swap out (f内存到磁盘) .数字</span><br><span class="line">device - swap设备 (默认all)</span><br><span class="line">type - count (number of swapouts), sectors(sectors swapped out), pages (pages swapped out). 示</span><br><span class="line">例key: system.swap.out[,pages]</span><br><span class="line">数据采集自: Linux 2.4: /proc/swaps, /proc/partitions, /proc/stat</span><br><span class="line">            Linux 2.6: /proc/swaps, /proc/diskstats, /proc/vmstat</span><br><span class="line"></span><br><span class="line">system.swap.size[&lt;device&gt;,&lt;type&gt;]</span><br><span class="line">交换分区大小字节或者百分比</span><br><span class="line">device - 交换分区 (默认值 all)</span><br><span class="line">type - free (free swap space, default), pfree (free swap space, in percent), pused (used swap space, in percent), total (total swap space), used (used swap space)</span><br><span class="line">示例 system.swap.size[,pfree] – 空闲swap百分比</span><br><span class="line"></span><br><span class="line">system.uname</span><br><span class="line">返回主机相信信息.字符串</span><br><span class="line"></span><br><span class="line">system.uptime</span><br><span class="line">系统运行时长(秒)多少秒使用s/uptime来获取</span><br><span class="line"></span><br><span class="line">system.users.num</span><br><span class="line">登陆用户数量多少用户agent使用who命令获取</span><br><span class="line"></span><br><span class="line">vfs.dev.read[&lt;device&gt;,&lt;type&gt;,&lt;mode&gt;]</span><br><span class="line">磁盘读取状态整数，浮点数（如果type为如下）</span><br><span class="line">device - 磁盘设备 (默认值 “all”)  </span><br><span class="line">type - 可选值:sectors, operations, bytes, sps, ops, bps(必须指定, 不同操作系统下不同).  sps, ops, bps stand for: sectors, operations, bytes per second, respectively</span><br><span class="line">mode - 可选值: avg1, avg5, avg15.  </span><br><span class="line">备注: 只有type为sps, ops, bps的时候，第三个参数才被支持。</span><br><span class="line">不同操作系统的TYPE参数： FreeBSD – bps Linux – sps OpenBSD – operations Solaris – bytes</span><br><span class="line">示例key: vfs.dev.read[,operations]</span><br><span class="line"></span><br><span class="line">vfs.dev.write[&lt;device&gt;,&lt;type&gt;,&lt;mode&gt;]</span><br><span class="line">磁盘写入状态整数，</span><br><span class="line">device - 磁盘设备 (默认 all)  </span><br><span class="line">type - sectors, operations, bytes, sps, ops, bps</span><br><span class="line">mode - one of avg1 (default),avg5 , avg15.</span><br><span class="line">example: vfs.dev.write[,operations] Old naming: io</span><br><span class="line"></span><br><span class="line">vfs.file.cksum[file]</span><br><span class="line">计算文件校验 UNIX cksum.</span><br><span class="line">file - 文件完整路径</span><br><span class="line"></span><br><span class="line">vfs.file.contents[file,&lt;encoding&gt;]</span><br><span class="line">获取文本内容若为空，只返回 LF/CR characters.</span><br><span class="line">file - 文件完整路径</span><br><span class="line">例如: vfs.file.contents[/etc/passwd] 文件不可以超过64KB.  </span><br><span class="line"></span><br><span class="line">vfs.file.exists[file]</span><br><span class="line">检测文件是否存在1 – 存在 0 – 不存在</span><br><span class="line">    file - 文件完整路径</span><br><span class="line"></span><br><span class="line">vfs.file.md5sum[file]</span><br><span class="line">文件MD5校验码文件MD5哈希值</span><br><span class="line">file - 完整路径</span><br><span class="line"></span><br><span class="line">vfs.file.regexp[file,regexp,&lt;encoding&gt;,&lt;start line&gt;,&lt;end line&gt;,&lt;output&gt;]</span><br><span class="line">文件中搜索字符串包含字符串的行，或者为空</span><br><span class="line">file - 文件完整路径</span><br><span class="line">regexp - GNU正则表达式</span><br><span class="line">encoding - 编码</span><br><span class="line">start line - 从哪一行开始，默认第一行</span><br><span class="line">end line - 从哪一行结束，默认最后一行</span><br><span class="line">如: vfs.file.regexp[/etc/passwd,zabbix]</span><br><span class="line">    vfs.file.regexp[/path/to/some/file,”([0-9]+)$”,,3,5,\1]</span><br><span class="line">    vfs.file.regexp[/etc/passwd,^zabbix:.:([0-9]+),,,,\1]</span><br><span class="line"></span><br><span class="line">vfs.file.regmatch[file,regexp,&lt;encoding&gt;,&lt;start line&gt;,&lt;end line&gt;]</span><br><span class="line">文件中搜索字符串0 – 未找到 1 – 找到</span><br><span class="line">file - 文件完整路径</span><br><span class="line">regexp - GNU 正则表达式</span><br><span class="line">encoding - 编码</span><br><span class="line">start line - 哪行开始，默认第一行</span><br><span class="line">end line - 哪行结束，默认最后一行</span><br><span class="line">例如: vfs.file.regmatch[/var/log/app.log,error]</span><br><span class="line"></span><br><span class="line">vfs.file.size[file]</span><br><span class="line">文件大小字节fzabbix必须有可读此文件的权限</span><br><span class="line"></span><br><span class="line">vfs.file.time[file,&lt;mode&gt;]</span><br><span class="line">文件时间信息Unix 时间戳.</span><br><span class="line">mode -  modify (默认, 修改时间), access – 最后访问时间, change – 最后改变时间</span><br><span class="line">例如: vfs.file.time[/etc/passwd,modify] 备注：文件大小有限制</span><br><span class="line"></span><br><span class="line">vfs.fs.discovery</span><br><span class="line">列出挂载的文件系统 用于lld.JSON对象</span><br><span class="line"></span><br><span class="line">vfs.fs.inode[fs,&lt;mode&gt;]</span><br><span class="line">inodes数量数字</span><br><span class="line">fs - 文件系统</span><br><span class="line">mode - total (默认), free, used, pfree (空闲百分比), pused (使用百分比)</span><br><span class="line">例如: vfs.fs.inode[/,pfree]</span><br><span class="line"></span><br><span class="line">vfs.fs.size[fs,&lt;mode&gt;]</span><br><span class="line">磁盘空间，返回本地文件系统的使用量字节</span><br><span class="line">fs - 文件系统</span><br><span class="line">mode -  total (默认), free, used, pfree (空闲百分比), pused (使用百分比).</span><br><span class="line">例如: vfs.fs.size[/tmp,free]</span><br><span class="line"></span><br><span class="line">vm.memory.size[&lt;mode&gt;]</span><br><span class="line">内存大小字节或百分比</span><br><span class="line">mode - total (默认), active, anon, buffers, cached, exec, file, free, inactive, pinned, shared, wired, used, pused, available</span><br><span class="line">监控项vm.memory.size[] 允许三种类型的参数：</span><br><span class="line">第一类：包含total - 总内存</span><br><span class="line">第二类： 系统指定内存类型:active, anon, buffers, cached, exec, file, free, inactive,pinned, shared, wired. 第三类：用户级别，一共使用了多少内存，还有多少内存可用: used, pused, available,pavailable.</span><br><span class="line"></span><br><span class="line">web.page.get[host,&lt;path&gt;,&lt;port&gt;]</span><br><span class="line">获取网页内容网页源代码</span><br><span class="line">host - 主机名/域名</span><br><span class="line">path - 文件地址，默认/</span><br><span class="line">port - 端口，默认80返回空字符串表示失败. 例如: web.page.get[</span><br><span class="line"></span><br><span class="line">web.page.perf[host,&lt;path&gt;,&lt;port&gt;]</span><br><span class="line">获取完全加载网页消耗的时长秒，返回0表示失败</span><br><span class="line">host - 主机名/域名</span><br><span class="line">path - html地址，默认是/</span><br><span class="line">port - 端口,默认80</span><br><span class="line"></span><br><span class="line">web.page.regexp[host,&lt;path&gt;,&lt;port&gt;,&lt;regexp&gt;,&lt;length&gt;,&lt;output&gt;]</span><br><span class="line">在网页中搜索字符串  失败则返回空字符 (不匹配).</span><br><span class="line">host - 主机名</span><br><span class="line">path - html文件路径 (默认值 /)</span><br><span class="line">port - 端口 (默认80)</span><br><span class="line">regexp - GNU正则表达式</span><br><span class="line">length - 返回的最大的字符串数量</span><br><span class="line">output - 输出格式模板可选项.</span><br></pre></td></tr></table></figure><h3 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h3><blockquote><p><a href="https://blog.csdn.net/chuang3344/article/details/74081682" target="_blank" rel="noopener">参考博客</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;zabbix各种键值&lt;/p&gt;
    
    </summary>
    
      <category term="skill" scheme="http://tokyle.com/categories/skill/"/>
    
    
      <category term="zabbix3.4" scheme="http://tokyle.com/tags/zabbix3-4/"/>
    
  </entry>
  
  <entry>
    <title>MySQL启用弱口令</title>
    <link href="http://tokyle.com/2018/12/25/MySQL%E5%90%AF%E7%94%A8%E5%BC%B1%E5%8F%A3%E4%BB%A4/"/>
    <id>http://tokyle.com/2018/12/25/MySQL启用弱口令/</id>
    <published>2018-12-25T07:07:03.000Z</published>
    <updated>2018-12-25T07:08:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL启动弱口令</p><p>有的时候，有点懒，测试环境就想数据库密码简单点，不用什么大小写，特殊字符各种组合</p><a id="more"></a><p>root用户登录<br><code>mysql -uroot -p</code></p><p>查看密码策略：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW VARIABLES LIKE &apos;validate_password%&apos;;</span><br></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &quot;validate_password%&quot;;</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line">| Variable_name                        | Value  |</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line">| validate_password_check_user_name    | OFF    |</span><br><span class="line">| validate_password_dictionary_file    |        |</span><br><span class="line">| validate_password_length             | 8      |</span><br><span class="line">| validate_password_mixed_case_count   | 1      |</span><br><span class="line">| validate_password_number_count       | 1      |</span><br><span class="line">| validate_password_policy             | MEDIUM |</span><br><span class="line">| validate_password_special_char_count | 1      |</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><p>主要修改两个即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global validate_password_policy=0;</span><br></pre></td></tr></table></figure></p><p>值含义：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0 or LOW Length</span><br><span class="line">1 or MEDIUMLength; numeric, lowercase/uppercase, and special characters</span><br><span class="line">2 or STRONGLength; numeric, lowercase/uppercase, and special characters; dictionary file</span><br></pre></td></tr></table></figure></p><p>另一个：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global validate_password_length=6;</span><br></pre></td></tr></table></figure></p><p>这个值有最小值限制：<code>validate_password_number_count + validate_password_special_char_count + (2 * validate_password_mixed_case_count)</code><br>所以默认的validate_password_length最小值是4</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL启动弱口令&lt;/p&gt;
&lt;p&gt;有的时候，有点懒，测试环境就想数据库密码简单点，不用什么大小写，特殊字符各种组合&lt;/p&gt;
    
    </summary>
    
      <category term="计算机基础" scheme="http://tokyle.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="mysql" scheme="http://tokyle.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Linux几个变量</title>
    <link href="http://tokyle.com/2018/12/24/Linux%E5%87%A0%E4%B8%AA%E5%8F%98%E9%87%8F/"/>
    <id>http://tokyle.com/2018/12/24/Linux几个变量/</id>
    <published>2018-12-24T06:52:46.000Z</published>
    <updated>2018-12-24T06:54:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>linux shell中部分变量的含义</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$0：脚本名</span><br><span class="line"></span><br><span class="line">$1：传给脚本的第一个参数</span><br><span class="line"></span><br><span class="line">$2：传给脚本的第二个参数</span><br><span class="line"></span><br><span class="line">$$：脚本运行的PID</span><br><span class="line"></span><br><span class="line">$@：传给脚本的所有参数列表（list形式）</span><br><span class="line"></span><br><span class="line">$*：传给脚本的所有参数列表（字符串形式）</span><br><span class="line"></span><br><span class="line">$#：传给脚本的参数个数</span><br><span class="line"></span><br><span class="line">$?：上个已执行命令的退出状态码，成功为0</span><br></pre></td></tr></table></figure><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># test linux variables</span><br><span class="line"># 20181224 by kyle</span><br><span class="line"></span><br><span class="line"># 使用basename获取脚本名，避免输出脚本名时候带上命令:./test1.sh</span><br><span class="line">name=$(basename $0)</span><br><span class="line"></span><br><span class="line">echo </span><br><span class="line">echo &quot;number of variables is：$#&quot;</span><br><span class="line">echo &quot;the first variable is: $1&quot;</span><br><span class="line">echo &quot;the second is: $2&quot;</span><br><span class="line">echo &quot;the scrip&apos;s name is: $name&quot;</span><br><span class="line">echo &quot;the script&apos;s PID is: $$&quot;</span><br><span class="line">echo &quot;the parameters are: $@&quot;</span><br><span class="line">echo &quot;the parameter list is: $*&quot;</span><br><span class="line">echo &quot;show script stat: $?&quot;</span><br><span class="line">echo</span><br></pre></td></tr></table></figure></p><p>执行结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mountTest]# ./VariablesTest.sh </span><br><span class="line"></span><br><span class="line">number of variables is：0</span><br><span class="line">the first variable is: </span><br><span class="line">the second is: </span><br><span class="line">the scrip&apos;s name is: VariablesTest.sh</span><br><span class="line">the script&apos;s PID is: 4829</span><br><span class="line">the parameters are: </span><br><span class="line">the parameter list is: </span><br><span class="line">show script stat: 0</span><br></pre></td></tr></table></figure></p><p><strong>比较“$@”和“$*”</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># compare $@ with $*</span><br><span class="line"># 20181224 by kyle</span><br><span class="line"></span><br><span class="line">echo </span><br><span class="line">echo &quot;followed by \$*&quot;</span><br><span class="line">count=1</span><br><span class="line">#</span><br><span class="line">for param in &quot;$*&quot;</span><br><span class="line">do</span><br><span class="line">  echo &quot;\$* Parameter #$count = $param&quot;</span><br><span class="line">  count=$[ $count + 1 ]</span><br><span class="line">done</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">echo </span><br><span class="line">echo &quot;Here is \$@&quot;</span><br><span class="line">count=1</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">for param in &quot;$@&quot;</span><br><span class="line">do</span><br><span class="line">  echo &quot;\$@ Parameter #$count = $param&quot;</span><br><span class="line">  count=$[ $count + 1 ]</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p><p>执行结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mountTest]# ./ShellTest.sh 1 2 3 4 5 </span><br><span class="line"></span><br><span class="line">followed by $*</span><br><span class="line">$* Parameter #1 = 1 2 3 4 5</span><br><span class="line"></span><br><span class="line">Here is $@</span><br><span class="line">$@ Parameter #1 = 1</span><br><span class="line">$@ Parameter #2 = 2</span><br><span class="line">$@ Parameter #3 = 3</span><br><span class="line">$@ Parameter #4 = 4</span><br><span class="line">$@ Parameter #5 = 5</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux shell中部分变量的含义&lt;/p&gt;
    
    </summary>
    
      <category term="计算机基础" scheme="http://tokyle.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Centos7" scheme="http://tokyle.com/tags/Centos7/"/>
    
  </entry>
  
  <entry>
    <title>zabbix监控磁盘IO</title>
    <link href="http://tokyle.com/2018/12/21/zabbix%E7%9B%91%E6%8E%A7%E7%A3%81%E7%9B%98IO/"/>
    <id>http://tokyle.com/2018/12/21/zabbix监控磁盘IO/</id>
    <published>2018-12-21T07:53:45.000Z</published>
    <updated>2019-02-27T09:40:35.812Z</updated>
    
    <content type="html"><![CDATA[<p>zabbix监控Linux磁盘IO</p><a id="more"></a><h3 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h3><p>首先是查询磁盘类型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost script]# fdisk -l</span><br><span class="line"></span><br><span class="line">Disk /dev/vda: 214.7 GB, 214748364800 bytes, 419430400 sectors</span><br></pre></td></tr></table></figure></p><p>服务器上，基本是在vda盘上进行的IO，所以本次就监控vda就可以了<br>或者直接<code>iostat -dxk 2</code>看一下效果，哪个设备是需要进行监控的，直接grep即可</p><p>附linux硬件设备概览(/dev目录下)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ide硬盘：/dev/hd[a-d]</span><br><span class="line"></span><br><span class="line">SCSI/SATA/USB硬盘：/dev/sd[a-p]</span><br><span class="line"></span><br><span class="line">u盘：/dev/sd[a-p]</span><br><span class="line"></span><br><span class="line">软驱：/dev/fd[0-1]</span><br><span class="line"></span><br><span class="line">打印机：25针：/dev/lp[0-2]；USB: /dev/usb/lp[0-15]</span><br><span class="line"></span><br><span class="line">鼠标：usb: /dev/usb/mouse[0-15]；ps2: /dev/psaux</span><br><span class="line"></span><br><span class="line">当前cd rom/dvd rom：/dev/cdrom</span><br><span class="line"></span><br><span class="line">当前鼠标：/dev/mouse</span><br></pre></td></tr></table></figure></p><h3 id="获取item值"><a href="#获取item值" class="headerlink" title="获取item值"></a>获取item值</h3><p>使用zabbix监控磁盘IO，只需要在服务器装一个zabbix_agent就，配置完监控脚本即可，这边也就不多说怎么装，怎么配置了，直接上脚本：</p><p><code>userparameter_mysql.conf</code>(/etc/zabbix/zabbix_agentd.d)添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UserParameter=disk.status[*],/etc/zabbix/script/disk-status.sdisk-status.sh $1</span><br></pre></td></tr></table></figure></p><p>相应的，在<code>/etc/zabbix/script</code>文件下，创建磁盘信息获取脚本<code>disk-status.sh</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim disk-status.sh</span><br></pre></td></tr></table></figure></p><p>内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"># 参数是否正确</span><br><span class="line">if [ $# -ne &quot;1&quot; ];then</span><br><span class="line">    echo &quot;arg error!&quot; </span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line"></span><br><span class="line">    rrqm)</span><br><span class="line">        iostat -dxk 1 2|grep -w vda|tail -1 |awk &apos;&#123;print $2&#125;&apos;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">    wrqm)</span><br><span class="line">        iostat -dxk 1 2|grep -w vda |tail -1 |awk &apos;&#123;print $3&#125;&apos;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">    rps)</span><br><span class="line">        iostat -dxk 1 2|grep -w vda |tail -1 |awk &apos;&#123;print $4&#125;&apos;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">    wps)</span><br><span class="line">        iostat -dxk 1 2|grep -w vda |tail -1 |awk &apos;&#123;print $5&#125;&apos;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">    rKBps)</span><br><span class="line">        iostat -dxk 1 2|grep -w vda |tail -1 |awk &apos;&#123;print $6&#125;&apos;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">    wKBps)</span><br><span class="line">        iostat -dxk 1 2|grep -w vda |tail -1 |awk &apos;&#123;print $7&#125;&apos;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">    avgrq-sz)</span><br><span class="line">        iostat -dxk 1 2|grep -w vda |tail -1 |awk &apos;&#123;print $8&#125;&apos;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">    avgqu-sz)</span><br><span class="line">        iostat -dxk 1 2|grep -w vda |tail -1 |awk &apos;&#123;print $9&#125;&apos;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">    await)</span><br><span class="line">        iostat -dxk 1 2|grep -w vda |tail -1 |awk &apos;&#123;print $10&#125;&apos;</span><br><span class="line">        ;;</span><br><span class="line">    svctm)</span><br><span class="line">        iostat -dxk 1 2|grep -w vda |tail -1 |awk &apos;&#123;print $13&#125;&apos;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">    util)</span><br><span class="line">        iostat -dxk 1 2|grep -w vda |tail -1 |awk &apos;&#123;print $14&#125;&apos;</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">    *)</span><br><span class="line">        echo &quot;Usage:$0(rrqm|wrqm|rps|wps|rKBps|wKBps|avgqu-sz|avgrq-sz|await|svctm|util)&quot;</span><br><span class="line">        ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>配置完成，重启zabbix_agent：<code>systemctl restart zabbix-agent</code></p><p>验证：<br>使用zabbix_get来验证：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost script]# zabbix_get -s 192.168.0.110 -k disk.status[util]</span><br><span class="line">3.77</span><br></pre></td></tr></table></figure></p><p>util%当前是3.77%，表明zabbix_agent监控配置成功。</p><h3 id="zabbix-web配置"><a href="#zabbix-web配置" class="headerlink" title="zabbix web配置"></a>zabbix web配置</h3><p>在zabbix web界面，配置-&gt; 模板，创建模板，Disk IO<br>在创建的模板中，选择监控项，点击创建监控项，以<code>await</code>为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">名称：await IO等待时间</span><br><span class="line">类型：zabbix客户端</span><br><span class="line">键值：disk.status[await]</span><br><span class="line">信息类型：浮点数</span><br><span class="line">应用集：Disk IO(自建)</span><br></pre></td></tr></table></figure></p><p>保存即可</p><h3 id="Grafana展示"><a href="#Grafana展示" class="headerlink" title="Grafana展示"></a>Grafana展示</h3><p>zabbix自己的监控图，说实话，有点别扭，可以截止grafana做展示。<br>配置datasource：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name: Zabbix test</span><br><span class="line">Type：Zabbix</span><br><span class="line">URL： http://IP/zabbix/api_jsonrpc.php(IP为zabbix server机器的IP)</span><br><span class="line">Access：Browser</span><br></pre></td></tr></table></figure></p><p>配置Zabbix API details  用户名/密码。是否使用直连数据库的数据，有配置zabbix的数据量的话可以选，不然不选也行；是否启用告警，选启用好了。</p><p>监控的dashboard，创建很简单，也可以直接找做好的导入即可。</p><p>其实挺简单，dashboard设置里面：<br>General，就你dashboard的名字，描述，tag简单的信息；<br>Variables，配置变量，这样既不用写死一个host了：<br>$group<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Name:group</span><br><span class="line">Type:Query</span><br><span class="line">Data source: zabbix test</span><br><span class="line">Refresh On Dashboard Load</span><br><span class="line">Query:*</span><br><span class="line">Multi-value和include all option勾上</span><br></pre></td></tr></table></figure></p><p>一个变量就结束了<br>第二个变量$host:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Name:host</span><br><span class="line">Type:Query</span><br><span class="line">Data source: zabbix test</span><br><span class="line">Refresh On Dashboard Load</span><br><span class="line">Query:$group.*</span><br><span class="line">Multi-value和include all option勾上</span><br></pre></td></tr></table></figure></p><p>保存，这样dashboard的设置就完成了。</p><h4 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h4><p>进入dashboard，点击<code>Add graph</code>新增图形<br>选择Graph，主要就是设置<code>Metrics</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Data source:zabbix test</span><br><span class="line">Query Mode:Metrics</span><br><span class="line">Group: $group</span><br><span class="line">Host: $host</span><br><span class="line">Application: Disk io</span><br><span class="line">item: 选择想展示项即可</span><br></pre></td></tr></table></figure></p><p>完~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;zabbix监控Linux磁盘IO&lt;/p&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="zabbix3.4" scheme="http://tokyle.com/tags/zabbix3-4/"/>
    
      <category term="IO" scheme="http://tokyle.com/tags/IO/"/>
    
  </entry>
  
  <entry>
    <title>Linux磁盘IO监控工具-iostat</title>
    <link href="http://tokyle.com/2018/12/21/Linux%E7%A3%81%E7%9B%98IO%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7-iostat/"/>
    <id>http://tokyle.com/2018/12/21/Linux磁盘IO监控工具-iostat/</id>
    <published>2018-12-21T05:46:34.000Z</published>
    <updated>2018-12-21T05:47:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>Linux磁盘IO监控工具-iostat</p><p>因为使用zabbix监控linux磁盘IO的需求，又折腾了会iostat</p><a id="more"></a><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>iostat安装，直接用<code>yum install iostat</code>这是肯定会报错的，包不存在；iostat是包含在<code>sysstat</code>工具包中的一个工具，使用安装也就是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install sysstat</span><br></pre></td></tr></table></figure></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>直接iostat输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost yum.repos.d]# iostat</span><br><span class="line">Linux 3.10.0-862.11.6.el7.x86_64 (localhost.localdomain) 12/21/2018 _x86_64_(4 CPU)</span><br><span class="line"></span><br><span class="line">avg-cpu:  %user   %nice %system %iowait  %steal   %idle</span><br><span class="line">           0.20    0.00    0.19    0.40    0.00   99.20</span><br><span class="line"></span><br><span class="line">Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn</span><br><span class="line">sda               6.00         0.56       118.51    1200547  254018670</span><br><span class="line">scd0              0.00         0.00         0.00       1028          0</span><br><span class="line">dm-0              6.00         0.38       118.46     822151  253921784</span><br><span class="line">dm-1              0.00         0.00         0.00       2228          0</span><br><span class="line">dm-2              0.01         0.16         0.04     348695      9471</span><br></pre></td></tr></table></figure></p><p>可以看见系统的基本信息，hostname，CPU数目，系统位数，以及：<br>一些CPU的信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">%user：用户程序占用CPU时间百分比</span><br><span class="line"></span><br><span class="line">%system：系统进程占CPU时间百分比</span><br><span class="line"></span><br><span class="line">%nice：切换优先级的进程占CPU时间百分比</span><br><span class="line"></span><br><span class="line">%iowait：CPU等待输入输出完成时间的百分比</span><br><span class="line"></span><br><span class="line">%steal：管理程序(hypervisor)为另一个虚拟进程提供服务而等待虚拟CPU的百分比</span><br></pre></td></tr></table></figure></p><p>说实话，我是不太理解%steal…有个解释：<code>Steal time is the percentage of time a virtual CPU waits for a real CPU while the hypervisor is servicing another virtual processor</code>，差不多意思是你的虚拟机（VM）会与虚拟环境的宿主机上的多个虚拟机实例共享物理资源。其中之一共享的就是CPU时间切片。如果你的VM的物理机虚拟比是1/4， 那么它的CPU使用率不会限制于25%的CPU时间切片－它能够使用超过它设置的虚拟比。</p><p>通常我们会关注的部分：%iowait的值过高，表示硬盘存在I/O瓶颈，%idle值高，表示CPU较空闲，如果%idle值高但系统响应慢时，有可能是CPU等待分配内存，此时应加大内存容量。%idle值如果持续低于10，那么系统的CPU处理能力相对较低，表明系统中最需要解决的资源是CPU</p><p>磁盘属性：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tps: 该设备每秒的传输次数（Indicate the number of transfers per second that were issued to the device.）。“一次传输”意思是“一次I/O请求”。多个逻辑请求可能会被合并为“一次I/O请求”</span><br><span class="line"></span><br><span class="line">kB_read/s：每秒从设备（drive expressed）读取的数据量</span><br><span class="line"></span><br><span class="line">kB_wrtn/s：每秒向设备（drive expressed）写入的数据量</span><br><span class="line"></span><br><span class="line">kB_read：读取的总数据量</span><br><span class="line"></span><br><span class="line">kB_wrtn：写入的总数量数据量</span><br></pre></td></tr></table></figure></p><h3 id="iostat语法"><a href="#iostat语法" class="headerlink" title="iostat语法"></a>iostat语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost yum.repos.d]# iostat --help</span><br><span class="line">Usage: iostat [ options ] [ &lt;interval&gt; [ &lt;count&gt; ] ]</span><br><span class="line">Options are:</span><br><span class="line">[ -c ] [ -d ] [ -h ] [ -k | -m ] [ -N ] [ -t ] [ -V ] [ -x ] [ -y ] [ -z ]</span><br><span class="line">[ -j &#123; ID | LABEL | PATH | UUID | ... &#125; ]</span><br><span class="line">[ [ -T ] -g &lt;group_name&gt; ] [ -p [ &lt;device&gt; [,...] | ALL ] ]</span><br><span class="line">[ &lt;device&gt; [...] | ALL ]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-c    只显示CPU利用率</span><br><span class="line">-d    只显示磁盘利用率</span><br><span class="line">-p    可以报告出每块磁盘的每个分区的使用情况</span><br><span class="line">-k    以 KB/秒 为单位显示磁盘利用率报告</span><br><span class="line">-x    显示详细信息</span><br><span class="line">-n    显示NFS（network filesystem）报告</span><br></pre></td></tr></table></figure><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost yum.repos.d]# iostat -d -k -x 2</span><br><span class="line">Linux 3.10.0-862.11.6.el7.x86_64 (localhost.localdomain) 12/21/2018 _x86_64_(4 CPU)</span><br><span class="line"></span><br><span class="line">Device:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %util</span><br><span class="line">sda               0.00     0.01    0.02    5.98     0.56   118.53    39.70     0.12   20.63    5.10   20.69   6.29   3.77</span><br><span class="line">scd0              0.00     0.00    0.00    0.00     0.00     0.00   114.22     0.00   37.06   37.06    0.00  36.56   0.00</span><br><span class="line">dm-0              0.00     0.00    0.01    5.99     0.38   118.48    39.59     0.12   20.72    6.26   20.76   6.28   3.77</span><br><span class="line">dm-1              0.00     0.00    0.00    0.00     0.00     0.00    47.40     0.00    8.22    8.22    0.00   7.71   0.00</span><br><span class="line">dm-2              0.00     0.00    0.01    0.00     0.16     0.04    50.37     0.00   55.11    3.29  178.62   2.30   0.00</span><br></pre></td></tr></table></figure><p>参数含义：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rrqm/s： 每秒进行 merge 的读操作数目.即 delta(rmerge)/s</span><br><span class="line">wrqm/s： 每秒进行 merge 的写操作数目.即 delta(wmerge)/s</span><br><span class="line">r/s： 每秒完成的读 I/O 设备次数.即 delta(rio)/s</span><br><span class="line">w/s： 每秒完成的写 I/O 设备次数.即 delta(wio)/s</span><br><span class="line">rsec/s： 每秒读扇区数.即 delta(rsect)/s</span><br><span class="line">wsec/s： 每秒写扇区数.即 delta(wsect)/s</span><br><span class="line">rkB/s：  每秒读K字节数.是 rsect/s 的一半,因为每扇区大小为512字节.(需要计算)</span><br><span class="line">wkB/s：  每秒写K字节数.是 wsect/s 的一半.(需要计算)</span><br><span class="line">avgrq-sz：平均每次设备I/O操作的数据大小 (扇区).delta(rsect+wsect)/delta(rio+wio)</span><br><span class="line">avgqu-sz：平均I/O队列长度.即 delta(aveq)/s/1000 (因为aveq的单位为毫秒).</span><br><span class="line">await：   平均每次设备I/O操作的等待时间 (毫秒).即 delta(ruse+wuse)/delta(rio+wio)</span><br><span class="line">svctm：   平均每次设备I/O操作的服务时间 (毫秒).即 delta(use)/delta(rio+wio)</span><br><span class="line">%util：  在 I/O 请求发送到设备期间，占用 CPU 时间的百分比。用于体现设备的带宽利用率。</span><br></pre></td></tr></table></figure></p><p>当%util接近100%时，设备宽带已满</p><h3 id="参考blog"><a href="#参考blog" class="headerlink" title="参考blog"></a>参考blog</h3><p><a href="https://blog.csdn.net/m0_37814112/article/details/80661481" target="_blank" rel="noopener">iostat 监视I/O子系统</a></p><p><a href="https://blog.csdn.net/sunansheng/article/details/51942281" target="_blank" rel="noopener">Linux磁盘I/O性能监控之iostat详解</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux磁盘IO监控工具-iostat&lt;/p&gt;
&lt;p&gt;因为使用zabbix监控linux磁盘IO的需求，又折腾了会iostat&lt;/p&gt;
    
    </summary>
    
      <category term="性能测试" scheme="http://tokyle.com/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="Centos7" scheme="http://tokyle.com/tags/Centos7/"/>
    
      <category term="iostat" scheme="http://tokyle.com/tags/iostat/"/>
    
  </entry>
  
</feed>
