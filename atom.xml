<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>它夏了夏天</title>
  
  <subtitle>生命中有一种遇见，就让它美如行云流水，然后一生去回味。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tokyle.com/"/>
  <updated>2018-01-17T09:27:47.903Z</updated>
  <id>http://tokyle.com/</id>
  
  <author>
    <name>Kyle</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>appium键盘事件</title>
    <link href="http://tokyle.com/2018/01/17/appium%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/"/>
    <id>http://tokyle.com/2018/01/17/appium键盘事件/</id>
    <published>2018-01-17T09:26:13.000Z</published>
    <updated>2018-01-17T09:27:47.903Z</updated>
    
    <content type="html"><![CDATA[<p>appium键盘事件</p><a id="more"></a><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.keyevent(keyCode)</span><br></pre></td></tr></table></figure></p><h2 id="电话键"><a href="#电话键" class="headerlink" title="电话键"></a>电话键</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">KEYCODE_CALL 拨号键 5</span><br><span class="line">KEYCODE_ENDCALL 挂机键 6</span><br><span class="line">KEYCODE_HOME 按键Home 3</span><br><span class="line">KEYCODE_MENU 菜单键 82</span><br><span class="line">KEYCODE_BACK 返回键 4</span><br><span class="line">KEYCODE_SEARCH 搜索键 84</span><br><span class="line">KEYCODE_CAMERA 拍照键 27</span><br><span class="line">KEYCODE_FOCUS 拍照对焦键 80</span><br><span class="line">KEYCODE_POWER 电源键 26</span><br><span class="line">KEYCODE_NOTIFICATION 通知键 83</span><br><span class="line">KEYCODE_MUTE 话筒静音键 91</span><br><span class="line">KEYCODE_VOLUME_MUTE 扬声器静音键 164</span><br><span class="line">KEYCODE_VOLUME_UP 音量增加键 24</span><br><span class="line">KEYCODE_VOLUME_DOWN 音量减小键 25</span><br></pre></td></tr></table></figure><h2 id="控制键"><a href="#控制键" class="headerlink" title="控制键"></a>控制键</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">KEYCODE_ENTER 回车键 66</span><br><span class="line">KEYCODE_ESCAPE ESC键 111</span><br><span class="line">KEYCODE_DPAD_CENTER 导航键 确定键 23</span><br><span class="line">KEYCODE_DPAD_UP 导航键 向上 19</span><br><span class="line">KEYCODE_DPAD_DOWN 导航键 向下 20</span><br><span class="line">KEYCODE_DPAD_LEFT 导航键 向左 21</span><br><span class="line">KEYCODE_DPAD_RIGHT 导航键 向右 22</span><br><span class="line">KEYCODE_MOVE_HOME 光标移动到开始键 122</span><br><span class="line">KEYCODE_MOVE_END 光标移动到末尾键 123</span><br><span class="line">KEYCODE_PAGE_UP 向上翻页键 92</span><br><span class="line">KEYCODE_PAGE_DOWN 向下翻页键 93</span><br><span class="line">KEYCODE_DEL 退格键 67</span><br><span class="line">KEYCODE_FORWARD_DEL 删除键 112</span><br><span class="line">KEYCODE_INSERT 插入键 124</span><br><span class="line">KEYCODE_TAB Tab键 61</span><br><span class="line">KEYCODE_NUM_LOCK 小键盘锁 143</span><br><span class="line">KEYCODE_CAPS_LOCK 大写锁定键 115</span><br><span class="line">KEYCODE_BREAK Break/Pause键 121</span><br><span class="line">KEYCODE_SCROLL_LOCK 滚动锁定键 116</span><br><span class="line">KEYCODE_ZOOM_IN 放大键 168</span><br><span class="line">KEYCODE_ZOOM_OUT 缩小键 169</span><br></pre></td></tr></table></figure><h2 id="组合键"><a href="#组合键" class="headerlink" title="组合键"></a>组合键</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">KEYCODE_ALT_LEFT Alt+Left</span><br><span class="line">KEYCODE_ALT_RIGHT Alt+Right</span><br><span class="line">KEYCODE_CTRL_LEFT Control+Left</span><br><span class="line">KEYCODE_CTRL_RIGHT Control+Right</span><br><span class="line">KEYCODE_SHIFT_LEFT Shift+Left</span><br><span class="line">KEYCODE_SHIFT_RIGHT Shift+Right</span><br></pre></td></tr></table></figure><h2 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">KEYCODE_0 按键&apos;0&apos; 7</span><br><span class="line">KEYCODE_1 按键&apos;1&apos; 8</span><br><span class="line">KEYCODE_2 按键&apos;2&apos; 9</span><br><span class="line">KEYCODE_3 按键&apos;3&apos; 10</span><br><span class="line">KEYCODE_4 按键&apos;4&apos; 11</span><br><span class="line">KEYCODE_5 按键&apos;5&apos; 12</span><br><span class="line">KEYCODE_6 按键&apos;6&apos; 13</span><br><span class="line">KEYCODE_7 按键&apos;7&apos; 14</span><br><span class="line">KEYCODE_8 按键&apos;8&apos; 15</span><br><span class="line">KEYCODE_9 按键&apos;9&apos; 16</span><br><span class="line">KEYCODE_A 按键&apos;A&apos; 29</span><br><span class="line">KEYCODE_B 按键&apos;B&apos; 30</span><br><span class="line">KEYCODE_C 按键&apos;C&apos; 31</span><br><span class="line">KEYCODE_D 按键&apos;D&apos; 32</span><br><span class="line">KEYCODE_E 按键&apos;E&apos; 33</span><br><span class="line">KEYCODE_F 按键&apos;F&apos; 34</span><br><span class="line">KEYCODE_G 按键&apos;G&apos; 35</span><br><span class="line">KEYCODE_H 按键&apos;H&apos; 36</span><br><span class="line">KEYCODE_I 按键&apos;I&apos; 37</span><br><span class="line">KEYCODE_J 按键&apos;J&apos; 38</span><br><span class="line">KEYCODE_K 按键&apos;K&apos; 39</span><br><span class="line">KEYCODE_L 按键&apos;L&apos; 40</span><br><span class="line">KEYCODE_M 按键&apos;M&apos; 41</span><br><span class="line">KEYCODE_N 按键&apos;N&apos; 42</span><br><span class="line">KEYCODE_O 按键&apos;O&apos; 43</span><br><span class="line">KEYCODE_P 按键&apos;P&apos; 44</span><br><span class="line">KEYCODE_Q 按键&apos;Q&apos; 45</span><br><span class="line">KEYCODE_R 按键&apos;R&apos; 46</span><br><span class="line">KEYCODE_S 按键&apos;S&apos; 47</span><br><span class="line">KEYCODE_T 按键&apos;T&apos; 48</span><br><span class="line">KEYCODE_U 按键&apos;U&apos; 49</span><br><span class="line">KEYCODE_V 按键&apos;V&apos; 50</span><br><span class="line">KEYCODE_W 按键&apos;W&apos; 51</span><br><span class="line">KEYCODE_X 按键&apos;X&apos; 52</span><br><span class="line">KEYCODE_Y 按键&apos;Y&apos; 53</span><br><span class="line">KEYCODE_Z 按键&apos;Z&apos; 54</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;appium键盘事件&lt;/p&gt;
    
    </summary>
    
      <category term="appium" scheme="http://tokyle.com/categories/appium/"/>
    
    
      <category term="自动化测试" scheme="http://tokyle.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="android" scheme="http://tokyle.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>appium定位</title>
    <link href="http://tokyle.com/2018/01/17/appium%E5%AE%9A%E4%BD%8D/"/>
    <id>http://tokyle.com/2018/01/17/appium定位/</id>
    <published>2018-01-17T09:18:04.000Z</published>
    <updated>2018-01-17T09:34:55.902Z</updated>
    
    <content type="html"><![CDATA[<p>appium的常用操作以及元素定位的简单介绍</p><a id="more"></a><h2 id="appium常用操作"><a href="#appium常用操作" class="headerlink" title="appium常用操作"></a>appium常用操作</h2><h3 id="锁屏"><a href="#锁屏" class="headerlink" title="锁屏"></a>锁屏</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.lock(5)</span><br></pre></td></tr></table></figure><h3 id="切换应用至后台"><a href="#切换应用至后台" class="headerlink" title="切换应用至后台"></a>切换应用至后台</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">driver.background_app(5)  # 置于后台，持续5秒</span><br><span class="line">driver.background_app(-1) # 持续置于后台</span><br><span class="line">driver.background_app(&#123;&apos;timeout&apos;: None&#125;) # 持续置于后台</span><br></pre></td></tr></table></figure><h3 id="收起键盘"><a href="#收起键盘" class="headerlink" title="收起键盘"></a>收起键盘</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.hide_keyboard()</span><br></pre></td></tr></table></figure><h3 id="启动Activity"><a href="#启动Activity" class="headerlink" title="启动Activity"></a>启动Activity</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.start_activity(&apos;com.example.android.apis&apos;, &apos;.Foo&apos;)</span><br></pre></td></tr></table></figure><h3 id="检测应用是否被安装"><a href="#检测应用是否被安装" class="headerlink" title="检测应用是否被安装"></a>检测应用是否被安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.is_app_installed(&apos;com.example.android.apis&apos;)</span><br></pre></td></tr></table></figure><h3 id="安装应用"><a href="#安装应用" class="headerlink" title="安装应用"></a>安装应用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.install_app(&apos;path/to/my.apk&apos;)</span><br></pre></td></tr></table></figure><h3 id="卸载应用"><a href="#卸载应用" class="headerlink" title="卸载应用"></a>卸载应用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.remove_app(&apos;com.example.android.apis&apos;)</span><br></pre></td></tr></table></figure><h3 id="模拟设备摇一摇"><a href="#模拟设备摇一摇" class="headerlink" title="模拟设备摇一摇"></a>模拟设备摇一摇</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.shake()</span><br></pre></td></tr></table></figure><h3 id="关闭应用"><a href="#关闭应用" class="headerlink" title="关闭应用"></a>关闭应用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.close_app()</span><br></pre></td></tr></table></figure><h3 id="启动应用"><a href="#启动应用" class="headerlink" title="启动应用"></a>启动应用</h3><p>使用前提是<code>desired capabilities</code>设置了 <code>autoLaunch=false</code> 关键字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.launch_app()</span><br></pre></td></tr></table></figure></p><h3 id="操作上下文（Contexts）"><a href="#操作上下文（Contexts）" class="headerlink" title="操作上下文（Contexts）"></a>操作上下文（Contexts）</h3><h4 id="获取所有"><a href="#获取所有" class="headerlink" title="获取所有"></a>获取所有</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.contexts</span><br></pre></td></tr></table></figure><h4 id="获取当前"><a href="#获取当前" class="headerlink" title="获取当前"></a>获取当前</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.current_context</span><br></pre></td></tr></table></figure><h4 id="切换至默认"><a href="#切换至默认" class="headerlink" title="切换至默认"></a>切换至默认</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to.context(None)</span><br></pre></td></tr></table></figure><h3 id="按键事件"><a href="#按键事件" class="headerlink" title="按键事件"></a>按键事件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.keyevent(176)</span><br></pre></td></tr></table></figure><blockquote><p><a href="http://tokyle.com/2018/01/17/appium%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/">具体键值</a></p></blockquote><h3 id="点击操作-多点触控操作"><a href="#点击操作-多点触控操作" class="headerlink" title="点击操作/多点触控操作"></a>点击操作/多点触控操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">action = TouchAction(driver)</span><br><span class="line">action.press(element=el, x=10, y=10).release().perform()</span><br></pre></td></tr></table></figure><h3 id="滑动屏幕"><a href="#滑动屏幕" class="headerlink" title="滑动屏幕"></a>滑动屏幕</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.swipe(start_x=75, start_y=500, end_x=75, end_y=0, duration=800)</span><br></pre></td></tr></table></figure><h3 id="从设备拉去文件"><a href="#从设备拉去文件" class="headerlink" title="从设备拉去文件"></a>从设备拉去文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.pull_file(&apos;Library/AddressBook/AddressBook.sqlitedb&apos;)</span><br></pre></td></tr></table></figure><h3 id="推送文件到设备"><a href="#推送文件到设备" class="headerlink" title="推送文件到设备"></a>推送文件到设备</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data = &quot;some data for the file&quot;</span><br><span class="line">path = &quot;/data/local/tmp/file.txt&quot;</span><br><span class="line">driver.push_file(path, data.encode(&apos;base64&apos;))</span><br></pre></td></tr></table></figure><h2 id="appium元素定位"><a href="#appium元素定位" class="headerlink" title="appium元素定位"></a>appium元素定位</h2><p>使用id，class等和selenium基本没差别的定位就不介绍了，主要介绍appium独有<code>uiautomator UiSelector</code></p><p>页面class和id等都不能唯一确定元素，但是元素有text属性时，可以使用以下进行定位：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element_by_android_uiautomator(&apos;new UiSelector().text(&quot;Custom View&quot;)&apos;).click()         #text</span><br><span class="line">driver.find_element_by_android_uiautomator(&apos;new UiSelector().textContains(&quot;View&quot;)&apos;).click()        #textContains</span><br><span class="line">driver.find_element_by_android_uiautomator(&apos;new UiSelector().textStartsWith(&quot;Custom&quot;)&apos;).click()    #textStartsWith</span><br><span class="line">driver.find_element_by_android_uiautomator(&apos;new UiSelector().textMatches(&quot;^Custom.*&quot;)&apos;).click()    #textMatches</span><br></pre></td></tr></table></figure></p><p>也可以加上class属性：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element_by_android_uiautomator(&apos;new UiSelector().className(&quot;android.widget.TextView&quot;).text(&quot;Custom View&quot;)&apos;).click()     #className</span><br><span class="line">driver.find_element_by_android_uiautomator(&apos;new UiSelector().classNameMatches(&quot;.*TextView$&quot;).text(&quot;Custom View&quot;)&apos;).click()          #classNameMatches</span><br></pre></td></tr></table></figure></p><h2 id="操作坐标"><a href="#操作坐标" class="headerlink" title="操作坐标"></a>操作坐标</h2><p>appium在进行元素定位时，定位不到唯一标志的元素，可以获取元素的坐标，使用坐标进行操作</p><p><code>appium</code>以及<code>uiautomatorviewer</code>都可以很容易获取到坐标</p><p>appium操作坐标</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.tap([(100, 20), (100, 60), (100, 100)], 500)</span><br></pre></td></tr></table></figure><p>三个坐标表示模拟三根手指，只需要一个手指，改成一个坐标即可，500表示持续时间500ms</p><p>或者使用adb命令也可实现同样效果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.popen(&quot;adb shell input tap &quot; + str(100) + &quot; &quot; + str(20))</span><br></pre></td></tr></table></figure></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><blockquote><p><a href="https://testerhome.com/topics/799" target="_blank" rel="noopener">appium 基础之键盘处理</a><br><a href="https://github.com/appium/appium/blob/master/docs/cn/writing-running-appium/appium-bindings.md" target="_blank" rel="noopener">appium-bindings</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;appium的常用操作以及元素定位的简单介绍&lt;/p&gt;
    
    </summary>
    
      <category term="appium" scheme="http://tokyle.com/categories/appium/"/>
    
    
      <category term="python" scheme="http://tokyle.com/tags/python/"/>
    
      <category term="自动化测试" scheme="http://tokyle.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>app安装卸载</title>
    <link href="http://tokyle.com/2018/01/17/app%E5%AE%89%E8%A3%85%E5%8D%B8%E8%BD%BD/"/>
    <id>http://tokyle.com/2018/01/17/app安装卸载/</id>
    <published>2018-01-17T02:54:00.000Z</published>
    <updated>2018-01-17T02:55:34.151Z</updated>
    
    <content type="html"><![CDATA[<p>appium-模拟器安装卸载app</p><a id="more"></a><p>模拟器安装apk<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb install XXX.apk</span><br></pre></td></tr></table></figure></p><p>卸载apk<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb uninstall your_package</span><br></pre></td></tr></table></figure></p><p>例子：</p><p>启动android模拟器，参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">desired_caps[&apos;platformName&apos;] = &apos;Android&apos;</span><br><span class="line">desired_caps[&apos;platformVersion&apos;] = &apos;7.1.1&apos;</span><br><span class="line">desired_caps[&apos;deviceName&apos;] = &apos;Android Emulator&apos;</span><br><span class="line">desired_caps[&apos;appPackage&apos;] = &apos;com.anmav.cashierdesk&apos;</span><br><span class="line">desired_caps[&apos;appActivity&apos;] = &apos;com.anmav.cashierdesk.view.LoginActivity&apos;</span><br></pre></td></tr></table></figure></p><p>win10打开控制台，进入apk文件所在目录，执行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb install cashierdesk.apk</span><br></pre></td></tr></table></figure></p><p>在模拟器中可以发现该app已完成安装。</p><p>控制台执行命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb remove com.anmav.cashierdesk</span><br></pre></td></tr></table></figure></p><p>模拟器中可以看见该app完成卸载</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;appium-模拟器安装卸载app&lt;/p&gt;
    
    </summary>
    
      <category term="自动化测试" scheme="http://tokyle.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="appium" scheme="http://tokyle.com/tags/appium/"/>
    
  </entry>
  
  <entry>
    <title>appium入门篇</title>
    <link href="http://tokyle.com/2018/01/16/appium%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <id>http://tokyle.com/2018/01/16/appium入门篇/</id>
    <published>2018-01-16T08:37:10.000Z</published>
    <updated>2018-01-16T08:38:34.500Z</updated>
    
    <content type="html"><![CDATA[<p>appium环境搭建及简单使用</p><p>测试人员进行app自动化测试的可选框架之一—— <strong>appium</strong></p><a id="more"></a><p>平台说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WIN10_64</span><br><span class="line">python 3.6</span><br></pre></td></tr></table></figure></p><h2 id="appium环境安装"><a href="#appium环境安装" class="headerlink" title="appium环境安装"></a>appium环境安装</h2><h3 id="安装Android-Studio"><a href="#安装Android-Studio" class="headerlink" title="安装Android Studio"></a>安装Android Studio</h3><p>网上之前的教程基本都是安装SDK或者ADT来进行安装，开始我也是这么装的，在最后创建完虚拟机，开启虚拟机时候报错了，报错信息只记得是建议安装Android Studio，索性也就换成了Android Studio。</p><blockquote><p><a href="https://developer.android.com/studio/index.html" target="_blank" rel="noopener">Android Studio下载链接</a></p></blockquote><p>如果下载的是不包含SDK的版本，还需要另外下载SDK。安装Android Studio很简单，和Pycharm一模一样，有使用Pycharm经验或者IntelliJ IDEA的应该很熟悉，安装完成之后，找到SDK Manager<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File-Settings-Appearance&amp;Behavior &gt; System Settings &gt; Android SDK</span><br></pre></td></tr></table></figure></p><p>如果本地有SDK，可以在此选择本地的SDK路径，该设置页也支持下载各种SDK Platforms。<br>对应的SDK安装完成之后就可以进行创建虚拟机，找到<code>AVD Manager</code>按键，点击创建。</p><h3 id="安装Android-SDK（和安装Android-Studio任选一种方式即可）"><a href="#安装Android-SDK（和安装Android-Studio任选一种方式即可）" class="headerlink" title="安装Android SDK（和安装Android Studio任选一种方式即可）"></a>安装Android SDK（和安装Android Studio任选一种方式即可）</h3><p><a href="http://developer.android.com/sdk/index.html" target="_blank" rel="noopener">官方下载地址</a></p><p>但是由于国内众所周知的某种原因，不能科学上网貌似无法保证可以下载~</p><p><a href="http://www.androiddevtools.cn/" target="_blank" rel="noopener">国内优质android工具网站</a></p><p>搜索<code>android-sdk</code>找到对应系统版本，进行下载。</p><h4 id="配置android环境变量"><a href="#配置android环境变量" class="headerlink" title="配置android环境变量"></a>配置android环境变量</h4><p>与配置JAVA环境变量类似，新增系统变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">变量名：ANDROID_HOME </span><br><span class="line">变量值：D:\android\android-sdk-windows</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">变量名：PATH</span><br><span class="line">变量值：;%ANDROID_HOME%\platform-tools;%ANDROID_HOME%\tools;</span><br></pre></td></tr></table></figure></p><h4 id="SDK-Manager安装模拟器"><a href="#SDK-Manager安装模拟器" class="headerlink" title="SDK Manager安装模拟器"></a>SDK Manager安装模拟器</h4><p>在你本地解压完成之后的<code>android-sdk-windows</code>目录下找到<code>SDK Manager.exe</code>，双击打开；</p><p><a href="http://www.androiddevtools.cn/" target="_blank" rel="noopener">配置参考</a></p><h4 id="安装SDK-Platform-Tools"><a href="#安装SDK-Platform-Tools" class="headerlink" title="安装SDK Platform-Tools"></a>安装SDK Platform-Tools</h4><p>在AndroidDevTools.cn 网站上找到Android SDK Platform-tools下载链接，下载，解压，把解压出来的 platform-tools 文件夹放在<code>android-sdk-windows</code>目录下</p><h3 id="安装Appium"><a href="#安装Appium" class="headerlink" title="安装Appium"></a>安装Appium</h3><h4 id="安装方式一：-使用NodeJS-安装"><a href="#安装方式一：-使用NodeJS-安装" class="headerlink" title="安装方式一： 使用NodeJS 安装"></a>安装方式一： 使用NodeJS 安装</h4><p>1，首先到<a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">官网</a>下载安装最新的NodeJS，Windows下属于傻瓜安装。<br>安装完成验证<code>npm</code>或者<code>node -v</code>不报错表明安装完成</p><p>2，安装appium，<code>npm install -g appium</code>命令安装appium（个人实验的效果不好，太慢了，建议采用第二种，安装包安装）</p><h4 id="安装方式二：安装包安装"><a href="#安装方式二：安装包安装" class="headerlink" title="安装方式二：安装包安装"></a>安装方式二：安装包安装</h4><p>建议直接安装appium-desktop，appium server在2015年就不再更新，取而代之的是appium-desktop的出现。</p><p>Appium安装包托管在github上，<a href="https://github.com/appium/appium-desktop/releases" target="_blank" rel="noopener">下载地址</a></p><p>但是个人实验，很多版本都是跳转404页面。。。无语。。。</p><p><a href="https://pan.baidu.com/s/1dmsyiM" target="_blank" rel="noopener">个人网盘地址</a>，密码：<code>v3lt</code>（版本1.2.7）</p><p>下载完成后，安装即可。</p><h4 id="appium环境检查"><a href="#appium环境检查" class="headerlink" title="appium环境检查"></a>appium环境检查</h4><p>可以使用<code>appium-doctor</code>工具进行环境检查，<code>npm install -g appium-doctor</code>进行安装。</p><h2 id="Appium-desktop使用简介"><a href="#Appium-desktop使用简介" class="headerlink" title="Appium-desktop使用简介"></a>Appium-desktop使用简介</h2><p>打开appium-desktop，点击“放大镜”图标进行设置，</p><p><img src="http://ww1.sinaimg.cn/large/a025e134gy1fnij5mz213j21an0qs40e.jpg" alt="示例"><br>设置完成后点击 Start Session</p><p><img src="http://ww1.sinaimg.cn/large/a025e134gy1fnij7beapkj21cr0qm77r.jpg" alt="完成之后"></p><p>直接单击最左栏的元素，在中间和右边会显示该元素属性，找到对应的ID值等，定位方式和selenium类似。</p><h2 id="查找appPackage和appActivity"><a href="#查找appPackage和appActivity" class="headerlink" title="查找appPackage和appActivity"></a>查找appPackage和appActivity</h2><p>appium进行自动化测试，需要<code>appPackage</code>和<code>appActivity</code>两个参数，下面是从apk文件获取的方法：</p><h3 id="apk反编译"><a href="#apk反编译" class="headerlink" title="apk反编译"></a>apk反编译</h3><h4 id="apktool"><a href="#apktool" class="headerlink" title="apktool"></a>apktool</h4><blockquote><p>地址： <a href="https://bitbucket.org/iBotPeaches/apktool/downloads/" target="_blank" rel="noopener">apktool</a></p></blockquote><p>用法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar apktool.jar d yourApkFile.apk</span><br></pre></td></tr></table></figure></p><h3 id="获取appPackage和appActivity"><a href="#获取appPackage和appActivity" class="headerlink" title="获取appPackage和appActivity"></a>获取appPackage和appActivity</h3><p>打开apk反编译之后的文件夹，打开<code>AndroidManifest.xml</code>文件</p><p><code>package</code>获取 <code>appPackage</code>，<code>activity</code>获取<code>appActivity</code>。</p><h2 id="appium-Demo"><a href="#appium-Demo" class="headerlink" title="appium Demo"></a>appium Demo</h2><p>实现计算器计算，代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">from appium import webdriver</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">desired_caps = &#123;&#125;</span><br><span class="line">desired_caps[&apos;platformName&apos;] = &apos;Android&apos;</span><br><span class="line">desired_caps[&apos;platformVersion&apos;] = &apos;7.1.1&apos;</span><br><span class="line">desired_caps[&apos;deviceName&apos;] = &apos;Android Emulator&apos;</span><br><span class="line">desired_caps[&apos;appPackage&apos;] = &apos;com.android.calculator2&apos;</span><br><span class="line">desired_caps[&apos;appActivity&apos;] = &apos;.Calculator&apos;</span><br><span class="line">desired_caps[&apos;noReset&apos;] = True</span><br><span class="line"></span><br><span class="line">driver = webdriver.Remote(&apos;http://localhost:4723/wd/hub&apos;, desired_caps)</span><br><span class="line"></span><br><span class="line">driver.find_element_by_id(&apos;com.android.calculator2:id/digit_4&apos;).click()</span><br><span class="line">driver.find_element_by_accessibility_id(&apos;multiply&apos;).click()</span><br><span class="line">driver.find_element_by_id(&apos;com.android.calculator2:id/digit_9&apos;).click()</span><br><span class="line">driver.find_element_by_accessibility_id(&apos;plus&apos;).click()</span><br><span class="line">driver.find_element_by_id(&apos;com.android.calculator2:id/digit_1&apos;).click()</span><br><span class="line">driver.find_element_by_id(&apos;com.android.calculator2:id/digit_4&apos;).click()</span><br><span class="line">driver.find_element_by_accessibility_id(&apos;equals&apos;).click()</span><br><span class="line"></span><br><span class="line">time.sleep(3)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;appium环境搭建及简单使用&lt;/p&gt;
&lt;p&gt;测试人员进行app自动化测试的可选框架之一—— &lt;strong&gt;appium&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="appium" scheme="http://tokyle.com/categories/appium/"/>
    
    
      <category term="python" scheme="http://tokyle.com/tags/python/"/>
    
      <category term="自动化测试" scheme="http://tokyle.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="appium" scheme="http://tokyle.com/tags/appium/"/>
    
  </entry>
  
  <entry>
    <title>smtp发邮件</title>
    <link href="http://tokyle.com/2018/01/12/smtp%E5%8F%91%E9%82%AE%E4%BB%B6/"/>
    <id>http://tokyle.com/2018/01/12/smtp发邮件/</id>
    <published>2018-01-12T09:53:14.000Z</published>
    <updated>2018-01-12T09:54:44.409Z</updated>
    
    <content type="html"><![CDATA[<p>使用python3发送网易邮箱邮件</p><a id="more"></a><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import smtplib</span><br><span class="line">from email.mime.text import MIMEText</span><br><span class="line">from email.header import Header</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def send_email(mail_host, from_account, from_passwd, to_account, subject, content):</span><br><span class="line">    mail = smtplib.SMTP()</span><br><span class="line">    mail.connect(mail_host)</span><br><span class="line">    mail.login(from_account, from_passwd)</span><br><span class="line"></span><br><span class="line">    # 发送邮件</span><br><span class="line">    message = MIMEText(content, &apos;plain&apos;, &apos;utf-8&apos;)</span><br><span class="line">    message[&apos;From&apos;] = from_account</span><br><span class="line">    message[&apos;To&apos;] = to_account</span><br><span class="line">    message[&apos;Subject&apos;] = Header(subject, &apos;utf-8&apos;)</span><br><span class="line">    mail.sendmail(from_account, to_account, message.as_string())</span><br></pre></td></tr></table></figure></p><p>菜鸟教程上有一种写法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"> </span><br><span class="line">import smtplib</span><br><span class="line">from email.mime.text import MIMEText</span><br><span class="line">from email.header import Header</span><br><span class="line"> </span><br><span class="line"># 第三方 SMTP 服务</span><br><span class="line">mail_host=&quot;smtp.XXX.com&quot;  #设置服务器</span><br><span class="line">mail_user=&quot;XXXX&quot;    #用户名</span><br><span class="line">mail_pass=&quot;XXXXXX&quot;   #口令 </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">sender = &apos;from@runoob.com&apos;</span><br><span class="line">receivers = [&apos;429240967@qq.com&apos;]  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱</span><br><span class="line"> </span><br><span class="line">message = MIMEText(&apos;Python 邮件发送测试...&apos;, &apos;plain&apos;, &apos;utf-8&apos;)</span><br><span class="line">message[&apos;From&apos;] = Header(&quot;菜鸟教程&quot;, &apos;utf-8&apos;)</span><br><span class="line">message[&apos;To&apos;] =  Header(&quot;测试&quot;, &apos;utf-8&apos;)</span><br><span class="line"> </span><br><span class="line">subject = &apos;Python SMTP 邮件测试&apos;</span><br><span class="line">message[&apos;Subject&apos;] = Header(subject, &apos;utf-8&apos;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line">    smtpObj = smtplib.SMTP() </span><br><span class="line">    smtpObj.connect(mail_host, 25)    # 25 为 SMTP 端口号</span><br><span class="line">    smtpObj.login(mail_user,mail_pass)</span><br><span class="line">    smtpObj.sendmail(sender, receivers, message.as_string())</span><br><span class="line">    print (&quot;邮件发送成功&quot;)</span><br><span class="line">except smtplib.SMTPException:</span><br><span class="line">    print (&quot;Error: 无法发送邮件&quot;)</span><br></pre></td></tr></table></figure></p><p>这样执行，会报错<br><code>smtplib.SMTPDataError: (554, &#39;DT:SPM 126 smtp5,jtKowAD3MJz2c1JXLcK2AA--.52114S2 1465021431,please see http://mail.163.com/help/help_spam_16.htm?ip=123.114.121.110&amp;hostid=smtp5&amp;time=1465021431&#39;)</code></p><p>解决办法就是指定收发件人<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">message[&apos;From&apos;] = from_account</span><br><span class="line">message[&apos;To&apos;] = to_account</span><br></pre></td></tr></table></figure></p><p>p.s 网易邮箱客户端默认授权码是关闭的，直接执行python调用会失败，要先进客户端，把客户授权码打开<br>位置：<code>设置-客户端授权密码</code><br>设置完成之后，登录密码就使用你设置的授权码</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用python3发送网易邮箱邮件&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://tokyle.com/categories/python/"/>
    
    
      <category term="python3" scheme="http://tokyle.com/tags/python3/"/>
    
      <category term="smtplib" scheme="http://tokyle.com/tags/smtplib/"/>
    
  </entry>
  
  <entry>
    <title>selenium无干预下载</title>
    <link href="http://tokyle.com/2018/01/10/selenium%E6%97%A0%E5%B9%B2%E9%A2%84%E4%B8%8B%E8%BD%BD/"/>
    <id>http://tokyle.com/2018/01/10/selenium无干预下载/</id>
    <published>2018-01-10T09:52:01.000Z</published>
    <updated>2018-01-10T09:55:42.041Z</updated>
    
    <content type="html"><![CDATA[<p>selenium自带了无人工干预实现下载功能的模块，下载时不需要弹窗点击确定下载</p><a id="more"></a><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">from selenium import webdriver</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">class MacDownload():</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        &quot;&quot;&quot;初始化&quot;&quot;&quot;</span><br><span class="line">        # 创建一个FirefoxProfile实例，用于存放自定义配置</span><br><span class="line">        profile = webdriver.FirefoxProfile()</span><br><span class="line">        # 指定下载路径，默认自动创建一级目录</span><br><span class="line">        profile.set_preference(&apos;browser.download.dir&apos;, &apos;G:\idownload&apos;)</span><br><span class="line">        # 将browser.download.folderLis设置为2，表示将文件下载到指定目录（0表示桌面，1表示默认路径）</span><br><span class="line">        profile.set_preference(&quot;browser.download.folderList&quot;, 2)</span><br><span class="line">        # browser.helperApps.alwaysAsk.force对于未知的MIME类型文件会弹出窗口</span><br><span class="line">        # 让用户处理，默认值为True，设定为False表示不会记录打开未知MIME类型文件的方式</span><br><span class="line">        profile.set_preference(&quot;browser.helperApps.alwaysAsk.force&quot;, False)</span><br><span class="line">        # 在开始下载时是否显示下载管理器</span><br><span class="line">        profile.set_preference(&quot;browser.download.manager.showWhenStarting&quot;, False)</span><br><span class="line">        # 设定为False会把下载狂隐藏</span><br><span class="line">        profile.set_preference(&quot;browser.download.manager.useWindow&quot;, False)</span><br><span class="line">        # 默认为True，设定为False表示不获取焦点</span><br><span class="line">        profile.set_preference(&quot;browser.download.manager.focusWhenStarting&quot;, False)</span><br><span class="line">        # 下载.exe文件弹出警告，默认值为True，设定为False则不会弹出警告</span><br><span class="line">        profile.set_preference(&quot;browser.download.manager.alertOnEXEOpen&quot;, False)</span><br><span class="line">        # browser.helperApps.neverAsk.openFile表示直接打开下载文件，不显示确定框</span><br><span class="line">        # 默认值为空字符串，下行代码行设定了多种文件的MIME类型，</span><br><span class="line">        # 例如application/exe,表示 .exe类型的文件；application/excel表示excel类型的文件</span><br><span class="line">        profile.set_preference(&quot;browser.helperApps.neverAsk.openFile&quot;, &quot;application/pdf&quot;)</span><br><span class="line">        # 对所给出文件类型不在弹出提示框进行询问，直接保存到本地磁盘</span><br><span class="line">        profile.set_preference(&quot;browser.helperApps.neverAsk.saveToDisk&quot;, &quot;application/zip, application/octet-stream&quot;)</span><br><span class="line">        # browser.download.manager.showAlertOnComplete设定下载文件结束后是否显示下载完成提示框</span><br><span class="line">        # 默认为True，设定为False表示下载完成后不显示下载完成提示框</span><br><span class="line">        profile.set_preference(&quot;browser.download.manager.showAlertOnComplete&quot;, False)</span><br><span class="line">        # browser.download.manager.closeWhenDone设定下载结束后是都自动关闭下载框</span><br><span class="line">        # 默认为True，设定为False表示不关闭下载管理器</span><br><span class="line">        profile.set_preference(&quot;browser.download.manager.closeWhenDone&quot;, False)</span><br><span class="line"></span><br><span class="line">        # 启动浏览器，通过firfox_profile参数将自动配置添加到FirefoxProfile对象中sef.driver = webdriver.Firefox(firefox_profile=profile)</span><br><span class="line">        self.driver = webdriver.Firefox(firefox_profile=profile)</span><br><span class="line"></span><br><span class="line">    def test_dataPicker(self):</span><br><span class="line">        #访问WebDriver驱动firefox的驱动文件下载网址</span><br><span class="line">        # url1 = &quot;https://github.com/mozilla/geckodriver/releases&quot;</span><br><span class="line">        # self.driver.get(url1)</span><br><span class="line">        # #选择下载ZIP类型的文件，使用application/zip指代此类型文件</span><br><span class="line">        # self.driver.find_element_by_xpath(&apos;//strong[. = &quot;geckodriver-v0.19.1-win32.zip&quot;]&apos;).click()</span><br><span class="line">        # time.sleep(10)</span><br><span class="line"></span><br><span class="line">        #访问Python2.7.12文件下载页面，下载扩展名为msi的文件</span><br><span class="line">        #使用application/octet - stream来指明次文件类型</span><br><span class="line">        url = &quot;https://www.python.org/downloads/release/python-2712/&quot;</span><br><span class="line">        self.driver.get(url)</span><br><span class="line">        self.driver.find_element_by_link_text(&apos;Windows x86-64 MSI installer&apos;).click()</span><br><span class="line">        time.sleep(100)</span><br><span class="line"></span><br><span class="line">        self.driver.quit()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;selenium自带了无人工干预实现下载功能的模块，下载时不需要弹窗点击确定下载&lt;/p&gt;
    
    </summary>
    
      <category term="selenium" scheme="http://tokyle.com/categories/selenium/"/>
    
    
      <category term="selenium" scheme="http://tokyle.com/tags/selenium/"/>
    
      <category term="python" scheme="http://tokyle.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>12306余票监控</title>
    <link href="http://tokyle.com/2018/01/10/12306%E4%BD%99%E7%A5%A8%E7%9B%91%E6%8E%A7/"/>
    <id>http://tokyle.com/2018/01/10/12306余票监控/</id>
    <published>2018-01-10T01:23:32.000Z</published>
    <updated>2018-01-12T08:17:20.403Z</updated>
    
    <content type="html"><![CDATA[<p>翻日历突然意识到，好像要放假了，又是一年春运时，就想着可不可以用selenium做个自己的监控12306余票的程序。</p><a id="more"></a><p>动手：<br>思路也就是输入起点，终点，选择列车，选择座位，查询是否有余票。</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">from selenium import webdriver</span><br><span class="line">from selenium.webdriver.common.keys import Keys</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">class monitorTickets():</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    查询12306硬座，硬卧，软卧余票</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    def __init__(self):</span><br><span class="line">        &quot;&quot;&quot;初始化&quot;&quot;&quot;</span><br><span class="line">        #使用chrome浏览器打开查询12306查询页面</span><br><span class="line">        self.browser = webdriver.Chrome()</span><br><span class="line">        url = &apos;https://kyfw.12306.cn/otn/leftTicket/init&apos;</span><br><span class="line">        self.browser.get(url)</span><br><span class="line"></span><br><span class="line">    def search_tickets(self,train_name, start_stations, end_stations, ticket_id):</span><br><span class="line">        &quot;&quot;&quot;循环获取余票&quot;&quot;&quot;</span><br><span class="line">        print(&quot;开始查询【%s】次列车余票信息&quot; % train_name)</span><br><span class="line">        for start_station in start_stations:</span><br><span class="line">            try:</span><br><span class="line">                for end_station in end_stations:</span><br><span class="line">                    #输入起点</span><br><span class="line">                    starts = self.browser.find_element_by_id(&quot;fromStationText&quot;)</span><br><span class="line">                    starts.click()</span><br><span class="line">                    starts.clear()</span><br><span class="line">                    starts.send_keys(start_station)</span><br><span class="line">                    starts.send_keys(Keys.ENTER)</span><br><span class="line"></span><br><span class="line">                    #输入到站</span><br><span class="line">                    ends = self.browser.find_element_by_id(&quot;toStationText&quot;)</span><br><span class="line">                    ends.click()</span><br><span class="line">                    ends.clear()</span><br><span class="line">                    ends.send_keys(end_station)</span><br><span class="line">                    ends.send_keys(Keys.ENTER)</span><br><span class="line"></span><br><span class="line">                    #选择时间</span><br><span class="line">                    #使用js将只读属性去除，完成选择时间</span><br><span class="line">                    js = &apos;document.getElementById(&quot;train_date&quot;).removeAttribute(&quot;readonly&quot;);&apos;</span><br><span class="line">                    self.browser.execute_script(js)</span><br><span class="line">                    date = self.browser.find_element_by_id(&apos;train_date&apos;)</span><br><span class="line">                    date.clear()</span><br><span class="line">                    date.send_keys(&apos;2018-02-10&apos;)</span><br><span class="line">                    date.click()</span><br><span class="line"></span><br><span class="line">                    self.browser.find_element_by_id(&quot;query_ticket&quot;).click()</span><br><span class="line">                    time.sleep(2)</span><br><span class="line"></span><br><span class="line">                    text = self.browser.find_element_by_id(ticket_id).text</span><br><span class="line">                    if text == u&quot;无&quot;:</span><br><span class="line">                        print(u&quot;【%s】到【%s】的余票为0，节哀～&quot; % (start_station, end_station))</span><br><span class="line">                        time.sleep(1)</span><br><span class="line">                    elif text == u&quot;*&quot;:</span><br><span class="line">                        print(u&quot;【%s】到【%s】的车票还未开售，请耐心等待～&quot; % (start_station, end_station))</span><br><span class="line">                        time.sleep(1)</span><br><span class="line">                    else:</span><br><span class="line">                        print(u&quot;发现【%s】到【%s】的余票，抢!&quot; % (start_station, end_station))</span><br><span class="line">            except:</span><br><span class="line">                continue</span><br><span class="line">        print(&quot;结束查询【%s】次列车余票信息&quot; % train_name)</span><br><span class="line"></span><br><span class="line">    def close_browser(self):</span><br><span class="line">        &quot;&quot;&quot;关浏览器&quot;&quot;&quot;</span><br><span class="line">        time.sleep(3)</span><br><span class="line">        self.browser.quit()</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    #查票</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    search_ticket = monitorTickets()</span><br><span class="line">    while True:</span><br><span class="line">        print(&quot;监控硬座&quot;)</span><br><span class="line">        search_ticket.search_tickets(&apos;T116&apos;, [&apos;上海&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;陇西&apos;], &apos;YZ_550000T11671&apos;)</span><br><span class="line">        search_ticket.search_tickets(&apos;Z216&apos;, [&apos;上海&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;甘谷&apos;], &apos;YZ_550000Z21605&apos;)</span><br><span class="line">        search_ticket.search_tickets(&apos;T112&apos;, [&apos;嘉兴&apos;, &apos;昆山&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;陇西&apos;], &apos;YZ_560000T11251&apos;)</span><br><span class="line">        search_ticket.search_tickets(&apos;T204&apos;, [&apos;上海&apos;, &apos;昆山&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;兰州&apos;], &apos;YZ_550000T20450&apos;)</span><br><span class="line">        search_ticket.search_tickets(&apos;Z40&apos;, [&apos;上海&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;兰州&apos;], &apos;YZ_5500000Z4061&apos;)</span><br><span class="line">        print(&quot;监控硬座结束&quot;)</span><br><span class="line"></span><br><span class="line">        # print(&quot;监控硬卧&quot;)</span><br><span class="line">        # search_ticket.search_tickets(&apos;T116&apos;, [&apos;上海&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;陇西&apos;], &apos;YW_550000T11671&apos;)</span><br><span class="line">        # search_ticket.search_tickets(&apos;Z216&apos;, [&apos;上海&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;甘谷&apos;], &apos;YW_550000Z21605&apos;)</span><br><span class="line">        # search_ticket.search_tickets(&apos;T112&apos;, [&apos;嘉兴&apos;, &apos;昆山&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;陇西&apos;], &apos;YW_560000T11251&apos;)</span><br><span class="line">        # search_ticket.search_tickets(&apos;T204&apos;, [&apos;上海&apos;, &apos;昆山&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;兰州&apos;], &apos;YW_550000T20450&apos;)</span><br><span class="line">        # search_ticket.search_tickets(&apos;Z40&apos;, [&apos;上海&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;兰州&apos;], &apos;YW_5500000Z4061&apos;)</span><br><span class="line">        # print(&quot;监控硬卧结束&quot;)</span><br><span class="line">        #</span><br><span class="line">        # print(&quot;监控软卧&quot;)</span><br><span class="line">        # search_ticket.search_tickets(&apos;T116&apos;, [&apos;上海&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;陇西&apos;], &apos;RW_550000T11671&apos;)</span><br><span class="line">        # search_ticket.search_tickets(&apos;Z216&apos;, [&apos;上海&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;甘谷&apos;], &apos;RW_550000Z21605&apos;)</span><br><span class="line">        # search_ticket.search_tickets(&apos;T112&apos;, [&apos;嘉兴&apos;, &apos;昆山&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;陇西&apos;], &apos;RW_560000T11251&apos;)</span><br><span class="line">        # search_ticket.search_tickets(&apos;T204&apos;, [&apos;上海&apos;, &apos;昆山&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;兰州&apos;], &apos;RW_550000T20450&apos;)</span><br><span class="line">        # search_ticket.search_tickets(&apos;Z40&apos;, [&apos;上海&apos;, &apos;苏州&apos;], [&apos;宝鸡&apos;, &apos;天水&apos;, &apos;兰州&apos;], &apos;RW_5500000Z4061&apos;)</span><br><span class="line">        # print(&quot;监控软卧结束&quot;)</span><br><span class="line">    #     msg = input(&quot;Enter &apos;q&apos; to quit&quot;)</span><br><span class="line">    #     if msg == &apos;q&apos;:</span><br><span class="line">    #         break</span><br><span class="line">    # search_ticket.close_browser()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;翻日历突然意识到，好像要放假了，又是一年春运时，就想着可不可以用selenium做个自己的监控12306余票的程序。&lt;/p&gt;
    
    </summary>
    
      <category term="selenium" scheme="http://tokyle.com/categories/selenium/"/>
    
    
      <category term="selenium" scheme="http://tokyle.com/tags/selenium/"/>
    
      <category term="python" scheme="http://tokyle.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>登录网易邮箱</title>
    <link href="http://tokyle.com/2018/01/05/%E7%99%BB%E5%BD%95%E7%BD%91%E6%98%93%E9%82%AE%E7%AE%B1/"/>
    <id>http://tokyle.com/2018/01/05/登录网易邮箱/</id>
    <published>2018-01-05T00:53:03.000Z</published>
    <updated>2018-01-05T00:54:11.264Z</updated>
    
    <content type="html"><![CDATA[<p>基于python3的自动化测试框架selenium3实践</p><a id="more"></a><p>登录网易邮箱（126,163）</p><p><strong>登录163</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#coding:utf-8</span><br><span class="line">from selenium import webdriver</span><br><span class="line">from selenium.webdriver.common.keys import Keys</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line">driver.get(&apos;http://mail.163.com/&apos;)</span><br><span class="line">driver.implicitly_wait(10)</span><br><span class="line">#切换iframe</span><br><span class="line">driver.switch_to_frame(&apos;x-URS-iframe&apos;)</span><br><span class="line">driver.find_element_by_name(&apos;email&apos;).send_keys(&apos;123&apos;)</span><br><span class="line">driver.find_element_by_name(&apos;password&apos;).send_keys(&apos;456&apos;)</span><br><span class="line">brower.find_element_by_name(&quot;password&quot;).send_keys(Keys.ENTER)</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#coding:utf-8</span><br><span class="line">from selenium import webdriver</span><br><span class="line">from selenium.webdriver.common.keys import Keys</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line">driver.get(&apos;http://mail.163.com/&apos;)</span><br><span class="line">driver.implicitly_wait(10)</span><br><span class="line">#切换iframe</span><br><span class="line">iframe = driver.find_elements_by_tag_name(&apos;iframe&apos;)</span><br><span class="line">driver.switch_to_frame(iframe)</span><br><span class="line">#driver.switch_to.frame(&apos;x-URS-iframe&apos;)</span><br><span class="line">driver.find_element_by_name(&apos;email&apos;).send_keys(&apos;123&apos;)</span><br><span class="line">driver.find_element_by_name(&apos;password&apos;).send_keys(&apos;456&apos;)</span><br><span class="line">brower.find_element_by_name(&quot;password&quot;).send_keys(Keys.ENTER)</span><br></pre></td></tr></table></figure></p><p><strong>登录126</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#coding:utf-8</span><br><span class="line">from selenium import webdriver</span><br><span class="line">from selenium.webdriver.common.keys import Keys</span><br><span class="line">driver=webdriver.Firefox()</span><br><span class="line">driver.get(&quot;http://mail.126.com&quot;)</span><br><span class="line">driver.implicitly_wait(10)</span><br><span class="line">driver.switch_to.frame(&quot;x-URS-iframe&quot;) #切换frame</span><br><span class="line">driver.find_element_by_name(&quot;email&quot;).send_keys(&quot;123&quot;)   #使用name定位</span><br><span class="line">driver.find_element_by_name(&apos;password&apos;).send_keys(&apos;456&apos;)</span><br><span class="line">brower.find_element_by_name(&quot;password&quot;).send_keys(Keys.ENTER)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于python3的自动化测试框架selenium3实践&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://tokyle.com/categories/python/"/>
    
    
      <category term="selenium" scheme="http://tokyle.com/tags/selenium/"/>
    
  </entry>
  
  <entry>
    <title>nose跳过测试</title>
    <link href="http://tokyle.com/2018/01/04/nose%E8%B7%B3%E8%BF%87%E6%B5%8B%E8%AF%95/"/>
    <id>http://tokyle.com/2018/01/04/nose跳过测试/</id>
    <published>2018-01-04T03:39:45.000Z</published>
    <updated>2018-01-04T03:57:21.674Z</updated>
    
    <content type="html"><![CDATA[<p>nose进行单元测试，和unittest一样，有跳过某个方法，指定特定类进行测试的功能。</p><a id="more"></a><h3 id="识别规则"><a href="#识别规则" class="headerlink" title="识别规则"></a>识别规则</h3><p>使用nose进行单元测试，测试用例识别规则如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nosetests only_test_this.py</span><br><span class="line">nosetests test.module</span><br><span class="line">nosetests another.test:TestCase.test_method</span><br><span class="line">nosetests a.test:TestCase</span><br><span class="line">nosetests /path/to/test/file.py:test.function</span><br></pre></td></tr></table></figure></p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><h4 id="执行全部测试"><a href="#执行全部测试" class="headerlink" title="执行全部测试"></a>执行全部测试</h4><p>直接代码示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import traceback</span><br><span class="line">from nose.tools import eq_</span><br><span class="line">from nose.plugins.attrib import attr</span><br><span class="line">from nose.plugins.skip import SkipTest</span><br><span class="line">from functools import reduce</span><br><span class="line"></span><br><span class="line">class test_nosetests():</span><br><span class="line"></span><br><span class="line">    #测试加法</span><br><span class="line">    def test_sum(self):</span><br><span class="line">        a = 1</span><br><span class="line">        b = 2</span><br><span class="line">        res = 3</span><br><span class="line">        eq_(a+b,res)</span><br><span class="line"></span><br><span class="line">    #测试乘法</span><br><span class="line">    def test_mul(self):</span><br><span class="line">        a = 1</span><br><span class="line">        b = 2</span><br><span class="line">        res = 2</span><br><span class="line">        eq_(a*b, res)</span><br><span class="line"></span><br><span class="line">    #测试除法</span><br><span class="line">    def test_div(self):</span><br><span class="line">        a = 2</span><br><span class="line">        b = 0</span><br><span class="line">        res = 1</span><br><span class="line">        try:</span><br><span class="line">            eq_(a/b, res)</span><br><span class="line">        except ZeroDivisionError as e:</span><br><span class="line">            print(traceback.print_exc())</span><br><span class="line"></span><br><span class="line">    #测试reduce函数</span><br><span class="line">    def test_reduce(self):</span><br><span class="line">        req = range(1,6)</span><br><span class="line">        a = 120</span><br><span class="line">        res = reduce(lambda x, y: x*y, req)</span><br><span class="line">        eq_(a, res)</span><br></pre></td></tr></table></figure></p><p>想要对<code>test_nosetests</code>该方法进行测试，可以：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. nosetests -v NoseTestsexercise.py --with-html --html-file=G:/workstation/report/test_nosetests.html</span><br><span class="line">2. nosetests -v NoseTestsexercise.py:test_nosetests --with-html --html-file=G:/workstation/report/test_nosetests.html</span><br></pre></td></tr></table></figure><p>由于该python文件只有这一个测试类，所以直接nosetests该python文件即可以进行测试，或者是指定该python文件的测试类如<code>NoseTestsexercise.py:test_nosetests</code>方式</p><p>测试结果：<img src="/images/nosetests_py.jpg" alt=""></p><h4 id="执行指定方法的测试"><a href="#执行指定方法的测试" class="headerlink" title="执行指定方法的测试"></a>执行指定方法的测试</h4><p>执行指定的一个方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nosetests -v NoseTestsexercise.py:test_nosetests.test_reduce --with-html --html-file=G:/workstation/report/test_nosetests.html</span><br></pre></td></tr></table></figure></p><p>示例执行了<code>test_nosetests</code>类下的<code>test_reduce</code>方法的测试</p><p>测试结果：<img src="/images/nosetests_single.jpg" alt=""></p><h4 id="跳过指定方法的测试"><a href="#跳过指定方法的测试" class="headerlink" title="跳过指定方法的测试"></a>跳过指定方法的测试</h4><p>有的时候，只需要跳过某个方法：<br>例如想跳过<code>test_mul</code>该方法，只需要在代码上增加跳过标志即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#测试乘法</span><br><span class="line">   def test_mul(self):</span><br><span class="line">       a = 1</span><br><span class="line">       b = 2</span><br><span class="line">       res = 2</span><br><span class="line">       eq_(a*b, res)</span><br><span class="line">       raise SkipTest</span><br></pre></td></tr></table></figure></p><p>执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nosetests -v NoseTestsexercise.py:test_nosetests --with-html --html-file=G:/workstation/report/test_nosetests.html</span><br></pre></td></tr></table></figure></p><p>测试结果：<img src="/images/nosetests_skip.jpg" alt=""></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>另外，nosetests也有用例执行优先级的功能<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from nose.plugins.attrib import attr</span><br><span class="line">@attr(speed=&apos;slow&apos;)</span><br><span class="line">    def test_big_download(self):</span><br><span class="line">        print(&apos;pass&apos;)</span><br></pre></td></tr></table></figure></p><p>执行只需要：<code>nosetests -a speed=slow</code>即可</p><blockquote><p><a href="http://www.cnblogs.com/landhu/p/5689414.html" target="_blank" rel="noopener">参考用法</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;nose进行单元测试，和unittest一样，有跳过某个方法，指定特定类进行测试的功能。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://tokyle.com/categories/python/"/>
    
    
      <category term="nose" scheme="http://tokyle.com/tags/nose/"/>
    
      <category term="单元测试" scheme="http://tokyle.com/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>python单元测试框架-nose</title>
    <link href="http://tokyle.com/2018/01/03/python%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6-nose/"/>
    <id>http://tokyle.com/2018/01/03/python单元测试框架-nose/</id>
    <published>2018-01-03T04:59:38.000Z</published>
    <updated>2018-01-04T01:28:14.968Z</updated>
    
    <content type="html"><![CDATA[<p>python单元测试框架 nose简介</p><a id="more"></a><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>nose是python单元测试的另一框架，nose可以自动识别继承于unittest.TestCase的测试单元，并执行测试，而且，nose也可以测试非继承于unittest.TestCase的测试单元。nose提供了丰富的API便于编写测试代码。</p><h3 id="安装及使用"><a href="#安装及使用" class="headerlink" title="安装及使用"></a>安装及使用</h3><p>安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nose</span><br></pre></td></tr></table></figure></p><p>基本语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nosetests [options] [(optional) test files or directories]</span><br></pre></td></tr></table></figure></p><h3 id="扩展使用"><a href="#扩展使用" class="headerlink" title="扩展使用"></a>扩展使用</h3><p>nose自动收集单元测试，收集它当前工作目录下的源代码文件、目录以及包。任何的源代码文件、目录或者包只要匹配正则表达式，他们就会被自动收集。包的测试收集按照树的层级级别一级一级进行，因此package.tests、package.sub.tests、package.sub.sub2.tests将会被收集。</p><h4 id="扩展插件"><a href="#扩展插件" class="headerlink" title="扩展插件"></a>扩展插件</h4><p>nose支持多种插件，可完成基本大部分测试需要。nose拥有很多内置的插件帮助进行输出抓取、错误查找、代码覆盖、文档测试（doctest）等等。</p><p>命令行执行命令可查看插件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nosetests –plugins</span><br></pre></td></tr></table></figure></p><p>若想查看详细信息，可执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nosetests –plugins -v</span><br><span class="line">nosetests –plugins -vv</span><br></pre></td></tr></table></figure></p><h4 id="nose使用"><a href="#nose使用" class="headerlink" title="nose使用"></a>nose使用</h4><p>nose使用和unittest类似，unittest的断言，nose.tools中都可以选择使用<br>使用示例：<br>unittest：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import unittest</span><br><span class="line"></span><br><span class="line">class NoseTest(unittest.TestCase):</span><br><span class="line"></span><br><span class="line">    def setUp(self):</span><br><span class="line">        print(&quot;=============setUp===============&quot;)</span><br><span class="line"></span><br><span class="line">    def test_Pass(self):</span><br><span class="line">        print(&quot;==========begin test=========&quot;)</span><br><span class="line">        a = 1</span><br><span class="line">        b = 2</span><br><span class="line">        self.assertTrue(a == b, &apos;断言失败, %a != %a&apos;% (a, b))</span><br><span class="line"></span><br><span class="line">    def tearDown(self):</span><br><span class="line">        print(&quot;==============tearDown===============&quot;)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure></p><p>nose:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from nose.tools import eq_</span><br><span class="line">from nose.tools import assert_equal</span><br><span class="line"></span><br><span class="line">class noseTest():</span><br><span class="line">    a = 1</span><br><span class="line">    b = 2</span><br><span class="line">    #assert_equal(a, b, &apos;%a != %a&apos;%(a,b))</span><br><span class="line">    eq_(a, b)</span><br></pre></td></tr></table></figure></p><p>nose也支持在代码中直接运行<code>nose.main()</code>或者<code>nose.run()</code>这样类似于unittest的方式，但是还是建议在命令行中运行nosetests来执行单元测试<br>参考示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nosetests -v HandleFrameByPageSource.py:test_handleFrameByPageSource --with-html --html-file=G:\workstation\report\handleframe.html</span><br></pre></td></tr></table></figure></p><p>说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nosetests -v: 显示详细的运行信息和调试信息</span><br><span class="line">HandleFrameByPageSource.py:test_handleFrameByPageSource ：测试对象为该python文件下的test_handleFrameByPageSource类</span><br><span class="line">--with-html ：使用html插件,生成标准HTML格式测试报告</span><br><span class="line">--html-file=G:\workstation\report\handleframe.html ：测试结果输出为该路径下handleframe.html文件</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python单元测试框架 nose简介&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://tokyle.com/categories/python/"/>
    
    
      <category term="nose" scheme="http://tokyle.com/tags/nose/"/>
    
      <category term="单元测试" scheme="http://tokyle.com/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>win32api_VK_CODE</title>
    <link href="http://tokyle.com/2018/01/02/win32api-VK-CODE/"/>
    <id>http://tokyle.com/2018/01/02/win32api-VK-CODE/</id>
    <published>2018-01-02T09:37:20.000Z</published>
    <updated>2018-01-02T09:44:39.650Z</updated>
    
    <content type="html"><![CDATA[<p>python使用win32api模块，可模拟键盘按键，应用于爬虫及自动化测试。</p><a id="more"></a><p>键盘按键对应的<code>Vitual keystroke</code>如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br></pre></td><td class="code"><pre><span class="line">#Giant dictonary to hold key name and VK value</span><br><span class="line">VK_CODE = &#123;&apos;backspace&apos;:0x08,</span><br><span class="line">           &apos;tab&apos;:0x09,</span><br><span class="line">           &apos;clear&apos;:0x0C,</span><br><span class="line">           &apos;enter&apos;:0x0D,</span><br><span class="line">           &apos;shift&apos;:0x10,</span><br><span class="line">           &apos;ctrl&apos;:0x11,</span><br><span class="line">           &apos;alt&apos;:0x12,</span><br><span class="line">           &apos;pause&apos;:0x13,</span><br><span class="line">           &apos;caps_lock&apos;:0x14,</span><br><span class="line">           &apos;esc&apos;:0x1B,</span><br><span class="line">           &apos;spacebar&apos;:0x20,</span><br><span class="line">           &apos;page_up&apos;:0x21,</span><br><span class="line">           &apos;page_down&apos;:0x22,</span><br><span class="line">           &apos;end&apos;:0x23,</span><br><span class="line">           &apos;home&apos;:0x24,</span><br><span class="line">           &apos;left_arrow&apos;:0x25,</span><br><span class="line">           &apos;up_arrow&apos;:0x26,</span><br><span class="line">           &apos;right_arrow&apos;:0x27,</span><br><span class="line">           &apos;down_arrow&apos;:0x28,</span><br><span class="line">           &apos;select&apos;:0x29,</span><br><span class="line">           &apos;print&apos;:0x2A,</span><br><span class="line">           &apos;execute&apos;:0x2B,</span><br><span class="line">           &apos;print_screen&apos;:0x2C,</span><br><span class="line">           &apos;ins&apos;:0x2D,</span><br><span class="line">           &apos;del&apos;:0x2E,</span><br><span class="line">           &apos;help&apos;:0x2F,</span><br><span class="line">           &apos;0&apos;:0x30,</span><br><span class="line">           &apos;1&apos;:0x31,</span><br><span class="line">           &apos;2&apos;:0x32,</span><br><span class="line">           &apos;3&apos;:0x33,</span><br><span class="line">           &apos;4&apos;:0x34,</span><br><span class="line">           &apos;5&apos;:0x35,</span><br><span class="line">           &apos;6&apos;:0x36,</span><br><span class="line">           &apos;7&apos;:0x37,</span><br><span class="line">           &apos;8&apos;:0x38,</span><br><span class="line">           &apos;9&apos;:0x39,</span><br><span class="line">           &apos;a&apos;:0x41,</span><br><span class="line">           &apos;b&apos;:0x42,</span><br><span class="line">           &apos;c&apos;:0x43,</span><br><span class="line">           &apos;d&apos;:0x44,</span><br><span class="line">           &apos;e&apos;:0x45,</span><br><span class="line">           &apos;f&apos;:0x46,</span><br><span class="line">           &apos;g&apos;:0x47,</span><br><span class="line">           &apos;h&apos;:0x48,</span><br><span class="line">           &apos;i&apos;:0x49,</span><br><span class="line">           &apos;j&apos;:0x4A,</span><br><span class="line">           &apos;k&apos;:0x4B,</span><br><span class="line">           &apos;l&apos;:0x4C,</span><br><span class="line">           &apos;m&apos;:0x4D,</span><br><span class="line">           &apos;n&apos;:0x4E,</span><br><span class="line">           &apos;o&apos;:0x4F,</span><br><span class="line">           &apos;p&apos;:0x50,</span><br><span class="line">           &apos;q&apos;:0x51,</span><br><span class="line">           &apos;r&apos;:0x52,</span><br><span class="line">           &apos;s&apos;:0x53,</span><br><span class="line">           &apos;t&apos;:0x54,</span><br><span class="line">           &apos;u&apos;:0x55,</span><br><span class="line">           &apos;v&apos;:0x56,</span><br><span class="line">           &apos;w&apos;:0x57,</span><br><span class="line">           &apos;x&apos;:0x58,</span><br><span class="line">           &apos;y&apos;:0x59,</span><br><span class="line">           &apos;z&apos;:0x5A,</span><br><span class="line">           &apos;numpad_0&apos;:0x60,</span><br><span class="line">           &apos;numpad_1&apos;:0x61,</span><br><span class="line">           &apos;numpad_2&apos;:0x62,</span><br><span class="line">           &apos;numpad_3&apos;:0x63,</span><br><span class="line">           &apos;numpad_4&apos;:0x64,</span><br><span class="line">           &apos;numpad_5&apos;:0x65,</span><br><span class="line">           &apos;numpad_6&apos;:0x66,</span><br><span class="line">           &apos;numpad_7&apos;:0x67,</span><br><span class="line">           &apos;numpad_8&apos;:0x68,</span><br><span class="line">           &apos;numpad_9&apos;:0x69,</span><br><span class="line">           &apos;multiply_key&apos;:0x6A,</span><br><span class="line">           &apos;add_key&apos;:0x6B,</span><br><span class="line">           &apos;separator_key&apos;:0x6C,</span><br><span class="line">           &apos;subtract_key&apos;:0x6D,</span><br><span class="line">           &apos;decimal_key&apos;:0x6E,</span><br><span class="line">           &apos;divide_key&apos;:0x6F,</span><br><span class="line">           &apos;F1&apos;:0x70,</span><br><span class="line">           &apos;F2&apos;:0x71,</span><br><span class="line">           &apos;F3&apos;:0x72,</span><br><span class="line">           &apos;F4&apos;:0x73,</span><br><span class="line">           &apos;F5&apos;:0x74,</span><br><span class="line">           &apos;F6&apos;:0x75,</span><br><span class="line">           &apos;F7&apos;:0x76,</span><br><span class="line">           &apos;F8&apos;:0x77,</span><br><span class="line">           &apos;F9&apos;:0x78,</span><br><span class="line">           &apos;F10&apos;:0x79,</span><br><span class="line">           &apos;F11&apos;:0x7A,</span><br><span class="line">           &apos;F12&apos;:0x7B,</span><br><span class="line">           &apos;F13&apos;:0x7C,</span><br><span class="line">           &apos;F14&apos;:0x7D,</span><br><span class="line">           &apos;F15&apos;:0x7E,</span><br><span class="line">           &apos;F16&apos;:0x7F,</span><br><span class="line">           &apos;F17&apos;:0x80,</span><br><span class="line">           &apos;F18&apos;:0x81,</span><br><span class="line">           &apos;F19&apos;:0x82,</span><br><span class="line">           &apos;F20&apos;:0x83,</span><br><span class="line">           &apos;F21&apos;:0x84,</span><br><span class="line">           &apos;F22&apos;:0x85,</span><br><span class="line">           &apos;F23&apos;:0x86,</span><br><span class="line">           &apos;F24&apos;:0x87,</span><br><span class="line">           &apos;num_lock&apos;:0x90,</span><br><span class="line">           &apos;scroll_lock&apos;:0x91,</span><br><span class="line">           &apos;left_shift&apos;:0xA0,</span><br><span class="line">           &apos;right_shift &apos;:0xA1,</span><br><span class="line">           &apos;left_control&apos;:0xA2,</span><br><span class="line">           &apos;right_control&apos;:0xA3,</span><br><span class="line">           &apos;left_menu&apos;:0xA4,</span><br><span class="line">           &apos;right_menu&apos;:0xA5,</span><br><span class="line">           &apos;browser_back&apos;:0xA6,</span><br><span class="line">           &apos;browser_forward&apos;:0xA7,</span><br><span class="line">           &apos;browser_refresh&apos;:0xA8,</span><br><span class="line">           &apos;browser_stop&apos;:0xA9,</span><br><span class="line">           &apos;browser_search&apos;:0xAA,</span><br><span class="line">           &apos;browser_favorites&apos;:0xAB,</span><br><span class="line">           &apos;browser_start_and_home&apos;:0xAC,</span><br><span class="line">           &apos;volume_mute&apos;:0xAD,</span><br><span class="line">           &apos;volume_Down&apos;:0xAE,</span><br><span class="line">           &apos;volume_up&apos;:0xAF,</span><br><span class="line">           &apos;next_track&apos;:0xB0,</span><br><span class="line">           &apos;previous_track&apos;:0xB1,</span><br><span class="line">           &apos;stop_media&apos;:0xB2,</span><br><span class="line">           &apos;play/pause_media&apos;:0xB3,</span><br><span class="line">           &apos;start_mail&apos;:0xB4,</span><br><span class="line">           &apos;select_media&apos;:0xB5,</span><br><span class="line">           &apos;start_application_1&apos;:0xB6,</span><br><span class="line">           &apos;start_application_2&apos;:0xB7,</span><br><span class="line">           &apos;attn_key&apos;:0xF6,</span><br><span class="line">           &apos;crsel_key&apos;:0xF7,</span><br><span class="line">           &apos;exsel_key&apos;:0xF8,</span><br><span class="line">           &apos;play_key&apos;:0xFA,</span><br><span class="line">           &apos;zoom_key&apos;:0xFB,</span><br><span class="line">           &apos;clear_key&apos;:0xFE,</span><br><span class="line">           &apos;+&apos;:0xBB,</span><br><span class="line">           &apos;,&apos;:0xBC,</span><br><span class="line">           &apos;-&apos;:0xBD,</span><br><span class="line">           &apos;.&apos;:0xBE,</span><br><span class="line">           &apos;/&apos;:0xBF,</span><br><span class="line">           &apos;`&apos;:0xC0,</span><br><span class="line">           &apos;;&apos;:0xBA,</span><br><span class="line">           &apos;[&apos;:0xDB,</span><br><span class="line">           &apos;\\&apos;:0xDC,</span><br><span class="line">           &apos;]&apos;:0xDD,</span><br><span class="line">           &quot;&apos;&quot;:0xDE,</span><br><span class="line">           &apos;`&apos;:0xC0&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def press(*args):</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    one press, one release.</span><br><span class="line">    accepts as many arguments as you want. e.g. press(&apos;left_arrow&apos;, &apos;a&apos;,&apos;b&apos;).</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    for i in args:</span><br><span class="line">        win32api.keybd_event(VK_CODE[i], 0,0,0)</span><br><span class="line">        time.sleep(.05)</span><br><span class="line">        win32api.keybd_event(VK_CODE[i],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">def pressAndHold(*args):</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    press and hold. Do NOT release.</span><br><span class="line">    accepts as many arguments as you want.</span><br><span class="line">    e.g. pressAndHold(&apos;left_arrow&apos;, &apos;a&apos;,&apos;b&apos;).</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    for i in args:</span><br><span class="line">        win32api.keybd_event(VK_CODE[i], 0,0,0)</span><br><span class="line">        time.sleep(.05)</span><br><span class="line">           </span><br><span class="line">def pressHoldRelease(*args):</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    press and hold passed in strings. Once held, release</span><br><span class="line">    accepts as many arguments as you want.</span><br><span class="line">    e.g. pressAndHold(&apos;left_arrow&apos;, &apos;a&apos;,&apos;b&apos;).</span><br><span class="line"></span><br><span class="line">    this is useful for issuing shortcut command or shift commands.</span><br><span class="line">    e.g. pressHoldRelease(&apos;ctrl&apos;, &apos;alt&apos;, &apos;del&apos;), pressHoldRelease(&apos;shift&apos;,&apos;a&apos;)</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    for i in args:</span><br><span class="line">        win32api.keybd_event(VK_CODE[i], 0,0,0)</span><br><span class="line">        time.sleep(.05)</span><br><span class="line">            </span><br><span class="line">    for i in args:</span><br><span class="line">            win32api.keybd_event(VK_CODE[i],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            time.sleep(.1)</span><br><span class="line">            </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">def release(*args):</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    release depressed keys</span><br><span class="line">    accepts as many arguments as you want.</span><br><span class="line">    e.g. release(&apos;left_arrow&apos;, &apos;a&apos;,&apos;b&apos;).</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    for i in args:</span><br><span class="line">           win32api.keybd_event(VK_CODE[i],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def typer(string=None,*args):</span><br><span class="line">##    time.sleep(4)</span><br><span class="line">    for i in string:</span><br><span class="line">        if i == &apos; &apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;spacebar&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;spacebar&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;!&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;1&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;1&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;@&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;2&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;2&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;&#123;&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;[&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;[&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;?&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;/&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;/&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;:&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;;&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;;&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;&quot;&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;\&apos;&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;\&apos;&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;&#125;&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;]&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;]&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;#&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;3&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;3&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;$&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;4&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;4&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;%&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;5&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;5&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;^&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;6&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;6&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;&amp;&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;7&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;7&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;*&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;8&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;8&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;(&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;9&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;9&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;)&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;0&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;0&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;_&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;-&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;-&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        elif i == &apos;=&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;+&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;+&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;~&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;`&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;`&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;&lt;&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;,&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;,&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;&gt;&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;.&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;.&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;A&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;a&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;a&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;B&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;b&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;b&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;C&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;c&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;c&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;D&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;d&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;d&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;E&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;e&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;e&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;F&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;f&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;f&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;G&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;g&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;g&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;H&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;h&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;h&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;I&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;i&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;i&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;J&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;j&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;j&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;K&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;k&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;k&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;L&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;l&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;l&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;M&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;m&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;m&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;N&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;n&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;n&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;O&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;o&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;o&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;P&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;p&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;p&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;Q&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;q&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;q&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;R&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;r&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;r&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;S&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;s&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;s&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;T&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;t&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;t&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;U&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;u&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;u&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;V&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;v&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;v&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;W&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;w&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;w&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;X&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;x&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;x&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;Y&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;y&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;y&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">        elif i == &apos;Z&apos;:</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;], 0,0,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;z&apos;], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;left_shift&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line">            win32api.keybd_event(VK_CODE[&apos;z&apos;],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">        else:    </span><br><span class="line">            win32api.keybd_event(VK_CODE[i], 0,0,0)</span><br><span class="line">            time.sleep(.05)</span><br><span class="line">            win32api.keybd_event(VK_CODE[i],0 ,win32con.KEYEVENTF_KEYUP ,0)</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://gist.github.com/chriskiehl/2906125" target="_blank" rel="noopener">参考地址</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python使用win32api模块，可模拟键盘按键，应用于爬虫及自动化测试。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://tokyle.com/categories/python/"/>
    
    
      <category term="selenium" scheme="http://tokyle.com/tags/selenium/"/>
    
      <category term="python" scheme="http://tokyle.com/tags/python/"/>
    
      <category term="win32api" scheme="http://tokyle.com/tags/win32api/"/>
    
  </entry>
  
  <entry>
    <title>python3.6安装pywin32</title>
    <link href="http://tokyle.com/2017/12/28/python3-6%E5%AE%89%E8%A3%85pywin32/"/>
    <id>http://tokyle.com/2017/12/28/python3-6安装pywin32/</id>
    <published>2017-12-28T08:47:55.000Z</published>
    <updated>2017-12-28T08:53:35.512Z</updated>
    
    <content type="html"><![CDATA[<p>python3.6装载win32api模块</p><a id="more"></a><p>使用pip安装win32报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could not find a version that satisfies the requirement win32api (from versions: )No matching distribution found for win32api</span><br></pre></td></tr></table></figure><p>stack overflow上面有两种回答</p><ol><li><code>pip install pypiwin32</code></li><li>从<a href="https://sourceforge.net/projects/pywin32/files/pywin32/Build%20220/" target="_blank" rel="noopener">windowsapi官网</a>下载安装程序，点击安装</li></ol><p>首先尝试了第一种方式，没啥用，还是找不到win32api<br>尝试第二种方法，直接报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Python version 3.6-32 required, which was not found in the registry.</span><br></pre></td></tr></table></figure></p><p>找半天问题，首先本地python是64位版本，下载的也是64位安装包，报这莫名其妙的注册表错误。<br>后来在注册表里加了个python3.6-32就能安装了，莫名其妙。。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Python\PythonCore\3.6-32</span><br></pre></td></tr></table></figure></p><p>导入了个奇奇怪怪的win32api，貌似用不了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import win32.win32api</span><br><span class="line">import win32.win32clipboard</span><br><span class="line">import win32com</span><br></pre></td></tr></table></figure></p><p>根据以往踩坑经验，改注册表好像都没什么好下场，于是乎，把装好的win32全部删除，注册表还原，重新下载更新版本的pywin32：<a href="https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/" target="_blank" rel="noopener">下载链接</a></p><p>重新安装之后，重启pycharm，这次好像是成功了。。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import win32api</span><br><span class="line">import win32con</span><br><span class="line"></span><br><span class="line">def keyDown(keyName):</span><br><span class="line">    win32api.keybd_event()</span><br><span class="line">    win32con.KEYEVENTF_KEYUP</span><br></pre></td></tr></table></figure></p><p>反正过程是挺无语的，莫名其妙的就好了。</p><p>附上环境信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WIN-10 64位</span><br><span class="line">python-3.6 64位</span><br><span class="line">pywin32-221.win-amd64-py3.6</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python3.6装载win32api模块&lt;/p&gt;
    
    </summary>
    
      <category term="自动化测试" scheme="http://tokyle.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="python" scheme="http://tokyle.com/tags/python/"/>
    
      <category term="pywin32" scheme="http://tokyle.com/tags/pywin32/"/>
    
  </entry>
  
  <entry>
    <title>python3_map()函数</title>
    <link href="http://tokyle.com/2017/12/27/python3-map-%E5%87%BD%E6%95%B0/"/>
    <id>http://tokyle.com/2017/12/27/python3-map-函数/</id>
    <published>2017-12-27T09:47:09.000Z</published>
    <updated>2017-12-28T08:56:31.179Z</updated>
    
    <content type="html"><![CDATA[<p>坑爹python3改动之map()函数</p><a id="more"></a><p>做自动化测试，获取并校验下拉列表中所有值，由于实在不想先写个空列表，再来个for循环全部加到列表中，就想到了map()函数，折腾半天，各种报错，墙里墙外翻半天，终于找到跟我一样入坑的人。</p><p>map()函数，python3改动</p><p>在python2中，以下代码可输出一个列表<code>[1, 2, 3, 4, 5]</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = map(lambda x:x, [1, 2, 3, 4, 5])</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></p><p>但是python3，这玩意只能输出个map对象：<code>&lt;map object at 0x00000278CB45D4E0&gt;</code></p><p>遇到这玩意也很多次了，直接加list：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = list(map(lambda x: x, [1, 2, 3, 4, 5]))</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></p><p>这样，在python3就可以输出<code>[1, 2, 3, 4, 5]</code></p><p>附自动化测试比较下拉列表值是否符合预期示例代码（百度新闻高级设置-显示条数为例）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from selenium import webdriver</span><br><span class="line">from selenium.webdriver.support.ui import Select</span><br><span class="line">import unittest</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">class News_Baidu(unittest.TestCase):</span><br><span class="line"></span><br><span class="line">    def setUp(self):</span><br><span class="line">        #打开浏览器</span><br><span class="line">        self.brower = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">    def test_Checklist(self):</span><br><span class="line">        #打开百度新闻页面</span><br><span class="line">        self.brower.get(&quot;http://news.baidu.com/&quot;)</span><br><span class="line">        #定位“高级设置”，并点击</span><br><span class="line">        self.brower.find_element_by_link_text(&quot;高级搜索&quot;).click()</span><br><span class="line">        #定位“搜索结果显示条数”</span><br><span class="line">        select_element = Select(self.brower.find_element_by_name(&apos;rn&apos;))</span><br><span class="line">        #获取下拉列表所有元素对象</span><br><span class="line">        select_options = select_element.options</span><br><span class="line">        #声明一个期望下拉列表值的列表(百度也是够坑的，值前面还有一个空格)</span><br><span class="line">        expect_optionlist = [&apos; 每页显示10条&apos;, &apos; 每页显示20条&apos;, &apos; 每页显示50条&apos;]</span><br><span class="line">        #获取实际的下拉列表值的列表</span><br><span class="line">        actual_optionlist = list(map(lambda option:option.text, select_options))</span><br><span class="line">        #断言结果是否适合期望</span><br><span class="line">        self.assertListEqual(actual_optionlist, expect_optionlist)</span><br><span class="line"></span><br><span class="line">    def tearDown(self):</span><br><span class="line">        #休眠</span><br><span class="line">        time.sleep(5)</span><br><span class="line">        #退出浏览器</span><br><span class="line">        self.brower.quit()</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;坑爹python3改动之map()函数&lt;/p&gt;
    
    </summary>
    
      <category term="自动化测试" scheme="http://tokyle.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="selenium" scheme="http://tokyle.com/tags/selenium/"/>
    
      <category term="python" scheme="http://tokyle.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>html报告乱码</title>
    <link href="http://tokyle.com/2017/12/26/html%E6%8A%A5%E5%91%8A%E4%B9%B1%E7%A0%81/"/>
    <id>http://tokyle.com/2017/12/26/html报告乱码/</id>
    <published>2017-12-26T06:03:49.000Z</published>
    <updated>2017-12-26T06:06:58.444Z</updated>
    
    <content type="html"><![CDATA[<p>使用HTMLTestRunner进行测试报告输出时，错误说明，中午乱码，版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3.6</span><br><span class="line">HTMLTestRunner 1.1.1</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>网上搜了一堆，全是用python2.x的，心痛，2.X到2020年不就不支持了嘛，为啥一个个的都在2.X上面，没办法，自己去捣鼓源码。</p><p>报告输出的html文件，使用类似于notepad的编辑器打开，编码格式改为UTF-8，重新在浏览器中打开，错误描述的中文显示就是正常文字。所以，只要在输出时，设置编码为“utf-8”应该就可以。</p><p>找到本地的HTMLTestRunner安装路径，一般都是在<code>G:\skills\python36\Lib\site-packages\HtmlTestRunner</code>类似这样的路径下，毕竟扩展包。下面有三个文件，和一个文件夹，文件夹里是报告的模板，不考虑，三个文件，一个是HtmlTestRunner的介绍，一个是<code>runner.py</code>，一个是<code>result.py</code>，输出报告，应该就在<code>result.py</code>文件中。</p><p>编辑器打开<code>result.py</code>，找到第350行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">with open(path_file, &apos;w&apos;) as report_file:</span><br></pre></td></tr></table></figure></p><p>只要修改成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">with open(path_file, &apos;w&apos;,encoding=&apos;utf-8&apos;) as report_file:</span><br></pre></td></tr></table></figure></p><p>即可。</p><p>附上<code>百度搜索自动化测试</code>代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import unittest</span><br><span class="line">import time</span><br><span class="line">from selenium import webdriver</span><br><span class="line">from HtmlTestRunner import HTMLTestRunner</span><br><span class="line"></span><br><span class="line">class GloryRoad(unittest.TestCase):</span><br><span class="line">    def setUp(self):</span><br><span class="line">        #启动chrome浏览器</span><br><span class="line">        self.brower = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">    def test_baidu(self):</span><br><span class="line">        #访问百度首页</span><br><span class="line">        self.brower.get(&quot;https://www.baidu.com&quot;)</span><br><span class="line">        #清空输入框内容</span><br><span class="line">        self.brower.find_element_by_id(&apos;kw&apos;).clear()</span><br><span class="line">        #搜索框输入“selenium3”</span><br><span class="line">        self.brower.find_element_by_id(&apos;kw&apos;).send_keys(&apos;selenium3&apos;)</span><br><span class="line">        #点击“百度一下”按键</span><br><span class="line">        self.brower.find_element_by_id(&apos;su&apos;).click()</span><br><span class="line">        #休眠3s</span><br><span class="line">        time.sleep(3)</span><br><span class="line">        assert &quot;google&quot; in self.brower.page_source, &quot;页面中不存在要寻找的关键字！&quot;</span><br><span class="line"></span><br><span class="line">    def tearDown(self):</span><br><span class="line">        #退出浏览器</span><br><span class="line">        self.brower.quit()</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    suite = unittest.TestLoader().loadTestsFromTestCase(GloryRoad)</span><br><span class="line">    runner = HTMLTestRunner(output=&apos;G:/workstation/report&apos;, report_title=&apos;Test Result&apos;)</span><br><span class="line">    runner.run(suite)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用HTMLTestRunner进行测试报告输出时，错误说明，中午乱码，版本：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;python3.6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HTMLTestRunner 1.1.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="自动化测试" scheme="http://tokyle.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="selenium" scheme="http://tokyle.com/tags/selenium/"/>
    
      <category term="python" scheme="http://tokyle.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pycharm单元测试</title>
    <link href="http://tokyle.com/2017/12/25/pycharm%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    <id>http://tokyle.com/2017/12/25/pycharm单元测试/</id>
    <published>2017-12-25T08:26:03.000Z</published>
    <updated>2017-12-25T08:29:43.883Z</updated>
    
    <content type="html"><![CDATA[<p>使用pycharm编写/执行单元测试用例</p><a id="more"></a><p>python单元测试用例，调用方式使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unittest.main()</span><br></pre></td></tr></table></figure></p><p>该方式，在python shell中可执行成功，在pycharm中会一直报错，参考网上的写法，最后校验调用改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if _name_ == &apos;_main_&apos;:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure></p><p>结果一直报错，<code>NameError: name &#39;_name_&#39; is not defined</code></p><p>简直了，找了半天，还是在墙外找到跟我有一样经历的哥们的求救，报错原因是<br><code>_name_</code>和<code>_main</code>都是双下划线，正确写法是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure><p>真是日常坑自己…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用pycharm编写/执行单元测试用例&lt;/p&gt;
    
    </summary>
    
      <category term="skill" scheme="http://tokyle.com/categories/skill/"/>
    
    
      <category term="pycharm" scheme="http://tokyle.com/tags/pycharm/"/>
    
      <category term="unittest" scheme="http://tokyle.com/tags/unittest/"/>
    
  </entry>
  
  <entry>
    <title>selenium3+python3.6搭建测试</title>
    <link href="http://tokyle.com/2017/12/25/selenium3-python3-6%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95/"/>
    <id>http://tokyle.com/2017/12/25/selenium3-python3-6搭建测试/</id>
    <published>2017-12-25T05:26:29.000Z</published>
    <updated>2017-12-26T06:09:13.282Z</updated>
    
    <content type="html"><![CDATA[<p>python3.6<br>selenium3<br>chrome64<br>firefox57</p><a id="more"></a><p>selenium3开始，需要浏览器驱动，加载驱动方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1，驱动放在任意位置，代码中，引驱动，打开浏览器（webdriver.Chrome(executable_path=&quot;驱动路径&quot;）</span><br><span class="line">2，将驱动放到浏览器安装目录下，和浏览器启动程序同级，将浏览器安装路径加到环境变量Path中，重启pycharm</span><br></pre></td></tr></table></figure></p><p>自动化测试示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from selenium import webdriver</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#加载驱动程序</span><br><span class="line">#firefox(驱动放到浏览器安装目录，目录加到Path)</span><br><span class="line">#driver = webdriver.Firefox()</span><br><span class="line">#chrome(驱动放到浏览器安装目录，目录加到Path)</span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">#chrome默认安装路径，驱动指定路径</span><br><span class="line">#driver = webdriver.Chrome(executable_path=&quot;G:/Selenium/drivers/chromedriver.exe&quot;)</span><br><span class="line">#打开百度首页</span><br><span class="line">driver.get(&quot;https://www.baidu.com&quot;)</span><br><span class="line"></span><br><span class="line">#清空搜索输入框默认内容</span><br><span class="line">driver.find_element_by_id(&quot;kw&quot;).clear()</span><br><span class="line">#输入框中输入“自动化测试”</span><br><span class="line">driver.find_element_by_id(&quot;kw&quot;).send_keys(&quot;自动化测试&quot;)</span><br><span class="line">#单击搜索按钮</span><br><span class="line">driver.find_element_by_id(&quot;su&quot;).click()</span><br><span class="line"></span><br><span class="line">#等待3秒</span><br><span class="line">time.sleep(3)</span><br><span class="line"></span><br><span class="line">#退出浏览器</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python3.6&lt;br&gt;selenium3&lt;br&gt;chrome64&lt;br&gt;firefox57&lt;/p&gt;
    
    </summary>
    
      <category term="自动化测试" scheme="http://tokyle.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="selenium" scheme="http://tokyle.com/tags/selenium/"/>
    
      <category term="python" scheme="http://tokyle.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>world_map</title>
    <link href="http://tokyle.com/2017/12/21/world-map/"/>
    <id>http://tokyle.com/2017/12/21/world-map/</id>
    <published>2017-12-21T09:32:33.000Z</published>
    <updated>2017-12-27T09:54:39.671Z</updated>
    
    <content type="html"><![CDATA[<p>pygal-2.4<br>pygal-maps-world-1.0.2    世界地图模块位置变更</p><a id="more"></a><p>pygal内置世界地图模块，包括国别码模块<code>COUNTRIES</code>以及世界地图模块<code>World</code>。</p><p>当前版本下，绘制世界地图，需要从<code>pygal_maps_world.i18n</code>中引国别码，需要从<code>pygal_maps_world.maps</code>中引世界地图。</p><p>参考代码如下：</p><h2 id="countries-py"><a href="#countries-py" class="headerlink" title="countries.py"></a><code>countries.py</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pygal_maps_world.i18n import COUNTRIES</span><br><span class="line"></span><br><span class="line">def get_country_code(country_name):</span><br><span class="line">    &quot;&quot;&quot;根据指定国家，返回国别码&quot;&quot;&quot;</span><br><span class="line">    for code, name in COUNTRIES.items():</span><br><span class="line">        if name == country_name or name == country_name.title():</span><br><span class="line">            return code</span><br><span class="line">    return None</span><br></pre></td></tr></table></figure><h2 id="population-data-py"><a href="#population-data-py" class="headerlink" title="population_data.py"></a><code>population_data.py</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from settings import Settings</span><br><span class="line">from countries import get_country_code</span><br><span class="line">from pygal.style import RotateStyle as RS,LightColorizedStyle as LCS</span><br><span class="line">import pygal_maps_world.maps</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data_setting = Settings()</span><br><span class="line">filename = data_setting.json_population</span><br><span class="line"></span><br><span class="line">with open(filename) as f_obj:</span><br><span class="line">    pop_data = json.load(f_obj)</span><br><span class="line"></span><br><span class="line">#打印每个国家2010年的人口</span><br><span class="line">cc_population = &#123;&#125;</span><br><span class="line">for pop_dict in pop_data:</span><br><span class="line">    if pop_dict[&apos;Year&apos;] == &apos;2010&apos;:</span><br><span class="line">        country_name = pop_dict[&apos;Country Name&apos;]</span><br><span class="line">        population = int(float(pop_dict[&apos;Value&apos;]))</span><br><span class="line">        code = get_country_code(country_name)</span><br><span class="line">        if code:</span><br><span class="line">            cc_population[code] = population</span><br><span class="line">#按人口给国家分组</span><br><span class="line">cc_pops_1, cc_pops_2, cc_pops_3 = &#123;&#125;, &#123;&#125;, &#123;&#125;</span><br><span class="line">for cc, pop in cc_population.items():</span><br><span class="line">    if pop &lt; 10000000:</span><br><span class="line">        cc_pops_1[cc] = pop</span><br><span class="line">    elif pop &lt; 1000000000:</span><br><span class="line">        cc_pops_2[cc] = pop</span><br><span class="line">    else:</span><br><span class="line">        cc_pops_3[cc] = pop</span><br><span class="line"></span><br><span class="line">wm_style = RS(&apos;#336699&apos;,base_style=LCS)</span><br><span class="line">wm = pygal_maps_world.maps.World(style=wm_style)</span><br><span class="line">wm.title = &quot;World Population in 2010.by Country&quot;</span><br><span class="line">wm.add(&apos;0-10m&apos;, cc_pops_1)</span><br><span class="line">wm.add(&apos;10m-1bn&apos;, cc_pops_2)</span><br><span class="line">wm.add(&apos;&gt;1bn&apos;, cc_pops_3)</span><br><span class="line"></span><br><span class="line">wm.render_to_file(&apos;world_population.svg&apos;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;pygal-2.4&lt;br&gt;pygal-maps-world-1.0.2    世界地图模块位置变更&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://tokyle.com/categories/python/"/>
    
    
      <category term="python" scheme="http://tokyle.com/tags/python/"/>
    
      <category term="pygal" scheme="http://tokyle.com/tags/pygal/"/>
    
  </entry>
  
  <entry>
    <title>绘制随机漫步图</title>
    <link href="http://tokyle.com/2017/12/20/%E7%BB%98%E5%88%B6%E9%9A%8F%E6%9C%BA%E6%BC%AB%E6%AD%A5%E5%9B%BE/"/>
    <id>http://tokyle.com/2017/12/20/绘制随机漫步图/</id>
    <published>2017-12-20T09:04:26.000Z</published>
    <updated>2017-12-27T09:54:55.942Z</updated>
    
    <content type="html"><![CDATA[<p>matplotlib可绘制随机漫步图，取随机X个数，在画布上绘制，并加入渐变颜色，效果还是挺好看的</p><a id="more"></a><p>代码如下：</p><h3 id="random-walk-py"><a href="#random-walk-py" class="headerlink" title="random_walk.py"></a><code>random_walk.py</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from random import choice</span><br><span class="line"></span><br><span class="line">class RandomWalk():</span><br><span class="line">    &quot;&quot;&quot;一个生成随机漫步数据的类&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    def __init__(self,num_point=5000):</span><br><span class="line">        &quot;&quot;&quot;初始化随机漫步的属性&quot;&quot;&quot;</span><br><span class="line">        self.num_point = num_point</span><br><span class="line"></span><br><span class="line">        #所有随机漫步的点都始于（0,0）</span><br><span class="line">        self.x_values = [0]</span><br><span class="line">        self.y_values = [0]</span><br><span class="line"></span><br><span class="line">    def get_step(self):</span><br><span class="line">        &quot;&quot;&quot;设置前进方向及距离&quot;&quot;&quot;</span><br><span class="line">        direction = choice([1, -1])</span><br><span class="line">        distance = choice([0, 1, 2, 3, 4])</span><br><span class="line">        step = distance * direction</span><br><span class="line">        return step</span><br><span class="line"></span><br><span class="line">    def fill_walk(self):</span><br><span class="line">        &quot;&quot;&quot;计算随机漫步的所有点&quot;&quot;&quot;</span><br><span class="line">        while len(self.x_values) &lt; self.num_point:</span><br><span class="line">            x_step = self.get_step()</span><br><span class="line">            y_step = self.get_step()</span><br><span class="line"></span><br><span class="line">            #排除原地踏步情况</span><br><span class="line">            if x_step == 0 and y_step == 0:</span><br><span class="line">                continue</span><br><span class="line"></span><br><span class="line">            #计算下一个点的位置</span><br><span class="line">            next_x = self.x_values[-1] + x_step</span><br><span class="line">            next_y = self.y_values[-1] + y_step</span><br><span class="line"></span><br><span class="line">            self.x_values.append(next_x)</span><br><span class="line">            self.y_values.append(next_y)</span><br></pre></td></tr></table></figure><h3 id="rw-visual-py"><a href="#rw-visual-py" class="headerlink" title="rw_visual.py"></a><code>rw_visual.py</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from random_walk import RandomWalk</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    #创建一个随机漫步实例，并将所有包含的点绘制出</span><br><span class="line">    rw = RandomWalk(30000)</span><br><span class="line">    rw.fill_walk()</span><br><span class="line"></span><br><span class="line">    point_num = list(range(rw.num_point))</span><br><span class="line">    plt.scatter(rw.x_values, rw.y_values, c=point_num, cmap=plt.cm.Blues, s=5)</span><br><span class="line">    #突出起点和终点</span><br><span class="line">    plt.scatter(0, 0, c=&apos;green&apos;, s=100)</span><br><span class="line">    plt.scatter(rw.x_values[-1], rw.y_values[-1], c=&apos;red&apos;, s=100)</span><br><span class="line"></span><br><span class="line">    #隐藏坐标轴</span><br><span class="line">    plt.axes().get_xaxis().set_visible(False)</span><br><span class="line">    plt.axes().get_yaxis().set_visible(False)</span><br><span class="line">    #plt.subplot().set_xticks([])</span><br><span class="line">    #plt.subplot().set_yticks([])</span><br><span class="line"></span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line">    keep_drawing = input(&quot;Make another walk?y/n&quot;)</span><br><span class="line">    if keep_drawing == &apos;n&apos;:</span><br><span class="line">        break</span><br></pre></td></tr></table></figure><p>可成功绘制随机漫步图，然而有个警告报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.warnings.warn(message, mplDeprecation, stacklevel=1)</span><br></pre></td></tr></table></figure></p><p>原因是matplotlib版本问题，出在隐藏坐标轴<code>plt.axes().get_yaxis()</code>处，尝试修改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.subplot().set_xticks([])</span><br><span class="line">plt.subplot().set_yticks([])</span><br></pre></td></tr></table></figure></p><p>然而没啥用，还是在警告，暂时没解决。。好在不影响功能，不是强迫症也就无视这红字了。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;matplotlib可绘制随机漫步图，取随机X个数，在画布上绘制，并加入渐变颜色，效果还是挺好看的&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://tokyle.com/categories/python/"/>
    
    
      <category term="python" scheme="http://tokyle.com/tags/python/"/>
    
      <category term="matplotlib" scheme="http://tokyle.com/tags/matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib绘制渐变图</title>
    <link href="http://tokyle.com/2017/12/20/matplotlib%E7%BB%98%E5%88%B6%E6%B8%90%E5%8F%98%E5%9B%BE/"/>
    <id>http://tokyle.com/2017/12/20/matplotlib绘制渐变图/</id>
    <published>2017-12-20T08:13:30.000Z</published>
    <updated>2017-12-27T09:53:49.209Z</updated>
    
    <content type="html"><![CDATA[<p>使用matplotlib绘制1-1000所有整数立方值图形报错</p><a id="more"></a><p>绘制1~1000所有整数的立方图，颜色采用渐变蓝色，点越接近坐标原点，颜色越浅。<br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">x_values = list(range(1,1001))</span><br><span class="line">y_values = [x**3 for x in x_values]</span><br><span class="line"></span><br><span class="line">plt.scatter(x_values, y_values, c=y_values,cmap=plt.cm.Blues,s=40)</span><br><span class="line"></span><br><span class="line">#设置图表坐标并设置坐标标签</span><br><span class="line">plt.title(&quot;Square Numbers&quot;,fontsize=24)</span><br><span class="line">plt.xlabel(&quot;Values&quot;,fontsize=14)</span><br><span class="line">plt.ylabel(&quot;Square of Value&quot;,fontsize=14)</span><br><span class="line"></span><br><span class="line">#设置坐标轴刻度</span><br><span class="line">plt.tick_params(axis=&apos;both&apos;, labelsize=14)</span><br><span class="line"></span><br><span class="line">#设置坐标轴取值</span><br><span class="line">plt.axes([0,1100,0,1100000])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></p><p>可以成功绘制图形，但是有警告报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UserWarning: Unable to find pixel distance along axis for interval padding of ticks; assuming no interval padding needed.warnings.warn(&quot;Unable to find pixel distance along axis &quot;</span><br></pre></td></tr></table></figure></p><p>原因：<br>设置坐标轴取值时，使用的是<em>plt.axes</em>，该函数创建的是一个轴对象，并将输入解释为指定位置的矩形，绘制的坐标轴中取值0在绘制的图形之外，超出了限制范围，所以警告报错。</p><p>解决方案：<br>使用<code>plt.axis()</code>代替<code>plt.axes()</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#设置坐标轴取值</span><br><span class="line">plt.axis([0,1100,0,1100000])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用matplotlib绘制1-1000所有整数立方值图形报错&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://tokyle.com/categories/python/"/>
    
    
      <category term="python" scheme="http://tokyle.com/tags/python/"/>
    
      <category term="matplotlib" scheme="http://tokyle.com/tags/matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>Django2.0更新内容记录</title>
    <link href="http://tokyle.com/2017/12/19/Django2-0%E6%9B%B4%E6%96%B0%E5%86%85%E5%AE%B9%E8%AE%B0%E5%BD%95/"/>
    <id>http://tokyle.com/2017/12/19/Django2-0更新内容记录/</id>
    <published>2017-12-19T09:39:33.000Z</published>
    <updated>2017-12-27T09:54:20.489Z</updated>
    
    <content type="html"><![CDATA[<p>Django 2.0 变更内容(不按版本敲着实是有点坑o(╥﹏╥)o)</p><a id="more"></a><h2 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h2><p>Django 1.9在创建<code>models.ForeignKey</code>外键时，可写成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">topic = models.ForeignKey(Topic）</span><br></pre></td></tr></table></figure></p><p>Django 2.0需要多传一个字段<code>on_delete</code>，且可给定默认值<code>models.CASCADE</code><br>所以上述可写为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">topic = models.ForeignKey(Topic,on_delete=models.CASCADE)</span><br></pre></td></tr></table></figure></p><h2 id="指定app-name"><a href="#指定app-name" class="headerlink" title="指定app_name"></a>指定app_name</h2><p>Django 1.9在映射URL时，<em>工程的urls.py</em>可写成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from django.contrib import admin</span><br><span class="line">from django.urls import path,include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(&apos;admin/&apos;, admin.site.urls),</span><br><span class="line">    path(&apos;&apos;,include(&apos;learning_logs.urls&apos;, namespace=&apos;learning_logs&apos;))</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p><em>应用的urls.py</em>可写成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;定义learning_logs的URL模式&quot;&quot;&quot;</span><br><span class="line">from django.urls import path</span><br><span class="line">from . import views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    #主页</span><br><span class="line">    path(&apos;&apos;, views.index, name=&apos;index&apos;)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>该写法在Django 2.0中会出现报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&apos;Specifying a namespace in include() without providing an app_name &apos;</span><br><span class="line">django.core.exceptions.ImproperlyConfigured: Specifying a namespace in include() without providing an app_name is not supported. Set the app_name attribute in the included module, or pass a 2-tuple containing the list of patterns and app_name instead.</span><br></pre></td></tr></table></figure></p><p>意思是缺少了app_name，所以需要指定app_name，我的做法是在应用的urls.py文件中指定app_name，也就是工程的urls.py保持不变，<em>应用的urls.py</em>增加app_name指定：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;定义learning_logs的URL模式&quot;&quot;&quot;</span><br><span class="line">from django.urls import path</span><br><span class="line">from . import views</span><br><span class="line"></span><br><span class="line">app_name = &apos;learning_logs&apos;</span><br><span class="line">urlpatterns = [</span><br><span class="line">    #主页</span><br><span class="line">    path(&apos;&apos;, views.index, name=&apos;index&apos;)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><h2 id="映射URL"><a href="#映射URL" class="headerlink" title="映射URL"></a>映射URL</h2><p>对于django.urls.path()函数，允许有简单的表示方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(r’^articles/(?P[0-9]&#123;4&#125;)/$’, views.year_archive),</span><br></pre></td></tr></table></figure><p>可以写成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(‘articles//‘, views.year_archive),</span><br></pre></td></tr></table></figure><blockquote><p><a href="http://tokyle.com/2017/12/13/Django%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0%E7%89%B9%E5%AE%9A%E9%93%BE%E6%8E%A5/#more">用法参见前博客记录</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Django 2.0 变更内容(不按版本敲着实是有点坑o(╥﹏╥)o)&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://tokyle.com/categories/python/"/>
    
    
      <category term="python" scheme="http://tokyle.com/tags/python/"/>
    
      <category term="Django" scheme="http://tokyle.com/tags/Django/"/>
    
  </entry>
  
</feed>
