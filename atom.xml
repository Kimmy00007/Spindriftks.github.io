<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>它夏了夏天</title>
  
  <subtitle>生命中有一种遇见，就让它美如行云流水，然后一生去回味。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tokyle.com/"/>
  <updated>2018-08-23T07:46:27.636Z</updated>
  <id>http://tokyle.com/</id>
  
  <author>
    <name>Kyle</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Centos7搭建SonarQube</title>
    <link href="http://tokyle.com/2018/08/23/Centos7%E6%90%AD%E5%BB%BASonarQube/"/>
    <id>http://tokyle.com/2018/08/23/Centos7搭建SonarQube/</id>
    <published>2018-08-23T06:43:12.000Z</published>
    <updated>2018-08-23T07:46:27.636Z</updated>
    
    <content type="html"><![CDATA[<p>Centos7搭建代码质量管理平台SonarQube</p><a id="more"></a><p>SonarQube是当前比较热门的代码质量管理平台，平台开源，支持多种语言。</p><h3 id="搭建之前"><a href="#搭建之前" class="headerlink" title="搭建之前"></a>搭建之前</h3><p>首先，要确保当前安装服务器已经安装了jdk（最好1.8+），以及MySQL数据库<br>安装jdk：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk* -y</span><br></pre></td></tr></table></figure></p><p>安装MySQL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">下载源包：</span><br><span class="line">wget http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm</span><br><span class="line"></span><br><span class="line">安装mysql源:</span><br><span class="line">yum localinstall mysql57-community-release-el7-8.noarch.rpm</span><br><span class="line"></span><br><span class="line">检查是否安装成功：</span><br><span class="line">yum repolist enabled | grep &quot;mysql.*-community.*&quot;</span><br><span class="line"></span><br><span class="line">安装</span><br><span class="line">yum install mysql-community-server</span><br></pre></td></tr></table></figure></p><h4 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h4><blockquote><p><a href="https://www.sonarqube.org/downloads/" target="_blank" rel="noopener">sonarqube下载地址</a><br><a href="https://link.jianshu.com/?t=http://repo1.maven.org/maven2/org/codehaus/sonar/runner/sonar-runner-dist/2.4/sonar-runner-dist-2.4.zip" target="_blank" rel="noopener">sonar-runner下载地址</a><br><a href="https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.0.3.778-linux.zip" target="_blank" rel="noopener">sonar-scanner下载扫描器地址</a></p></blockquote><h3 id="搭建SonarQube"><a href="#搭建SonarQube" class="headerlink" title="搭建SonarQube"></a>搭建SonarQube</h3><p>首先：SonarQube是服务器端，它主要有两个功能：1.分析源代码；2.因为它内嵌了Apache模块，所以提供Web端的界面访问。<br>SonarQube Runner是一个利用SonarQube服务端分析代码的命令行工具，可以把它简单理解为客户端。<br>所以，为了安装和调试方便，建议SonarQube和SonarQube Runner都下载。</p><h4 id="创建sonar数据库"><a href="#创建sonar数据库" class="headerlink" title="创建sonar数据库"></a>创建sonar数据库</h4><p><code>mysql -uroot -p</code>进入控制台，创建sonar用户及数据库：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE sonar CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line"></span><br><span class="line">CREATE USER &apos;sonar&apos; IDENTIFIED BY &apos;Sonar_1234&apos;;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON `sonar`.* TO &apos;sonar&apos;@&apos;%&apos; IDENTIFIED BY &apos;Sonar_1234&apos;;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON `sonar`.* TO &apos;sonar&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;Sonar_1234&apos;;</span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></p><h4 id="安装SonarQube"><a href="#安装SonarQube" class="headerlink" title="安装SonarQube"></a>安装SonarQube</h4><p>进入安装目录，这边用的是<code>/usr/local</code>，<code>rz</code>（yum install lrzsz）将下载的<code>sonarqube-6.7.5.zip</code>,<code>sonar-runner-dist-2.4.zip</code>,<code>sonar-scanner-cli-3.0.3.778-linux.zip</code>上传到服务器，解压<code>sonarqube-6.7.5.zip</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip sonarqube-6.7.5.zip</span><br></pre></td></tr></table></figure></p><p>顺便其他两个也解压了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">unzip sonar-runner-dist-2.4.zip</span><br><span class="line"></span><br><span class="line">unzip sonar-scanner-cli-3.0.3.778-linux.zip</span><br></pre></td></tr></table></figure></p><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><p><code>vim /etc/profile</code>，到文件底部，添加环境变量：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export SONAR_HOME=/usr/local/sonarqube-6.7.5</span><br><span class="line">export SONAR_RUNNER_HOME=/usr/local/sonar-runner-2.4</span><br><span class="line">PATH=$PATH:$SONAR_HOME/bin:$SONAR_RUNNER_HOME/bin</span><br></pre></td></tr></table></figure></p><p>生效配置：<code>source /etc/profile</code></p><p>验证：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sonar-runner -v</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost workflow]# sonar-runner -v</span><br><span class="line">SonarQube Runner 2.4</span><br><span class="line">Java 1.8.0_181 Oracle Corporation (64-bit)</span><br><span class="line">Linux 3.10.0-862.9.1.el7.x86_64 amd64</span><br></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><h5 id="配置SonarQube"><a href="#配置SonarQube" class="headerlink" title="配置SonarQube"></a>配置SonarQube</h5><p>进入配置文件mulu：<code>cd /usr/local/sonarqube-6.7.5/conf</code><br>修改配置文件：<code>vim  sonar.properties</code>，修改内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sonar.jdbc.username=sonar（第16行）</span><br><span class="line">sonar.jdbc.password=Sonar_1234（第17行）</span><br><span class="line"></span><br><span class="line">sonar.jdbc.url=jdbc:mysql://127.0.0.1:3306/sonar?useUnicode=true&amp;characterEncoding=utf8&amp;rewriteBatchedStatements=true&amp;useConfigs=maxPerformance&amp;useSSL=false（第26行）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sonar.web.host=192.168.0.91（第105行）</span><br><span class="line"></span><br><span class="line">sonar.web.port=9000（第111行）</span><br></pre></td></tr></table></figure></p><h5 id="配置-sonar-runner"><a href="#配置-sonar-runner" class="headerlink" title="配置 sonar-runner"></a>配置 sonar-runner</h5><p>进入目录<code>cd /usr/local/sonar-runner-2.4/conf</code>，修改配置文件：<code>vim sonar-runner.properties</code><br>修改内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#Configure here general information about the environment, such as SonarQube DB details for example</span><br><span class="line"> 2 #No information about specific project should appear here</span><br><span class="line"> 3 </span><br><span class="line"> 4 #----- Default SonarQube server</span><br><span class="line"> 5 sonar.host.url=http://192.168.0.91:9000</span><br><span class="line"> 6 </span><br><span class="line"> 7 #----- PostgreSQL</span><br><span class="line"> 8 #sonar.jdbc.url=jdbc:postgresql://localhost/sonar</span><br><span class="line"> 9 </span><br><span class="line">10 #----- MySQL</span><br><span class="line">11 sonar.jdbc.url=jdbc:mysql://127.0.0.1:3306/sonar?useUnicode=true&amp;amp;characterEncoding=utf8</span><br><span class="line">12 </span><br><span class="line">13 #----- Oracle</span><br><span class="line">14 #sonar.jdbc.url=jdbc:oracle:thin:@localhost/XE</span><br><span class="line">15 </span><br><span class="line">16 #----- Microsoft SQLServer</span><br><span class="line">17 #sonar.jdbc.url=jdbc:jtds:sqlserver://localhost/sonar;SelectMethod=Cursor</span><br><span class="line">18 </span><br><span class="line">19 #----- Global database settings</span><br><span class="line">20 sonar.jdbc.username=sonar</span><br><span class="line">21 sonar.jdbc.password=Sonar_1234</span><br><span class="line">22 </span><br><span class="line">23 #----- Default source code encoding</span><br><span class="line">24 #sonar.sourceEncoding=UTF-8</span><br><span class="line">25 </span><br><span class="line">26 #----- Security (when &apos;sonar.forceAuthentication&apos; is set to &apos;true&apos;)</span><br><span class="line">27 sonar.login=admin</span><br><span class="line">28 sonar.password=admin</span><br></pre></td></tr></table></figure></p><h4 id="启动sonarqube"><a href="#启动sonarqube" class="headerlink" title="启动sonarqube"></a>启动sonarqube</h4><p>sonarqube需要普通用户才能启动，不能使用root用户，这个比较好办，新建用户和组，更改属组就可以：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd -g elasticsearch elasticsearch（前一个elasticsearch是组，后一个是用户）</span><br><span class="line">chown -R elasticsearch：elasticsearch sonarqube-6.7.5</span><br></pre></td></tr></table></figure></p><h5 id="修改elasticsearch配置"><a href="#修改elasticsearch配置" class="headerlink" title="修改elasticsearch配置"></a>修改elasticsearch配置</h5><p><code>cd /usr/local/sonarqube-6.7.5/elasticsearch/config</code>，修改配置为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line">network.host: 192.168.0.91</span><br><span class="line">#</span><br><span class="line"># Set a custom port for HTTP:</span><br><span class="line">#</span><br><span class="line">http.port: 9200</span><br></pre></td></tr></table></figure></p><h5 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h5><p><code>cd  /usr/local/sonarqube-6.7.5/bin/linux-x86-64</code><br><code>./sonar.sh start</code><br>启动完成~</p><h3 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h3><p>在没有用到jenkins以及git情况下，只有手动将代码上传到服务器进行打分，后期再弄CI，这边介绍的也就是最简单的上传代码的形式。<br>首先，有一个项目需要sonar进行分析，将代码上传到sonar服务器自定义存放代码的位置，例如<code>/root/sourceCode</code>，上传的项目为<code>QATest</code>，然后在项目根目录创建sonar-runner的配置文件<code>sonar-project.properties</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim sonar-project.properties</span><br></pre></td></tr></table></figure></p><p>内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># must be unique in a given SonarQube instance</span><br><span class="line">sonar.projectKey=my:project</span><br><span class="line"># this is the name displayed in the SonarQube UI</span><br><span class="line">sonar.projectName=My project</span><br><span class="line">sonar.projectVersion=1.0</span><br><span class="line"> </span><br><span class="line"># Path is relative to the sonar-project.properties file. Replace &quot;\&quot; by &quot;/&quot; on Windows.</span><br><span class="line"># Since SonarQube 4.2, this property is optional if sonar.modules is set. </span><br><span class="line"># If not set, SonarQube starts looking for source code from the directory containing </span><br><span class="line"># the sonar-project.properties file.</span><br><span class="line">sonar.sources=.</span><br><span class="line"> </span><br><span class="line"># Encoding of the source code. Default is default system encoding</span><br><span class="line">#sonar.sourceEncoding=UTF-8</span><br></pre></td></tr></table></figure></p><p>保存退出。</p><p>启动sonar-runner：<code>sonar-runner -e -X</code>(打印详细日志)</p><p>进入SonarQube查看分析结果：<br><code>http://192.168.0.91:9000/projects</code>（账密：admin/admin）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Centos7搭建代码质量管理平台SonarQube&lt;/p&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="Centos7" scheme="http://tokyle.com/tags/Centos7/"/>
    
      <category term="SonarQube" scheme="http://tokyle.com/tags/SonarQube/"/>
    
  </entry>
  
  <entry>
    <title>Centos7搭建influxdb+chronograf</title>
    <link href="http://tokyle.com/2018/08/20/Centos7%E6%90%AD%E5%BB%BAinfluxdb-chronograf/"/>
    <id>http://tokyle.com/2018/08/20/Centos7搭建influxdb-chronograf/</id>
    <published>2018-08-20T08:46:17.000Z</published>
    <updated>2018-08-20T08:49:56.929Z</updated>
    
    <content type="html"><![CDATA[<p>Centos7搭建influxdb+Chronograf</p><p>elasticsearch实验过后，今天尝试了另一种时序数据库<code>influxdb</code></p><a id="more"></a><h3 id="安装Influxdb"><a href="#安装Influxdb" class="headerlink" title="安装Influxdb"></a>安装Influxdb</h3><p>centos7 64位：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.influxdata.com/influxdb/releases/influxdb-1.6.1.x86_64.rpm</span><br><span class="line">sudo yum localinstall influxdb-1.6.1.x86_64.rpm</span><br></pre></td></tr></table></figure></p><p>(附卸载方式，曾经想卸载东西，找半天：<br>ipm包：<br>rpm -qa xxxx(查询安装包)<br>rpm -e xxxx（卸载）</p><p>yum install 安装的包：<br>yum remove xxx)</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>安装完成后，相应配置文件位于：<br><code>/usr/bin</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">influxd          influxdb服务器</span><br><span class="line">influx           influxdb命令行客户端</span><br><span class="line">influx_inspect   查看工具</span><br><span class="line">influx_stress    压力测试工具</span><br><span class="line">influx_tsm       数据库转换工具（将数据库从b1或bz1格式转换为tsm1格式）</span><br></pre></td></tr></table></figure></p><p>数据文件夹：<code>/var/lib/influxdb</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data            存放最终存储的数据，文件以.tsm结尾</span><br><span class="line">meta            存放数据库元数据</span><br><span class="line">wal             存放预写日志文件</span><br></pre></td></tr></table></figure></p><p>以及，配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/influxdb/influxdb.conf</span><br></pre></td></tr></table></figure></p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">加自启动：</span><br><span class="line">systemctl enable influxdb</span><br><span class="line">启服务：</span><br><span class="line">systemctl start influxdb</span><br></pre></td></tr></table></figure><p>非服务方式启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost influxdb]# influx</span><br><span class="line">Connected to http://localhost:8086 version 1.6.1</span><br><span class="line">InfluxDB shell version: 1.6.1</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></p><h3 id="安装Chronograf"><a href="#安装Chronograf" class="headerlink" title="安装Chronograf"></a>安装Chronograf</h3><p>好像是1.4版本（具体不记得了），influxdb就去掉了自带的web页面（influxdb.conf中没有admin栏），想要从web页面查看数据，可以安装官方配套的展示工具<code>Chronograf</code>，用着感觉和<code>grafana</code>很像。</p><p>Cnetos 7下安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.influxdata.com/chronograf/releases/chronograf-1.6.1.x86_64.rpm</span><br><span class="line">sudo yum localinstall chronograf-1.6.1.x86_64.rpm</span><br></pre></td></tr></table></figure></p><p>启动：<code>systemctl start chronograf</code><br>默认开启8888端口，浏览器访问<code>http://IP:8888</code>即可（若是在虚拟机安装，打不开，可以尝试用nginx转服务）</p><h3 id="简单语法"><a href="#简单语法" class="headerlink" title="简单语法"></a>简单语法</h3><h4 id="influxdb与传统数据库的比较"><a href="#influxdb与传统数据库的比较" class="headerlink" title="influxdb与传统数据库的比较"></a>influxdb与传统数据库的比较</h4><table><thead><tr><th>influxdb</th><th>MySQL</th></tr></thead><tbody><tr><td>database</td><td>数据库</td></tr><tr><td>measurement</td><td>数据库中的表</td></tr><tr><td>points</td><td>表里面的一行数据</td></tr></tbody></table><p>influxdb数据的构成：<br>Point由时间戳（time）、数据（field）、标签（tags）组成。</p><table><thead><tr><th>Point属性</th><th>传统数据库中的概念</th></tr></thead><tbody><tr><td>time</td><td>每个数据记录时间，是数据库中的主索引(会自动生成)</td></tr><tr><td>fields</td><td>各种记录值（没有索引的属性）也就是记录的值：温度， 湿度</td></tr><tr><td>tags</td><td>各种有索引的属性：地区，海拔</td></tr></tbody></table><h4 id="简单操作"><a href="#简单操作" class="headerlink" title="简单操作"></a>简单操作</h4><p><code>influx</code>进入命令行模式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#创建数据库</span><br><span class="line">create database &quot;db_name&quot;</span><br><span class="line"></span><br><span class="line">#显示所有的数据库</span><br><span class="line">show databases</span><br><span class="line"></span><br><span class="line">#删除数据库</span><br><span class="line">drop database &quot;db_name&quot;</span><br><span class="line"></span><br><span class="line">#使用数据库</span><br><span class="line">use db_name</span><br><span class="line"></span><br><span class="line">#显示该数据库中所有的表</span><br><span class="line">show measurements</span><br><span class="line"></span><br><span class="line">#创建表，直接在插入数据的时候指定表名</span><br><span class="line">insert test,host=127.0.0.1,monitor_name=test count=1</span><br><span class="line"></span><br><span class="line">#删除表</span><br><span class="line">drop measurement &quot;measurement_name&quot;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INSERT cpu,host=serverA,region=us_west value=0.64  //在cpu表中插入相关的数据</span><br><span class="line">SELECT * FROM cpu ORDER BY time DESC LIMIT 3  //查询最近的三条数据</span><br><span class="line">delete from cpu where time=1480235366557373922  //删除某条数据</span><br></pre></td></tr></table></figure><p>用户操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">用户管理</span><br><span class="line">可以通过Chronograf页面做操作，也可以命令行。</span><br><span class="line">#显示用户  </span><br><span class="line">show users</span><br><span class="line"></span><br><span class="line">#创建用户</span><br><span class="line">create user &quot;username&quot; with password &apos;password&apos;</span><br><span class="line"></span><br><span class="line">#创建管理员权限用户</span><br><span class="line">create user &quot;username&quot; with password &apos;password&apos; with all privileges</span><br><span class="line"></span><br><span class="line">#删除用户</span><br><span class="line">drop user &quot;username&quot;</span><br></pre></td></tr></table></figure></p><h3 id="导入测试数据"><a href="#导入测试数据" class="headerlink" title="导入测试数据"></a>导入测试数据</h3><p><code>CREATE DATABASE NOAA_water_database</code><br>下载官方数据集：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://s3.amazonaws.com/noaa.water-database/NOAA_data.txt -o NOAA_data.txt</span><br></pre></td></tr></table></figure></p><p>写数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">influx -import -path=./NOAA_data.txt -precision=s -database=NOAA_water_database</span><br></pre></td></tr></table></figure></p><h3 id="配置文件参考"><a href="#配置文件参考" class="headerlink" title="配置文件参考"></a>配置文件参考</h3><blockquote><p><a href="https://www.cnblogs.com/shhnwangjian/p/6893862.html" target="_blank" rel="noopener">influxdb.conf</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Centos7搭建influxdb+Chronograf&lt;/p&gt;
&lt;p&gt;elasticsearch实验过后，今天尝试了另一种时序数据库&lt;code&gt;influxdb&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="Centos7" scheme="http://tokyle.com/tags/Centos7/"/>
    
      <category term="influxdb" scheme="http://tokyle.com/tags/influxdb/"/>
    
      <category term="Chronograf" scheme="http://tokyle.com/tags/Chronograf/"/>
    
  </entry>
  
  <entry>
    <title>一些常用网站</title>
    <link href="http://tokyle.com/2018/08/15/%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%BD%91%E7%AB%99/"/>
    <id>http://tokyle.com/2018/08/15/一些常用网站/</id>
    <published>2018-08-15T03:00:08.000Z</published>
    <updated>2018-08-15T03:02:44.028Z</updated>
    
    <content type="html"><![CDATA[<p>记一些常用的网站</p><a id="more"></a><h3 id="zabbix-模板大全"><a href="#zabbix-模板大全" class="headerlink" title="zabbix 模板大全"></a>zabbix 模板大全</h3><blockquote><p><a href="https://monitoringartist.github.io/zabbix-searcher/#" target="_blank" rel="noopener">zabbix各模板</a></p></blockquote><h3 id="APM鼻祖论文"><a href="#APM鼻祖论文" class="headerlink" title="APM鼻祖论文"></a>APM鼻祖论文</h3><blockquote><p><a href="http://bigbully.github.io/Dapper-translation/" target="_blank" rel="noopener">APM平台的鼻祖</a></p></blockquote><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><blockquote><p><a href="https://regexr.com/" target="_blank" rel="noopener">在线正则表达式工具</a></p></blockquote><h3 id="网页测试工具"><a href="#网页测试工具" class="headerlink" title="网页测试工具"></a>网页测试工具</h3><blockquote><p><a href="http://www.webpagetest.org/" target="_blank" rel="noopener">WebPagetest</a></p><p><a href="https://tools.pingdom.com/" target="_blank" rel="noopener">Pingdom</a></p></blockquote><h3 id="论坛"><a href="#论坛" class="headerlink" title="论坛"></a>论坛</h3><blockquote><p><a href="https://stackoverflow.com/" target="_blank" rel="noopener">stackoverflow</a></p><p><a href="https://testerhome.com/" target="_blank" rel="noopener">testerhome</a></p><p><a href="http://www.51cto.com/" target="_blank" rel="noopener">51CTO</a></p><p><a href="https://juejin.im/" target="_blank" rel="noopener">掘金</a></p><p><a href="https://segmentfault.com/" target="_blank" rel="noopener">思否（segmentfault）</a></p></blockquote><h3 id="电子书网站"><a href="#电子书网站" class="headerlink" title="电子书网站"></a>电子书网站</h3><blockquote><p><a href="https://www.ckook.com/" target="_blank" rel="noopener">稀酷客</a><br><a href="http://www.gutenberg.org/" target="_blank" rel="noopener">Project Gutenberg</a></p></blockquote><h3 id="数据科学项目练习"><a href="#数据科学项目练习" class="headerlink" title="数据科学项目练习"></a>数据科学项目练习</h3><blockquote><p><a href="https://www.kaggle.com/" target="_blank" rel="noopener">Kaggle</a></p></blockquote><h3 id="python-3-cookbook"><a href="#python-3-cookbook" class="headerlink" title="python 3 cookbook"></a>python 3 cookbook</h3><blockquote><p><a href="http://python3-cookbook.readthedocs.io/zh_CN/latest/index.html" target="_blank" rel="noopener">Python3 cookbook</a></p></blockquote><h3 id="Hacker-News"><a href="#Hacker-News" class="headerlink" title="Hacker News"></a>Hacker News</h3><blockquote><p><a href="https://news.ycombinator.com/news" target="_blank" rel="noopener">Hacker News</a></p></blockquote><h3 id="免费图片"><a href="#免费图片" class="headerlink" title="免费图片"></a>免费图片</h3><blockquote><p><a href="https://pixabay.com/" target="_blank" rel="noopener">Pixabay</a></p></blockquote><h3 id="运维"><a href="#运维" class="headerlink" title="运维"></a>运维</h3><blockquote><p><a href="http://www.ttlsa.com/" target="_blank" rel="noopener">运维生存时间</a></p><p><a href="https://www.iyunv.com/" target="_blank" rel="noopener">运维网</a></p></blockquote><h3 id="Rancher"><a href="#Rancher" class="headerlink" title="Rancher"></a>Rancher</h3><blockquote><p><a href="https://rancher.com/docs/rancher/latest/zh/" target="_blank" rel="noopener">Rancher</a></p></blockquote><h3 id="娱乐部分"><a href="#娱乐部分" class="headerlink" title="娱乐部分"></a>娱乐部分</h3><blockquote><p><a href="http://www.acgsou.com/1.html" target="_blank" rel="noopener">ACG动漫种子</a></p><p><a href="https://www.52pojie.cn/" target="_blank" rel="noopener">52破解</a></p><p><a href="http://www.fengniao.com/" target="_blank" rel="noopener">蜂鸟摄影</a></p></blockquote><h3 id="TO-BE-CONTINUED-…"><a href="#TO-BE-CONTINUED-…" class="headerlink" title="TO BE CONTINUED …"></a>TO BE CONTINUED …</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记一些常用的网站&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://tokyle.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="lives" scheme="http://tokyle.com/tags/lives/"/>
    
  </entry>
  
  <entry>
    <title>Centos7开启nginx status</title>
    <link href="http://tokyle.com/2018/08/15/Centos7%E5%BC%80%E5%90%AFnginx-status/"/>
    <id>http://tokyle.com/2018/08/15/Centos7开启nginx-status/</id>
    <published>2018-08-15T02:15:10.000Z</published>
    <updated>2018-08-15T02:16:55.844Z</updated>
    
    <content type="html"><![CDATA[<p>Centos 7开启nginx status</p><a id="more"></a><p>这段时间需要研究APM相关，整理到中间件部分，想到用zabbix来监控Nginx，一般情况下，中间件都有自己的计数器，我们只需要获取计数器的数值即可完成监控。</p><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><p>还是啰嗦一下，安装nginx，一条命令即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure></p><p>配置文件路径：<br>默认配置：<code>/etc/nginx/nginx.conf</code><br>可自建配置:<code>/etc/nginx/conf.d/yourAPP.conf</code>(需要修改nginx.conf最后的配置文件路径)</p><h3 id="开启nginx-status"><a href="#开启nginx-status" class="headerlink" title="开启nginx status"></a>开启nginx status</h3><p>开启很简单，在配置中增加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location /ngx_status</span><br><span class="line">    &#123;</span><br><span class="line">        stub_status on;</span><br><span class="line">        access_log off;</span><br><span class="line">        allow 127.0.0.1;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>即可；<br>由于之前有帮开发搭建了.net core的环境，就直接在之前搭建的配置文件（LiabTest.conf）里面改了：<br>原文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://localhost:5000;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection keep-alive;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_cache_bypass $http_upgrade;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>增加status之后：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://localhost:5000;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection keep-alive;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_cache_bypass $http_upgrade;</span><br><span class="line">    &#125;</span><br><span class="line">    location /ngx_status</span><br><span class="line">    &#123;</span><br><span class="line">        stub_status on;</span><br><span class="line">        access_log off;</span><br><span class="line">        allow 127.0.0.1;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h3><p>重启nginx：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure></p><p>查看status:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://127.0.0.1/ngx_status</span><br></pre></td></tr></table></figure></p><p>看到信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@gtp1 conf.d]# curl http://127.0.0.1/ngx_status</span><br><span class="line">Active connections: 1199 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 158761 158761 158757 </span><br><span class="line">Reading: 0 Writing: 1195 Waiting: 4</span><br></pre></td></tr></table></figure></p><h3 id="nginx-status详解"><a href="#nginx-status详解" class="headerlink" title="nginx status详解"></a>nginx status详解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">active connections – 活跃的连接数量</span><br><span class="line">server accepts handled requests — 总共处理了158761个连接 , 成功创建158761次握手, 总共处理了158757个请求</span><br><span class="line">reading — 读取客户端的连接数.</span><br><span class="line">writing — 响应数据到客户端的数量</span><br><span class="line">waiting — 开启 keep-alive 的情况下,这个值等于 active – (reading+writing), 意思就是 Nginx 已经处理完正在等候下一次请求指令的驻留连接.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Centos 7开启nginx status&lt;/p&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="Centos7" scheme="http://tokyle.com/tags/Centos7/"/>
    
      <category term="Nginx" scheme="http://tokyle.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>ELK环境搭建及测试数据导入</title>
    <link href="http://tokyle.com/2018/08/09/ELK%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5/"/>
    <id>http://tokyle.com/2018/08/09/ELK环境搭建及测试数据导入/</id>
    <published>2018-08-09T06:33:27.000Z</published>
    <updated>2018-08-09T08:29:07.888Z</updated>
    
    <content type="html"><![CDATA[<p>ELK一些前期准备</p><a id="more"></a><p>前面已经搭建过elasticsearch了，和它配套的，L和K：Logstash，Kibana<br>三者关系：Logstash搜集日志，elasticsearch存储，kibana展示</p><h3 id="搭建Logstash、kibana"><a href="#搭建Logstash、kibana" class="headerlink" title="搭建Logstash、kibana"></a>搭建Logstash、kibana</h3><p>首先是官网下载安装包：</p><blockquote><p><a href="https://www.elastic.co/products" target="_blank" rel="noopener">elasic.co</a></p></blockquote><p>下载对应的安装包：<br><code>kibana-6.3.2-linux-x86_64.tar.gz</code><br><code>logstash-6.3.2.tar.gz</code></p><h4 id="安装logstash"><a href="#安装logstash" class="headerlink" title="安装logstash"></a>安装logstash</h4><p>解压缩下载的安装包<code>logstash-6.3.2.tar.gz</code>，进入<code>logstash-6.3.2/config</code>目录，创建配置文件<code>logstash.conf</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim logstash.conf</span><br></pre></td></tr></table></figure></p><p>内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">     file &#123;</span><br><span class="line">        type =&gt; &quot;log&quot;</span><br><span class="line">        path =&gt; &quot;/logs/*.log&quot;</span><br><span class="line">        start_position =&gt; &quot;beginning&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">   codec =&gt; rubydebug &#123; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; &quot;es地址IP，例如192.168.0.91&quot;</span><br><span class="line">    index =&gt; &quot;log-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>保存退出，进入<code>bin</code>目录，启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./logstash -f ../config/logstash.conf</span><br></pre></td></tr></table></figure></p><h4 id="安装Kibana"><a href="#安装Kibana" class="headerlink" title="安装Kibana"></a>安装Kibana</h4><p>解压缩安装包，修改<code>config</code>下配置文件：<code>kibana.yml</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server.host: &quot;192.168.0.91&quot;</span><br><span class="line"></span><br><span class="line"># Enables you to specify a path to mount Kibana at if you are running behind a proxy.</span><br><span class="line"># Use the `server.rewriteBasePath` setting to tell Kibana if it should remove the basePath</span><br><span class="line"># from requests it receives, and to prevent a deprecation warning at startup.</span><br><span class="line"># This setting cannot end in a slash.</span><br><span class="line">#server.basePath: &quot;&quot;</span><br><span class="line"></span><br><span class="line"># Specifies whether Kibana should rewrite requests that are prefixed with</span><br><span class="line"># `server.basePath` or require that they are rewritten by your reverse proxy.</span><br><span class="line"># This setting was effectively always `false` before Kibana 6.3 and will</span><br><span class="line"># default to `true` starting in Kibana 7.0.</span><br><span class="line">#server.rewriteBasePath: false</span><br><span class="line"></span><br><span class="line"># The maximum payload size in bytes for incoming server requests.</span><br><span class="line">#server.maxPayloadBytes: 1048576</span><br><span class="line"></span><br><span class="line"># The Kibana server&apos;s name.  This is used for display purposes.</span><br><span class="line">#server.name: &quot;your-hostname&quot;</span><br><span class="line"></span><br><span class="line"># The URL of the Elasticsearch instance to use for all your queries.</span><br><span class="line">elasticsearch.url: &quot;http://192.168.0.91:9200&quot;</span><br></pre></td></tr></table></figure></p><p>需要更改的是两个地方：server.host和elasticsearch.url，更改保存退出~<br>进<code>bin</code>目录，启动服务~</p><h3 id="添加测试数据"><a href="#添加测试数据" class="headerlink" title="添加测试数据"></a>添加测试数据</h3><p><a href="https://www.elastic.co/guide/en/kibana/current/tutorial-load-dataset.html" target="_blank" rel="noopener">官方教程</a></p><p>ElasticSearch的sample data：</p><blockquote><p><a href="https://download.elastic.co/demos/kibana/gettingstarted/accounts.zip" target="_blank" rel="noopener">account.zip</a><br><a href="https://download.elastic.co/demos/kibana/gettingstarted/shakespeare_6.0.json" target="_blank" rel="noopener">shakespeare.json</a><br><a href="https://download.elastic.co/demos/kibana/gettingstarted/logs.jsonl.gz" target="_blank" rel="noopener">logs.json1.gz</a></p></blockquote><p>首先加载account数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -H &quot;Content-Type: application/json&quot; -XPOST &apos;localhost:9200/bank/account/_bulk?pretty&amp;refresh&apos; --data-binary &quot;@accounts.json&quot;</span><br></pre></td></tr></table></figure></p><p>shaekspeare和logs，先做mapping<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT &quot;192.168.0.91:9200/shakespeare&quot; -H &apos;Content-Type: application/json&apos; -d&apos;</span><br><span class="line">&#123;</span><br><span class="line"> &quot;mappings&quot;: &#123;</span><br><span class="line">  &quot;doc&quot;: &#123;</span><br><span class="line">   &quot;properties&quot;: &#123;</span><br><span class="line">    &quot;speaker&quot;: &#123;&quot;type&quot;: &quot;keyword&quot;&#125;,</span><br><span class="line">    &quot;play_name&quot;: &#123;&quot;type&quot;: &quot;keyword&quot;&#125;,</span><br><span class="line">    &quot;line_id&quot;: &#123;&quot;type&quot;: &quot;integer&quot;&#125;,</span><br><span class="line">    &quot;speech_number&quot;: &#123;&quot;type&quot;: &quot;integer&quot;&#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">&apos;</span><br></pre></td></tr></table></figure></p><p>logs<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT &quot;localhost:9200/logstash-2015.05.18&quot; -H &apos;Content-Type: application/json&apos; -d&apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;log&quot;: &#123;</span><br><span class="line">      &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;geo&quot;: &#123;</span><br><span class="line">          &quot;properties&quot;: &#123;</span><br><span class="line">            &quot;coordinates&quot;: &#123;</span><br><span class="line">              &quot;type&quot;: &quot;geo_point&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&apos;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT &quot;localhost:9200/logstash-2015.05.19&quot; -H &apos;Content-Type: application/json&apos; -d&apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;log&quot;: &#123;</span><br><span class="line">      &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;geo&quot;: &#123;</span><br><span class="line">          &quot;properties&quot;: &#123;</span><br><span class="line">            &quot;coordinates&quot;: &#123;</span><br><span class="line">              &quot;type&quot;: &quot;geo_point&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT &quot;localhost:9200/logstash-2015.05.20&quot; -H &apos;Content-Type: application/json&apos; -d&apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;log&quot;: &#123;</span><br><span class="line">      &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;geo&quot;: &#123;</span><br><span class="line">          &quot;properties&quot;: &#123;</span><br><span class="line">            &quot;coordinates&quot;: &#123;</span><br><span class="line">              &quot;type&quot;: &quot;geo_point&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&apos;</span><br></pre></td></tr></table></figure><p>导入数据一样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -H &apos;Content-Type: application/x-ndjson&apos; -XPOST &apos;localhost:9200/bank/account/_bulk?pretty&apos; --data-binary @accounts.json</span><br><span class="line">curl -H &apos;Content-Type: application/x-ndjson&apos; -XPOST &apos;localhost:9200/shakespeare/doc/_bulk?pretty&apos; --data-binary @shakespeare_6.0.json</span><br><span class="line">curl -H &apos;Content-Type: application/x-ndjson&apos; -XPOST &apos;localhost:9200/_bulk?pretty&apos; --data-binary @logs.jsonl</span><br></pre></td></tr></table></figure></p><p>结束~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ELK一些前期准备&lt;/p&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="elasticsearch" scheme="http://tokyle.com/tags/elasticsearch/"/>
    
      <category term="logstash" scheme="http://tokyle.com/tags/logstash/"/>
    
      <category term="kibana" scheme="http://tokyle.com/tags/kibana/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch 6变更记录</title>
    <link href="http://tokyle.com/2018/08/01/elasticsearch-6%E5%8F%98%E6%9B%B4%E8%AE%B0%E5%BD%95/"/>
    <id>http://tokyle.com/2018/08/01/elasticsearch-6变更记录/</id>
    <published>2018-08-01T08:54:10.000Z</published>
    <updated>2018-08-01T08:56:59.822Z</updated>
    
    <content type="html"><![CDATA[<p>elasticsearch 6变更内容记录</p><a id="more"></a><p>原来没怎么接触过es，找了个教程，本来是按着教程上敲的练练手的，然后就我靠了，又回到当初碰Django时候的懵逼状态，新版本改好多。。</p><h3 id="No-handler-for-type-string-declared-on-field"><a href="#No-handler-for-type-string-declared-on-field" class="headerlink" title="No handler for type [string] declared on field"></a>No handler for type [string] declared on field</h3><p>本来练手练得好好的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">PUT http://192.168.0.91:9200/index_test</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">&quot;settings&quot;: &#123;</span><br><span class="line">&quot;number_of_shards&quot;: 3,</span><br><span class="line">&quot;number_of_replicas&quot;: 2</span><br><span class="line">&#125;,</span><br><span class="line">&quot;mappings&quot;: &#123;</span><br><span class="line">&quot;Testlog&quot;: &#123;</span><br><span class="line">&quot;properties&quot;: &#123;</span><br><span class="line">&quot;logType&quot;: &#123;</span><br><span class="line">&quot;type&quot;: &quot;string&quot;,</span><br><span class="line">&quot;index&quot;: &quot;not_analyzed&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后就是悲剧：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&quot;error&quot;: &#123;</span><br><span class="line">       &quot;root_cause&quot;: [</span><br><span class="line">           &#123;</span><br><span class="line">               &quot;type&quot;: &quot;mapper_parsing_exception&quot;,</span><br><span class="line">               &quot;reason&quot;: &quot;No handler for type [string] declared on field [logType]&quot;</span><br><span class="line">           &#125;</span><br><span class="line">       ],</span><br></pre></td></tr></table></figure></p><p>研究半天，JSON没啥错啊，教程里就是这么干的啊，回忆起Django的版本悲剧，搜了下版本变更，唉~<code>ElasticSearch 5.x开始就取消了string类型，取代的事text和keyward，text用于全文搜索的, 而keyword用于关键词搜索</code></p><p>找了段网上的解释：<br>这个变动的根本原因是string类型会给我们带来很多困惑: 因为ElasticSearch对字符串拥有两种完全不同的搜索方式. 你可以按照整个文本进行匹配, 即关键词搜索(keyword search), 也可以按单个字符匹配, 即全文搜索(full-text search). 对ElasticSearch稍有了解的人都知道, 前者的字符串被称为not-analyzed字符, 而后者被称作analyzed字符串.</p><p>事实上, 同一种类型用于应对两种不同的使用场景是会让人崩溃的, 因为有些选项只对其一的场景设置有效.例如position_increment_gap对not-analyzed字符就不会起作用, 而像ignore_above对于analyzed字符串就很难区分它到底是对整个字符串的值有效还是对单独的每个分词有效(在这种场景, ignore_above确实只对整个字符串值有效, 而对单个分词的限制可以使用limit设置)，同样，<code>index</code>现在也只需要boolean的两种状态，所以可以修改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;settings&quot;: &#123;</span><br><span class="line">&quot;number_of_shards&quot;: 3,</span><br><span class="line">&quot;number_of_replicas&quot;: 2</span><br><span class="line">&#125;,</span><br><span class="line">&quot;mappings&quot;: &#123;</span><br><span class="line">&quot;gaialog&quot;: &#123;</span><br><span class="line">&quot;properties&quot;: &#123;</span><br><span class="line">&quot;logType&quot;: &#123;</span><br><span class="line">&quot;type&quot;: &quot;text&quot;,</span><br><span class="line">&quot;index&quot;: &quot;false&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="as-the-final-mapping-would-have-more-than-1-type"><a href="#as-the-final-mapping-would-have-more-than-1-type" class="headerlink" title="as the final mapping would have more than 1 type"></a>as the final mapping would have more than 1 type</h3><p>原因是6.x开始，取消了mapping type…<br>具体原因可以看官方的解释：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.0/removal-of-types.html" target="_blank" rel="noopener">removal of mapping type</a><br>需要的一些解释是：<br>首先，很多人会把es和关系型数据库进行类比；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">index ——&gt; 数据库（database）</span><br><span class="line">type ——&gt; 表（table）</span><br><span class="line">document ——&gt; 数据记录（data）</span><br><span class="line">filed ——&gt; 列（column）</span><br></pre></td></tr></table></figure></p><p>其实这样理解是有问题的，在关系型数据库中，每个表的列都是相互独立的，即使是同样列名的列，也毫无关系；但是在像es这样的映射型数据库中，即使是在不同的type下的field，只要field名字一样，它们所指向的Lucene字段都是同一个，所以是有影响的。在ES中，之前有type的情况下，在不同的type下可以建同样名字的field，比如test，type1下的field是<code>string</code>类型，type2下的field是<code>boolean</code>类型，由于同一个名字的field对应的Lucene字段一样，所以在进行field删除时，系统就会出错，不知道具体应该删的是哪个field。<br>官方为了避免这样的情况，就直接开始了不要<code>type</code>~~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;elasticsearch 6变更内容记录&lt;/p&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="elasticsearch" scheme="http://tokyle.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Centos 7安装elasticsearch head</title>
    <link href="http://tokyle.com/2018/08/01/Centos-7%E5%AE%89%E8%A3%85elasticsearch-head/"/>
    <id>http://tokyle.com/2018/08/01/Centos-7安装elasticsearch-head/</id>
    <published>2018-08-01T02:57:32.000Z</published>
    <updated>2018-08-01T03:00:06.146Z</updated>
    
    <content type="html"><![CDATA[<p>ElasticSearch安装可视化插件ElasticSearch head</p><a id="more"></a><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><h4 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h4><p>首先是安装<code>node.js</code></p><h5 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h5><p>可以用yum装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nodejs</span><br></pre></td></tr></table></figure></p><p>再装npm：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></p><h5 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h5><p>或者是源码安装<br>首先安装gcc用于编译：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ kernel-devel</span><br></pre></td></tr></table></figure></p><p>开始安装node.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://nodejs.org/dist/v4.5.0/node-v4.5.0.tar.gz</span><br><span class="line">tar -xf node-v4.5.0.tar.gz</span><br></pre></td></tr></table></figure></p><p>解压缩之后，进入目录，编译：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd node-v4.5.0</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>完成！<br>验证：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm</span><br></pre></td></tr></table></figure></p><p>安装完成的是4.5的版本，升级：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g n</span><br><span class="line">n stable</span><br></pre></td></tr></table></figure></p><h4 id="安装grunt"><a href="#安装grunt" class="headerlink" title="安装grunt"></a>安装grunt</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g grunt</span><br></pre></td></tr></table></figure><p>可以查看版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grunt -version</span><br></pre></td></tr></table></figure></p><h3 id="安装ES-head"><a href="#安装ES-head" class="headerlink" title="安装ES head"></a>安装ES head</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>git下载源码，可以直接到github下，也可以命令行weg或者git clone下载<br>源码地址|：<a href="https://github.com/mobz/elasticsearch-head/" target="_blank" rel="noopener">https://github.com/mobz/elasticsearch-head/</a><br>建议要是在本地下载的zip包，传服务器时候，切换到es用户操作，使得head文件属主是es用户。<br>然后解压：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unzip elasticsearch-head-master.zip</span><br><span class="line">cd elasticsearch-head-master</span><br></pre></td></tr></table></figure></p><p>安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>首先要停掉ES服务</p><h4 id="配置http对外服务"><a href="#配置http对外服务" class="headerlink" title="配置http对外服务"></a>配置http对外服务</h4><p>修改elasticsearch.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim config/elasticsearch.yml</span><br></pre></td></tr></table></figure></p><p>添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http.cors.enabled: true</span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br></pre></td></tr></table></figure></p><h4 id="修改host"><a href="#修改host" class="headerlink" title="修改host"></a>修改host</h4><p>进入<code>elasticsearch-head</code>文件夹，修改<code>Gruntfile.js</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim Gruntfile.js</span><br></pre></td></tr></table></figure></p><p>找到<code>connect：server</code>，添加hostname为你的静态IP，完成~<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">connect: &#123;</span><br><span class="line">                       server: &#123;</span><br><span class="line">                               options: &#123;</span><br><span class="line">                                       hostname: &apos;192.168.0.91&apos;,</span><br><span class="line">                                       port: 9100,</span><br><span class="line">                                       base: &apos;.&apos;,</span><br><span class="line">                                       keepalive: true</span><br><span class="line">                               &#125;</span><br><span class="line">                       &#125;</span><br><span class="line">               &#125;</span><br></pre></td></tr></table></figure></p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>先启动ES，再起ES head<br>ES head有两种启动方式：<br><code>`grunt server或者进入es head目录npm run start</code><br>浏览器访问:<a href="http://IP:9100即可打开页面" target="_blank" rel="noopener">http://IP:9100即可打开页面</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ElasticSearch安装可视化插件ElasticSearch head&lt;/p&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="elasticsearch" scheme="http://tokyle.com/tags/elasticsearch/"/>
    
      <category term="elasticsearch head" scheme="http://tokyle.com/tags/elasticsearch-head/"/>
    
      <category term="Centos7" scheme="http://tokyle.com/tags/Centos7/"/>
    
  </entry>
  
  <entry>
    <title>Centos下搭建ElasticSearch</title>
    <link href="http://tokyle.com/2018/07/31/Centos%E4%B8%8B%E6%90%AD%E5%BB%BAElasticSearch/"/>
    <id>http://tokyle.com/2018/07/31/Centos下搭建ElasticSearch/</id>
    <published>2018-07-31T09:49:50.000Z</published>
    <updated>2018-07-31T09:55:51.919Z</updated>
    
    <content type="html"><![CDATA[<p>Centos 7下搭建ElasticSearch</p><a id="more"></a><h3 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h3><p>首先，ES是java开发的，所以，通性，懂得，装JDK，好在linux下一条命令行就可以解决：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装1.8.0的所有文件</span><br><span class="line">yum install java-1.8.0-openjdk* -y</span><br></pre></td></tr></table></figure></p><p>校验：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line">javac</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openjdk version &quot;1.8.0_181&quot;</span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_181-b13)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.181-b13, mixed mode)</span><br></pre></td></tr></table></figure><p>很正常，完成。</p><h3 id="ElasticSearch"><a href="#ElasticSearch" class="headerlink" title="ElasticSearch"></a>ElasticSearch</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>下载很简单：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.2.zip</span><br></pre></td></tr></table></figure></p><p>然后解压缩就可以了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip elasticsearch-6.3.2.zip</span><br></pre></td></tr></table></figure></p><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd elasticsearch-6.3.2/bin</span><br><span class="line">./elasticsearch</span><br></pre></td></tr></table></figure><p>嗯，然后问题就开始了~</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>用<code>root</code>用户登录的系统，启es，会报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[2018-01-28T22:00:31,358][WARN ][o.e.b.ElasticsearchUncaughtExceptionHandler] [] uncaught exception in thread [main]</span><br><span class="line">org.elasticsearch.bootstrap.StartupException: java.lang.RuntimeException: can not run elasticsearch as root</span><br><span class="line">at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:125) ~[elasticsearch-6.1.2.jar:6.1.2]</span><br><span class="line">at org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:112) ~[elasticsearch-6.1.2.jar:6.1.2]</span><br><span class="line">at org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:86) ~[elasticsearch-6.1.2.jar:6.1.2]</span><br><span class="line">at org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:124) ~[elasticsearch-cli-6.1.2.jar:6.1.2]</span><br><span class="line">at org.elasticsearch.cli.Command.main(Command.java:90) ~[elasticsearch-cli-6.1.2.jar:6.1.2]</span><br><span class="line">at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:92) ~[elasticsearch-6.1.2.jar:6.1.2]</span><br><span class="line">at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:85) ~[elasticsearch-6.1.2.jar:6.1.2]</span><br><span class="line">Caused by: java.lang.RuntimeException: can not run elasticsearch as root</span><br><span class="line">at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:104) ~[elasticsearch-6.1.2.jar:6.1.2]</span><br><span class="line">at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:171) ~[elasticsearch-6.1.2.jar:6.1.2]</span><br><span class="line">at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:322) ~[elasticsearch-6.1.2.jar:6.1.2]</span><br><span class="line">at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:121) ~[elasticsearch-6.1.2.jar:6.1.2]</span><br><span class="line">... 6 more</span><br></pre></td></tr></table></figure></p><p>很明显，人家不让你用root启服务</p><h4 id="创建es用户"><a href="#创建es用户" class="headerlink" title="创建es用户"></a>创建es用户</h4><p>不让用root就创建一个es的用户：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 创建es组</span><br><span class="line">groupadd elasticsearch</span><br><span class="line"># 在es组下创建es用户，并设置密码为elasticsearch</span><br><span class="line">useradd elasticsearch -g elasticsearch -p elasticsearch</span><br></pre></td></tr></table></figure></p><p>然后将前面下载的<code>elasticsearch-6.3.2.zip</code>包拷贝到es家目录下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp elasticsearch-6.3.2.zip /home/elasticsearch</span><br></pre></td></tr></table></figure></p><p>解压缩：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip elasticsearch-6.3.2.zip</span><br></pre></td></tr></table></figure></p><p>更改文件夹属主和属组：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R elasticsearch:elasticsearch elasticsearch-6.1.2/</span><br></pre></td></tr></table></figure></p><p>然后切换到es用户，启服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su - elasticsearch</span><br><span class="line">./bin/elasticsearch</span><br></pre></td></tr></table></figure></p><p>然后就可以看见服务基本是正常起来了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[2018-07-31T22:11:06,918][INFO ][o.e.n.Node               ] [] initializing ...</span><br><span class="line">[2018-07-31T22:11:07,161][INFO ][o.e.e.NodeEnvironment    ] [qR5cyzh] using [1] data paths, mounts [[/ (rootfs)]], net usable_space [12.5gb], net total_space [17.6gb], types [rootfs]</span><br><span class="line">[2018-07-31T22:11:07,162][INFO ][o.e.e.NodeEnvironment    ] [qR5cyzh] heap size [1015.6mb], compressed ordinary object pointers [true]</span><br><span class="line">[2018-07-31T22:11:07,163][INFO ][o.e.n.Node               ] node name [qR5cyzh] derived from node ID [qR5cyzhRQUix7PbCNFViTw]; set [node.name] to override</span><br><span class="line">[2018-07-31T22:11:07,163][INFO ][o.e.n.Node               ] version[6.1.2], pid[7200], build[5b1fea5/2018-01-10T02:35:59.208Z], OS[Linux/3.10.0-514.el7.x86_64/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_141/25.141-b15]</span><br><span class="line">[2018-07-31T22:11:07,163][INFO ][o.e.n.Node               ] JVM arguments [-Xms1g, -Xmx1g, -XX:+UseConcMarkSweepGC, -XX:CMSInitiatingOccupancyFraction=75, -XX:+UseCMSInitiatingOccupancyOnly, -XX:+AlwaysPreTouch, -Xss1m, -Djava.awt.headless=true, -Dfile.encoding=UTF-8, -Djna.nosys=true, -XX:-OmitStackTraceInFastThrow, -Dio.netty.noUnsafe=true, -Dio.netty.noKeySetOptimization=true, -Dio.netty.recycler.maxCapacityPerThread=0, -Dlog4j.shutdownHookEnabled=false, -Dlog4j2.disable.jmx=true, -XX:+HeapDumpOnOutOfMemoryError, -Des.path.home=/home/elasticsearch/elasticsearch-6.1.2, -Des.path.conf=/home/elasticsearch/elasticsearch-6.1.2/config]</span><br><span class="line">[2018-07-31T22:11:09,295][INFO ][o.e.p.PluginsService     ] [qR5cyzh] loaded module [aggs-matrix-stats]</span><br><span class="line">[2018-07-31T22:11:09,295][INFO ][o.e.p.PluginsService     ] [qR5cyzh] loaded module [analysis-common]</span><br><span class="line">[2018-07-31T22:11:09,295][INFO ][o.e.p.PluginsService     ] [qR5cyzh] loaded module [ingest-common]</span><br><span class="line">[2018-07-31T22:11:09,296][INFO ][o.e.p.PluginsService     ] [qR5cyzh] loaded module [lang-expression]</span><br><span class="line">[2018-07-31T22:11:09,296][INFO ][o.e.p.PluginsService     ] [qR5cyzh] loaded module [lang-mustache]</span><br><span class="line">[2018-07-31T22:11:09,296][INFO ][o.e.p.PluginsService     ] [qR5cyzh] loaded module [lang-painless]</span><br><span class="line">[2018-07-31T22:11:09,296][INFO ][o.e.p.PluginsService     ] [qR5cyzh] loaded module [mapper-extras]</span><br><span class="line">[2018-07-31T22:11:09,296][INFO ][o.e.p.PluginsService     ] [qR5cyzh] loaded module [parent-join]</span><br><span class="line">[2018-07-31T22:11:09,296][INFO ][o.e.p.PluginsService     ] [qR5cyzh] loaded module [percolator]</span><br><span class="line">[2018-07-31T22:11:09,296][INFO ][o.e.p.PluginsService     ] [qR5cyzh] loaded module [reindex]</span><br><span class="line">[2018-07-31T22:11:09,296][INFO ][o.e.p.PluginsService     ] [qR5cyzh] loaded module [repository-url]</span><br><span class="line">[2018-07-31T22:11:09,296][INFO ][o.e.p.PluginsService     ] [qR5cyzh] loaded module [transport-netty4]</span><br><span class="line">[2018-07-31T22:11:09,296][INFO ][o.e.p.PluginsService     ] [qR5cyzh] loaded module [tribe]</span><br><span class="line">[2018-07-31T22:11:09,297][INFO ][o.e.p.PluginsService     ] [qR5cyzh] no plugins loaded</span><br><span class="line">[2018-07-31T22:11:13,791][INFO ][o.e.d.DiscoveryModule    ] [qR5cyzh] using discovery type [zen]</span><br><span class="line">[2018-07-31T22:11:14,926][INFO ][o.e.n.Node               ] initialized</span><br><span class="line">[2018-07-31T22:11:14,927][INFO ][o.e.n.Node               ] [qR5cyzh] starting ...</span><br><span class="line">[2018-07-31T22:11:15,582][INFO ][o.e.t.TransportService   ] [qR5cyzh] publish_address &#123;127.0.0.1:9300&#125;, bound_addresses &#123;[::1]:9300&#125;, &#123;127.0.0.1:9300&#125;</span><br><span class="line">[2018-07-31T22:11:15,598][WARN ][o.e.b.BootstrapChecks    ] [qR5cyzh] max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</span><br><span class="line">[2018-07-31T22:11:15,598][WARN ][o.e.b.BootstrapChecks    ] [qR5cyzh] max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</span><br><span class="line">[2018-07-31T22:11:18,915][INFO ][o.e.c.s.MasterService    ] [qR5cyzh] zen-disco-elected-as-master ([0] nodes joined), reason: new_master &#123;qR5cyzh&#125;&#123;qR5cyzhRQUix7PbCNFViTw&#125;&#123;wRzc-CVaRmmdLNnPfT_LTA&#125;&#123;127.0.0.1&#125;&#123;127.0.0.1:9300&#125;</span><br><span class="line">[2018-07-31T22:11:18,920][INFO ][o.e.c.s.ClusterApplierService] [qR5cyzh] new_master &#123;qR5cyzh&#125;&#123;qR5cyzhRQUix7PbCNFViTw&#125;&#123;wRzc-CVaRmmdLNnPfT_LTA&#125;&#123;127.0.0.1&#125;&#123;127.0.0.1:9300&#125;, reason: apply cluster state (from master [master &#123;qR5cyzh&#125;&#123;qR5cyzhRQUix7PbCNFViTw&#125;&#123;wRzc-CVaRmmdLNnPfT_LTA&#125;&#123;127.0.0.1&#125;&#123;127.0.0.1:9300&#125; committed version [1] source [zen-disco-elected-as-master ([0] nodes joined)]])</span><br><span class="line">[2018-07-31T22:11:19,028][INFO ][o.e.g.GatewayService     ] [qR5cyzh] recovered [0] indices into cluster_state</span><br><span class="line">[2018-07-31T22:11:19,097][INFO ][o.e.h.n.Netty4HttpServerTransport] [qR5cyzh] publish_address &#123;127.0.0.1:9200&#125;, bound_addresses &#123;[::1]:9200&#125;, &#123;127.0.0.1:9200&#125;</span><br><span class="line">[2018-07-31T22:11:19,097][INFO ][o.e.n.Node               ] [qR5cyzh] started</span><br></pre></td></tr></table></figure></p><p>验证：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl &quot;127.0.0.1:9200&quot;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot; : &quot;snZNWBu&quot;,</span><br><span class="line">  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,</span><br><span class="line">  &quot;cluster_uuid&quot; : &quot;9k1xyJl4S6uoosA_Ua0XEQ&quot;,</span><br><span class="line">  &quot;version&quot; : &#123;</span><br><span class="line">    &quot;number&quot; : &quot;6.3.2&quot;,</span><br><span class="line">    &quot;build_flavor&quot; : &quot;default&quot;,</span><br><span class="line">    &quot;build_type&quot; : &quot;zip&quot;,</span><br><span class="line">    &quot;build_hash&quot; : &quot;053779d&quot;,</span><br><span class="line">    &quot;build_date&quot; : &quot;2018-07-20T05:20:23.451332Z&quot;,</span><br><span class="line">    &quot;build_snapshot&quot; : false,</span><br><span class="line">    &quot;lucene_version&quot; : &quot;7.3.1&quot;,</span><br><span class="line">    &quot;minimum_wire_compatibility_version&quot; : &quot;5.6.0&quot;,</span><br><span class="line">    &quot;minimum_index_compatibility_version&quot; : &quot;5.0.0&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="更改静态IP"><a href="#更改静态IP" class="headerlink" title="更改静态IP"></a>更改静态IP</h4><p>本地是可以用，但是试了下，由于centos是在虚拟机里面，在外面机器，访问虚拟机ip就打不开es了，没办法，将es设置成静态IP<br>修改配置文件<code>/confif/elasticsearch.yml</code>，修改IP为静态IP：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------- Network -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Set the bind address to a specific IP (IPv4 or IPv6):</span><br><span class="line">#</span><br><span class="line">network.host: 192.168.0.91</span><br><span class="line">#</span><br><span class="line"># Set a custom port for HTTP:</span><br><span class="line">#</span><br><span class="line">http.port: 9200</span><br><span class="line">#</span><br><span class="line"># For more information, consult the network module documentation.</span><br></pre></td></tr></table></figure></p><p>然后重启es，发现，嗯，还是起不来，又报了俩错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ERROR: [2] bootstrap checks failed</span><br><span class="line">[1]: max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</span><br><span class="line">[2]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</span><br></pre></td></tr></table></figure></p><h4 id="max-file-descriptors-4096-for-elasticsearch-process-is-too-low-increase-to-at-least-65536"><a href="#max-file-descriptors-4096-for-elasticsearch-process-is-too-low-increase-to-at-least-65536" class="headerlink" title="max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]"></a>max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</h4><p>切到root下，修改对应配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/security/</span><br><span class="line"># 日常备份</span><br><span class="line">cp limits.conf limits.conf.bak</span><br><span class="line"># 修改配置</span><br><span class="line">vim limits.conf</span><br></pre></td></tr></table></figure></p><p>增加内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># elasticsearch config start</span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft nproc 2048</span><br><span class="line">* hard nproc 4096</span><br><span class="line"># elasticsearch config end</span><br></pre></td></tr></table></figure></p><h4 id="max-virtual-memory-areas-vm-max-map-count-65530-is-too-low-increase-to-at-least-262144"><a href="#max-virtual-memory-areas-vm-max-map-count-65530-is-too-low-increase-to-at-least-262144" class="headerlink" title="max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]"></a>max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</h4><p>也是切root改配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /etc</span><br><span class="line">cp sysctl.conf sysctl.conf.bak</span><br><span class="line">vim sysctl.conf</span><br></pre></td></tr></table></figure></p><p>增加内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># elasticsearch config start</span><br><span class="line">vm.max_map_count=262144</span><br><span class="line"># elasticsearch config end</span><br></pre></td></tr></table></figure></p><p><strong>重启系统</strong></p><p>然后切到es用户，重启服务，完成~<br>可以到本地浏览器试试访问”<a href="http://IP:9200" target="_blank" rel="noopener">http://IP:9200</a>“</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Centos 7下搭建ElasticSearch&lt;/p&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="Centos7" scheme="http://tokyle.com/tags/Centos7/"/>
    
  </entry>
  
  <entry>
    <title>海贼王TV版目录</title>
    <link href="http://tokyle.com/2018/07/19/%E6%B5%B7%E8%B4%BC%E7%8E%8BTV%E7%89%88%E7%9B%AE%E5%BD%95/"/>
    <id>http://tokyle.com/2018/07/19/海贼王TV版目录/</id>
    <published>2018-07-19T09:16:52.000Z</published>
    <updated>2018-08-15T03:24:05.975Z</updated>
    
    <content type="html"><![CDATA[<p>来点和技术无关的~<br>作为最爱的动漫，没有之一，整理的一点TV版目录，大海贼！<br><a id="more"></a></p><p>一 海贼和小偸（BOSS：小丑巴基。SPECIAL：海军克比）新船员：路飞 索隆 娜美</p><p>1:我是路飞,未来的海贼王.<br>2:大剑客现身.海贼猎人_罗罗亚索隆.<br>3:蒙卡VS路飞,神秘的美少年是谁?<br>4:路飞的过去。红发登场!<br>5:恐怖.神奇的力量,海贼小丑巴基船长.<br>6:史上最厉害的怪人.催眠师杰克斯.<br>7:绝命追杀.骑兽师摩奇VS路飞.<br>8:壮烈战斗.剑客索隆VS杂技卡巴吉.</p><p>9:谁是胜者.恶魔果实能力者大对决.</p><p>二 不虚假的事（BOSS：船长洛克。SPECIAL：可雅）新船员：骗人布 梅利</p><p>10:正义的骗子?骗人布船长.<br>11:揭发阴谋.海贼管家洛克船长<br>12:正面冲突!黑猫海贼团斜坡大攻防<br>13:恐怖2人组,黑猫兄弟VS索隆<br>14:路飞复活.可雅小姐冒死奋战<br>15:打倒洛克.骗人布男子的决心<br>16:保护可雅.骗人布海贼团大展身手<br>17:怒气冲天.洛克VS路飞<br>18:你就是珍禽异兽.卡蒙和奇妙的伙伴.<br>19:3刀流的过去.索隆与克伊娜的誓言.</p><p>三 ALL  BLUE之梦（BOSS：克利克。SPECIAL：红脚哲普）新船员：山治</p><p>20:招牌厨师.海上餐厅的山治<br>21:不速之客.山治的饭与啊金的恩.<br>22:最强海贼滥队.克利克提督<br>23:保卫芭拉缔.大海贼_红脚哲普.<br>24:鹰眼米霍克.剑豪索隆命丧大海.<br>25:必杀足技招爆发,山治VS铁壁帕路<br>26:路飞和山治的梦想.梦幻般的ALL BIUE<br>27:冷酷无情的鬼人.海贼滥队总队长啊金<br>28:不会死的.路飞VS克利克的激战<br>29:死斗的结果!肚皮里的一把枪<br>30:起程.海上厨师和路飞他们一起出发</p><p>四 橘子和风车（BOSS：鱼人阿龙。SPECIAL：贝尔梅尔）新船员：娜美</p><p>31:东海最坏的男人.鱼人海贼恶龙<br>32:可可亚西存的魔女.恶龙的女干部<br>33:骗人布死了?路飞还没登陆吗.<br>34:全员集合,骗人布道出娜美的实情<br>35:不为人知的过去.女战士_贝尔梅尔<br>36:求生.妈妈贝尔梅尔与娜美的亲情.<br>37:路飞站出来.食言的结果<br>38:路飞危险.鱼人VS路飞海贼团<br>39:路飞沉入海底.索隆VS章鱼小八<br>40:伟大的战士.激战山治与骗人布.<br>41:路飞动力全开.娜美的决心与草帽<br>42:爆裂.鱼人恶龙来自海底的猛攻.<br>43:终结鱼人帝国.娜美是我的伙伴<br>44:带着笑容的起航.再见了故乡可可亚西村.<br>45:悬赏犯.草帽路飞闻名全世界</p><p>番外编  小巴基大冒险</p><p>46:追捕草帽小子.小丑巴基的大冒险.<br>47:久等咯.巴基船长复活.</p><p>五 伟大的传说开始（SPECIAL：达斯琪）</p><p>48:开始与结束的镇.登陆罗格镇.<br>49:3代鬼撤和雪走.索隆的新刀和女上士.<br>50:骗人布对带小孩的达迪.正午的决斗<br>51:炽热的料理比赛!香吉士VS美人厨师<br>52:巴其复仇!在死刑台上笑的男人<br>Special:路飞落下!秘境.海肚脐之大冒险<br>53:传说开始!目标伟大的航路</p><p>TV原创 千年龙的传说</p><p>54:全新冒险的预感!神秘少女阿碧丝<br>55:奇迹般的生物!阿碧丝的秘密和传说之岛<br>56:艾力克出击!突破重围冲出军舰岛<br>57:绝海孤岛!传说中的失落之岛<br>58:废墟的决斗!紧张的索隆VS艾力克<br>59:路飞完全包围!尼尔森提督的秘招<br>60:在天空中飞舞!苏醒的千年传说</p><p>六 进入伟大航路 开端（SPECIAL：鲸鱼拉布）新船员：薇薇公主 超卡鲁鸭卡鲁</p><p>61:愤怒的决斗!跨越红土大陆<br>62:第一道难关!出现巨大的鲸鱼拉布<br>63:男人的约定!路飞与鲸鱼再会的誓言<br>64:欢迎海贼的小镇!登陆威士忌山峰<br>65:三刀流爆发!索隆VS巴洛克工作社<br>66:一决胜负!路飞VS索隆谜样的大决斗<br>67:护送薇薇公主!路飞海贼团出航</p><p>番外编  海军奋斗记</p><p>68:加油!克比,贝鲁梅伯海军奋斗记<br>69:克比,贝鲁梅伯的决心!格普中将的父母心</p><p>七 巨人的小花园 （BOSS：MR.3。SPECIAL：巨人东利 布洛基）</p><p>70:太古之岛!潜藏在小花园的黑影<br>71:巨人的决斗!巨人东利与布洛基<br>72:路飞生气了!神圣决斗中的卑鄙陷阱<br>73:布洛基胜利狂哭!艾尔帕布决战<br>74:魔鬼蜡烛!不甘心的眼泪与愤怒的泪水<br>75:袭击路飞的魔法!颜色调配的陷阱<br>76:毅然反击!乌索普的机智与火炎星<br>77:再见了,巨人岛!朝阿拉巴斯坦出发<br>78:娜美生病了!朝海上之雪前进</p><p>八 没有名字的国家（BOSS：瓦尔波。SPECIAL：多尔顿）新船员：驯鹿乔巴</p><p>79:奇袭!布里基克号与布里基的瓦尔波<br>80:没有医生的岛!在没有名字的国家冒险<br>81:开心吗?人称魔女的医生<br>82:多尔顿的觉悟!瓦尔波军团登陆<br>83:雪之岛!登上磁鼓山顶<br>84:蓝鼻子的驯鹿!乔巴的秘密<br>85:痴人说梦话!庸医西尔尔克<br>86:西尔尔克的樱花与继承的遗志<br>87:VS瓦尔波军团!吞吞果实的实力<br>88:动物系恶魔果实!乔巴的七段变形<br>89:王国的支配终将结束!旗子的信念直到永远<br>90:西尔尔克的樱花!磁鼓炮射的奇迹<br>91:再见了磁鼓岛!我要向大海出发了</p><p>九 沙漠的鳄鱼（BOSS：七武海沙鳄鱼。SPECIAL：火拳艾斯 上校斯摩格）新船员：罗宾</p><p>92:阿拉巴斯坦的英雄和船上的芭蕾女伶<br>93:朝着沙漠之国前进!呼唤雨之粉与叛乱军<br>94:各路英雄的再次相遇!他的名字叫火拳艾斯<br>95:艾斯和路飞!热情的理想与兄弟情谊<br>96:绿之城!爱尔马尔与功夫海牛<br>97:沙之国的冒险!住在炎热大地的怪物<br>98:沙漠海贼团登场!为自由而生的男人们<br>99:冒牌货的骨气!真心的叛乱军卡缪<br>100:叛乱军战士窥沙!对薇薇发誓的梦<br>101:艳阳的决斗!艾斯VS蝎子男<br>102:遗迹里迷路!薇薇,同伴和国家生存之道<br>103:蜘蛛人咖啡店!8点敌方特务集合<br>104:路飞VS薇薇!赌下同伴之泪的誓言<br>105:阿拉巴斯坦战线!梦之城雨地<br>106:一筹莫展的陷阱!突人雨宴当中<br>107:理想乡作战开始!开始活动的叛乱<br>108:恐怖的香蕉鳄鱼与Mr.王子<br>109:通过逆转大逃亡的关键!蜡烛球<br>110:无情的死斗!路飞VS克洛克达尔<br>111:向着奇迹奔跑!阿拉巴斯坦动物岛<br>112:叛乱军VS国王军!决战在阿尔巴那<br>113:叹息的阿尔巴那!激斗,跑得快队长<br>114:为了同伴的梦想发誓!决斗鼹鼠土堆第四街<br>115:本日大公开!模仿模仿合成脸<br>116:变身为娜美!冯.克雷连打芭蕾拳法<br>117:娜美的旋风注意报告!天候棒炸裂<br>118:皇族的秘宝!古代兵器冥王<br>119:豪剑的精髓!斩钢铁之力与万物的呼吸<br>120:战争结束了!窥沙举起了白旗<br>121:薇薇声音的归宿!英雄从天而降<br>122:沙鳄鱼VS水路飞!决斗第二回合<br>123:鳄鱼!向着王家之墓飞奔吧,路飞<br>124:恶梦之时逼近!这里是沙沙团秘密基地<br>125:伟大之翼!我的名字是国家守护神贝尔<br>126:超越!雨水降落在阿拉巴斯坦<br>127:放下武器吧!海贼和坚守的正义<br>128:海贼的宴会!阿拉巴斯坦逃出计划<br>129:离别的日子!薇薇的冒险结束了<br>130:危险的香气!第七位伙伴-妮可.罗宾</p><p>TV原创 彩虹色的雾</p><p>131:第一个患者!蓝波球的秘密<br>132:航海士的反乱!为了不曾割舍的梦想<br>133:被继承的梦想!咖哩的铁人香吉士<br>134:让花朵绽放!男子汉乌索普的八尺烟花<br>135:传说中的海贼猎人!流浪的剑士索隆<br>136:羊之岛的赛尼和山中的海贼船<br>137:赚了一笔啊!高利货赛尼的野心<br>138:岛上宝物的线索!赛尼海贼团出击<br>139:彩虹颜色雾的传说!露露嘉岛的老人半藏<br>140:永远之国的居民!盘普今海贼团<br>141:回想故乡!逃离不出的海贼墓场<br>142:乱战必死!贝特的野心与彩虹之塔<br>143:就这样传说开始了!去彩虹的那面</p><p>十 空海漫游（BOSS：神艾尼路。SPECIAL：库力克 战鬼瓦夷帕 原神科尔）</p><p>144:被夺走的记录!打捞之王人猿<br>145:怪物登场!别对白胡子出手<br>146:别小看梦想!嘲笑之镇”魔谷镇”<br>147:海贼的最高峰!谈梦想的男人和海底探索王<br>148:传说的一族!大话王诺兰德<br>149:向云大满驼!追击南南见鸟<br>150:梦想已完结了吗?贝拉密VS猿山联合军<br>151:一亿的男人!世界最高权力和黑胡子海贼<br>152:让船航向天空!搭上突激的海流<br>153:这里是空之海!空之骑士和天国之门<br>154:神之国!住在云上的天使们<br>155:禁断的大地!神所居住的岛屿和天的制裁<br>156:这么快就成罪犯了!SKYPIEA的执法者<br>157:要逃跑吗!已经开始进行的神的试练<br>158:可爱大道的陷阱!万能的神.艾涅尔<br>159:向前,乌鸦丸号!目标活祭坛<br>160:生存率10%!心网使者的神官大悟<br>161:球的试练的威协!迷失森林的死斗<br>162:乔巴危险!原来的神VS神官修罗<br>163:越来越不可思议!绳的试练和爱的试练<br>164:点燃香朵拉的灯吧!战士瓦夷帕<br>165:天空的黄金乡加雅!目标神之社<br>166:寻找黄金前夜的祭尊!对”大地”的想法<br>167:神.艾涅尔登场!生存战斗的夜鸣曲<br>168:长牙蟒蛇!终于到了生存者游戏的时间<br>169:舍命的排击!(战鬼)瓦夷帕的觉悟<br>170:空中的激战!海贼索隆VS战士布拉哈姆<br>171:呼叫的燃烧炮!路飞VS战鬼瓦夷帕<br>172:沼的试练!乔巴VS神官涅磐<br>173:无敌的能力!艾涅尔的真面目<br>174:幻之都市!雄伟的香多拉遗迹<br>175:生存率0%!乔巴VS神官欧姆<br>176:登上”巨大豆蔓”!上层遗迹的死斗<br>177:铁的试练的重头戏!白荆死亡决斗<br>178:迸出火花的斩击!索隆VS神官欧姆<br>179:崩溃的上层遗迹!走向曲终的五重奏<br>180:古代遗迹的对决!神.艾涅尔的目的<br>181:前往无边无际大地的野心!方舟箴言</p><p>182 最后的激战!海贼路飞对神艾尼路!!<br>183 MAXIM浮出水面!起动Despair<br>184 路飞落下!神之载决和娜美的愿望!!<br>185 苏醒的二人！燃烧吧爱情的救援前线！！<br>186 走向绝望的狂想曲，空岛灭亡迫在眉睫！！<br>187 钟声的引导！大战士与探险家的故事</p><p>188 从诅咒的束缚中解放！大战士流下热泪！！<br>189 你是我永远的挚友！响彻广阔无边大海的誓约之钟<br>190 天使岛毁灭！雷迎降临的恐怖！！<br>191 放倒巨大豆蔓！逃出空岛的最后希望！<br>192 神之国的奇迹！响彻天堂的岛之歌<br>193 战争结束！响彻远方 充满自豪地幻想曲<br>194 我来到了这里！历史正文的编织者<br>195 走吧，回青海去！！编织出幻想的最终乐章</p><p>TV原创 G8要塞</p><p>196:发布非常事态命令!恶名昭著海贼船潜人<br>197:料理人香吉士!在海军食堂发挥厨师的真正价值<br>198:被囚的索隆与乔巴的紧急手术<br>199:逼近的海军搜查网!第二名被囚者<br>200:拼命的路飞和香吉士!救出大作战<br>201:热血特种部队参战!桥上的攻防战<br>202:突破包围网!夺回黄金梅利号<br>203:消失的海贼船!要塞攻防第二回合<br>204:黄金夺回作战与威霸回收作战<br>205:一网打尽计划!强纳森自信的秘策<br>206:别了海军要塞!逃出的最后攻防战</p><p>十一 长链岛冒险（BOSS：银狐福克西。）</p><p>207:长链岛的大冒险<br>208:福克西海贼团与DAVY BACK FIGHT争霸战<br>209:第一回战!环岛皮划艇赛<br>210:银狐福克西!猛烈的干扰攻势<br>211:第二回合!GROGGY RING赛<br>212:连续的红牌!GROGGY RING<br>213:第三回战!滚轴溜冰追逐战<br>214:白热化爆走比赛!突人最终轮<br>215:轰鸣的热球刚球!海贼躲避球赛<br>216:悬崖的决战!不倒翁摔倒了<br>217:船长对决!最终战单挑格斗<br>218:迟缓攻击全开VS不死身的路飞<br>219:壮绝激烈的单挑对决!命运何去何从</p><p>TV原创 失忆岛</p><p>220:失去了,被夺走了!你是谁?<br>221:抱着笛子的谜之少年和罗宾的推理<br>222:出击,夺回记忆!海贼团上陆<br>223:露出獠牙的索隆!堵在面前的野兽<br>224:原形毕露!记忆小偷最后的攻击<br>225:自尊心强大的男人!银狐福克西<br>226:最接近无敌的男人!最危险的男人</p><p>十二 水之都（BOSS：CP9路奇。SPECIAL：冰山 帕裏 青雉）新船员：罗宾 弗兰奇 阳光万里号</p><p>227:海军总部大将青雉!最强战斗力的威胁<br>228:橡胶与冰的决斗!路飞VS青雉<br>229:飞驰的海列车与水之都WATER SEWEW<br>230:水上都市的冒险!目标巨大的造船厂<br>231:福兰克一家与冰山先生<br>232:格雷勒公司!壮观的一号船坞<br>233:海贼诱拐事件与等待死亡的海贼船<br>234:救出伙伴!猛攻福兰克屋<br>235:月下的大干戈!悲伤下飘动的海贼旗<br>236:路飞VS乌索普!男儿气魄的大碰撞<br>237 激震水之都!被袭击的冰山!<br>238 橡皮人对喷火的改造人<br>239 犯人是草帽海贼团?水之都的护卫<br>240 永远的离别?招来黑暗的女子尼可.罗宾<br>241 抓住罗宾!草帽海贼团的决议<br>242 信号伴随着炮击！开始行动的CP9<br>243 取下面具的CP9！惊人的真面目<br>244:隐藏的羁绊！冰山与福兰奇<br>245:回来吧罗宾！与CP9的对决<br>246:草帽海贼团全灭？豹型的威胁！<br>247:被船所爱的男人！乌索普的眼泪！<br>248:福兰奇的过去！海列车起航之日<br>249:斯潘达姆的阴谋！海列车颠簸之日<br>250:传说男人的末日！海列车哭泣之日<br>251:背叛后面的真相！罗宾悲伤的决意！<br>252:分离同伴的汽笛！飞驰而去的海列车<br>253:香吉士突入！暴风雨中的海列车大战！<br>254:娜美的全力呼唤！草帽小子路飞复活！<br>255:另一辆海列车？火箭人出击！<br>256.拯救同伴！向拳头发誓的敌我之羁绊！<br>257.击碎大浪！路飞和索隆的最强合体技<br>258.谜之男登场！？他的名为狙击王！<br>259.厨师间的对决！香吉士对拉面拳法！<br>260.车顶上的决斗！福兰奇对内罗<br>261.鬼斩索隆对斩船人T骨<br>262.罗宾争夺战！狙击王的奇策！！<br>263.司法之岛！Eneas Lobby的全貌！<br>264.登陆作战开始！突击！草帽小子海贼团！<br>265.路飞猛冲！司法之岛的大决战！<br>266.与巨人族的攻防！打开第二道门！<br>267.杀出活路！腾空而起的火箭人！<br>268.跟上路飞的步伐！草帽小子一伙全力作战<br>269.路飞海贼团奔向新的战场！<br>270.还我罗宾！路飞对布鲁诺！<br>271.不要停止脚步！点起反击的狼烟！<br>272.路飞就在眼前！前往法院前广场集结<br>273.为了捍卫同伴!二档发动<br>274.回答我罗宾!草帽小子海贼团的呼唤!<br>275.罗宾的过去！被称为恶魔的少女！<br>276.宿命的母女！母亲之名奥尔维亚！<br>277.奥哈拉的悲剧<br>278.说你想活下去!<br>279,跳下瀑布吧！路飞的信念!<br>280.男人的生存之道！索隆的野心和乌索普的梦想！<br>281.泪水编织而成的同伴的羁绊！娜美的世界地图！<br>282.离别造就了男子汉！香吉与乔巴.<br>283.一切都为了伙伴！黑暗中的女人罗宾！<br>284.绝不交出设计图！福兰奇的决断！<br>285.夺取五把钥匙！草帽海贼团 VS CP9！<br>286.恶魔果实的能力！卡库加布拉大变身<br>287.死也不踢女人！男子汉香吉的骑士道！<br>288.猫头鹰的失算！我的可乐是生命之水！<br>289.索隆的新招炸裂登场！剑名：狙击王！<br>290.无法控制！乔巴的蓝波球大变身!<br>291.捕头路飞再登场！是梦境还是现实彩票大骚动！<br>292.城内的散年糕大竞赛！大红鼻子的阴谋！<br>293.泡沫使用者卡里法！逼近娜美的肥皂危机！<br>294.凶报传来,屠魔令发动<br>295.五个娜美？伴随幻象的反击！<br>296.娜美的决断,攻击暴走的乔巴<br>297.猎人香吉登场？赠送给谎言狼的挽歌<br>298.灼热的足技,SANJI的反击<br>299.白刃之间的猛袭!ZORO和KAKU强力斩击对决<br>300.鬼神索隆,气势逼人的阿修罗化身<br>301.斯潘达姆惊愕！屹立于司法塔上的英雄<br>302.罗宾解放！路飞与路奇的激战<br>303.犯人是捕头路飞？追寻消失的大樱花<br>304.不战胜对手就保护不了任何人!3档发动<br>305.战栗的过去！黑暗的正义与罗布·路奇<br>306.梦幻的人鱼出现？在渐渐失去意识之时<br>307.炮火中沉没的岛屿！福兰奇绝望的呼喊！<br>308.等待路飞！踌躇之桥上的死斗！<br>309.充满愿望之拳！路飞拼尽全力的[机关枪]！<br>310.来自大海的朋友！草帽小子一伙最深的友情<br>311.全员大逃亡!海贼的胜利之道<br>312.感谢你,梅利!朦胧之雪中的离别之海<br>313.打破宁静！持有爱之拳的海军中将<br>314.最强的家族!路飞父亲的惊人身份<br>315.新世界!伟大航路的去向<br>316.香克斯的行动!连接暴走时代的纽带<br>317.寻找箭鱼的少女！水之都大搜查<br>318.坚强的妈妈！索隆家务活闹剧！</p><p>319.山治惊愕！谜之老头与超美味料理<br>320.终于全体悬赏！超过6亿的一伙人！<br>321.君临大海的百兽之王！梦想之船终于完成！<br>322.再见了亲爱的小弟们！弗兰奇起航<br>323.走出水之都！男子汉乌索普决斗的了断</p><p>324.巡回的悬赏令！欢声雀跃的故乡 向前迈进的船！</p><p>番外篇 艾斯被秒</p><p>325.最凶险的能力！袭击艾斯的黑胡子的黑暗 </p><p>TV原创 海贼旗猎人（BOSS：爸爸？）</p><p>326.谜一般的海贼一行！阳光号和危险的陷井<br>327.SUNNY号大难当前！咆哮的超速秘密机器<br>328.沉没于新世界中的梦想！失意的海贼帕泽鲁<br>329.袭击而来的刺客们！冰上的大决斗<br>330 草帽一伙陷入苦战！嵌入旗帜的海贼魂<br>331 酷热全开!迫近的双子磁力量<br>332.混乱不堪的公馆！发怒的首领与被囚的一伙人<br>333.重生的不死鸟！向同伴许下的誓言海贼旗之梦<br>334.炽热的决战！路飞VS灼热的首领<br>335.相会新世界！与勇猛的海贼的告别</p><p>TV 原创</p><p>336.乔巴人出动！保卫海滨的电视台 </p><p>十三僵尸岛（BOSS：奥兹 月光莫利亚。 SPECIAL：罗拉）新船员：音乐家布鲁克</p><p>337 闯进魔之海！ 浮现于浓雾中的迷之骷髅<br>338 遇见人的喜悦！骷髅绅士的真面目<br>339 怪现象频发！登录[Thriller Bark]<br>340 被称作天才的男人！霍古巴克现身<br>341 娜美千钧一发！僵尸宅院和透明人<br>342 僵尸之迷!恶梦般的霍古巴克研究所<br>343 他的名字是莫里亚！操纵影子的大海贼设下的陷阱<br>344 僵尸歌的飨宴！夜袭钟的黑暗声音<br>345 全是动物！贝罗娜的不可思议的花园<br>346 消失的草帽一伙！出现了神秘的剑客<br>347 残余的骑士道<br>348 从天而降的男人!剑侠鼻歌<br>349 路飞紧急事态!最强影子的去向<br>350 被称为魔人的战士奥兹复活<br>351 500年后的苏醒!!奥兹开眼<br>352 信念的祈求!! 死守爆炸头的布鲁克<br>353 男子汉不灭的誓言！！在远方的天空下等待的朋友<br>354 定将再会!!布鲁克许下誓言的海岬<br>355 食物 娜美和影子！！路飞愤怒的大反击<br>356 乌索普最强?消极之灵就交给我了<br>357 将军僵尸被秒杀!奥兹的冒险心情<br>358 炎之骑士山治！！踢毁虚假的婚礼<br>359 透明的恩怨?山治被夺走的梦<br>360 救命啊英雄 不死之身的敌人幽灵公主<br>361 吓破胆的佩罗纳！！名副其实的牛皮大王乌索普<br>362 屋顶上飞舞的斩击 索隆与龙马的决斗<br>363 激怒的乔巴！霍古巴克魔鬼般的医术<br>364 奥滋的巨吼！死出来草帽小子一伙<br>365 敌人是路飞？最强僵尸对草帽小子一伙<br>366 受死吧阿布萨罗姆！娜美的友情雷击<br>367 扳回一城！必杀草帽合体技<br>368 无声无息的袭击！迷之访问者暴君熊！<br>369 奥滋加莫里亚！力量与智慧的最凶合体<br>370 逆转战局的秘策！梦魇 路飞登场<br>371 草帽小子一伙全军覆没！影影能力全开<br>372 超绝战斗开始！路飞VS路飞<br>373 决战迫近 重撞 最后的一击<br>374 身体消失 照射在恶魔之岛上的朝阳<br>375 永不完结的危机 草帽小子以获得抹杀命令<br>376 全部弹开 熊的肉垫果实能力<br>377 伙伴的痛苦就是我的痛苦 佐隆奋不顾身的战斗<br>378 遥远的誓言 海贼之歌与小鲸鱼<br>379 布鲁克的过去 欢乐的伙伴悲伤的离别<br>380 宾克斯的美酒 连接过去和现在的歌<br>381 新的伙伴音乐家鼻歌布鲁克</p><p>TV原创</p><p>382 迟缓果实的威胁 银狐福克西再现<br>383 宝藏争夺战 崩溃的SPA ISLAND号<br>384 布鲁克大奋斗 成为真正伙伴的艰辛道路？</p><p>十四（香波地群岛篇）</p><p>385 环绕伟大航路半圈！到达！红土大陆<br>386 憎恨草帽小子一伙的男人！铁面男迪巴鲁登场！<br>387 再次相会！救出被囚的鱼人<br>388 悲剧！隐藏在面具下的迪巴鲁的真面目<br>389 爆炸！桑尼号超级秘密武器狮吼炮<br>390 目标直指鱼人岛！肥皂泡群岛登陆<br>391 暴虐！香波迪群岛的支配者天龙人<br>392 全新的对手集结！超新星11人<br>393 目标是凯米！！人贩子的魔手迫近<br>394 救出凯米 群岛上残留着黑暗的历史<br>395 UTIME LIMIT 人类拍卖会开幕<br>396 铁拳炸裂！勇闯竞拍场<br>397 特大恐慌！拍卖会场的死斗！<br>398 大将黄猿出动！ 香波迪群岛的骚乱！<br>399 突破包围网！ 海军VS三名船长！<br>400 罗杰和雷利   海贼王和他的右手腕<br>401 无法回避？大将黄猿的光速踢！<br>402 压倒性优势！海军战斗兵器和平主义者<br>403 新的强敌出现！挑着斧头的战桃丸<br>404 大将黄猿的猛攻 草帽一伙一筹莫展！<br>405 消失的伙伴们 草帽小子一伙的末日<br>406 时代剧特别篇 捕头路飞再次登场<br>407 时代剧特别篇 打破！斯里拉商会的圈套<br>408 登陆！男子禁忌之岛 亚马逊·百合<br>409 急迫！伙伴们的去向 女人岛的冒险<br>410 全体一塌糊涂！海贼女帝汉库克<br>411 后背隐藏的秘密 路飞遭遇蛇姬<br>412 无情的判决！被石化的玛格雷特<br>413 路飞大苦战！蟒蛇姐妹霸气的力量！！<br>414 全力以赴的战斗！橡胶VS蛇蛇<br>415 汉库克的告白 姐妹们难言的过去<br>416 拯救艾斯！新的目的地是大监狱<br>417 恋爱就象暴风雨！婀娜的汉库克<br>418 伙伴们的行踪 气象科学与机关岛<br>419 伙伴们的行踪 巨鸟之岛与桃色乐园！<br>420 伙伴们的行踪 连接岛屿的桥与食人植物<br>421 伙伴们的行踪 消极公主与恶魔王</p><p>推进城 Impel Down</p><p>422 决死的潜入！海底监狱 Impel Down<br>423 地狱里重逢！？四分五裂果实的能力者！<br>424 粉碎！红莲地狱 巴基的华丽大作战<br>425 监狱最强的男人！毒人·麦哲伦登场<br>426 剧场版联动特别篇 蠢蠢欲动 金狮子的野心<br>427 剧场版联动特别篇 被盯上的小东海<br>428 剧场版联动特别篇 阿密格海贼团的猛攻<br>429 剧场版联动特别篇 激战！路飞VS拉鲁格<br>430 被囚禁的王下七武海！海侠甚平<br>431 牢头萨鲁德得斯的陷阱 LV3·饥饿地狱<br>432 解放的白鸟！再会！冯·克雷<br>433 署长麦哲伦出动 完成！草帽小子包围网<br>434 全部战力集合！LV4·灼热地狱的决战<br>435 麦哲伦够强！冯·克雷临阵逃亡<br>436 一决雌雄！路飞孤注一掷的最后一击<br>437因为是朋友！冯?克雷拼死的营救行动！<br>438  地狱中的乐园！因佩尔LV5.5（2010年2月14日放送）<br>439「路飞治疗开始 伊万小姐奇迹的力量!!」<br>440 相信奇迹！冯·克雷魂的声援<br>441「路飞复活伊娃的越狱计划启动」<br>442 艾斯压送开始 最下层的LV6攻防<br>443 最强小队结成 震憾！推进城<br>444 更加混乱 黑胡子蒂奇袭来<br>445 危险的相遇 黑胡子和雨之希留<br>446 凭意志也不能倒下 认真起来的汉尼拔<br>447 愤怒的JET手枪 路飞VS黑胡子<br>448 阻止麦哲伦！伊万小姐绽放奥义<br>449 麦哲伦的奇策 受阻的越狱计划<br>450 越狱小队 危在旦夕 禁断招术 毒之巨兵<br>451 发生吧 最后的奇迹 突破正义之门<br>452 目标海军本部 营救艾斯之旅<br>453 同伴的下落 空岛报告和改造动物<br>454 伙伴们的下落!巨岛的比奈与桃色的对决<br>455 伙伴们的行踪 革命军和暴食森林的陷阱<br>456 伙伴们的行踪 巨大的墓碑与内裤的恩情</p><p>海军本部篇（顶上战争）</p><p>457 到达海军总部之前的回想特别篇 兄弟的誓言（动画原创）<br>458 到达海军总部之前的回想特别篇 集合！三大将（动画原创）<br>459 决战临近 海军最强布阵完成<br>460 巨大舰队出现 袭来！白胡子海贼团<br>461 决战拉开帷幕 艾斯和白胡子的过去<br>462 毁灭世界的力量！地震果实的能力<br>463 燃尽一切！大将赤犬的能力<br>464 恶魔的后代！小奥兹 Jr. 勇往直前！<br>465 只有胜者才是正义 发动！战国的作战<br>466 草帽小队登场!风云突变的战场<br>467 就算死也要救你！路飞VS海军 战斗开始<br>468 激战的连续！能力者军团VS能力者军团<br>469 熊发生的异变 伊万愤怒的一击<br>470 剑豪米霍克 逼近路飞的黑刀的斩击<br>471 歼灭作战启动 和平主义者军团的威力<br>472 赤犬的谋略！被陷害的白胡子<br>473 包围作战运作！白胡子海贼团陷入危机！<br>474 处刑执行命令下达　突破包围壁！<br>475 突入最终局面 白胡子起死回生的一招<br>476 路飞拼尽全力 奥里斯广场的全力一战<br>477 消减生命的力量 兴奋·荷尔蒙再次使用<br>478 为了约定！！激斗！路飞与可比<br>479 处刑台就在眼前！开启通往艾斯的道路<br>480 各自选择的道路 路飞VS卡普<br>481 艾斯救出!四皇白胡子最后的船长命令！<br>482 烧尽火焰的能力!赤犬无情的追击!<br>483 寻找答案 火拳艾斯死于战场<br>484 海军本部崩溃 白胡子无言的愤怒！<br>485 一决胜负 白胡子VS黑胡子海贼团<br>486 演出开幕 黑胡子显示出的真正目的<br>487 大将赤犬的执着 袭向路飞的岩浆铁拳<br>488 拼命的呐喊 改变命运的充满勇气的数秒<br>489 香克斯出现！巅峰对决终于结束</p><p>大事件后篇</p><p>490 群雄割据 新时代开始！<br>491 登陆女儿岛 逼近路飞的残酷现实</p><p>海贼王×美食猎人 特别联合篇</p><p>492 最强组合！奋斗 路飞和阿虏（1小时特别篇）</p><p>兄弟相遇的回忆篇</p><p>493 路飞和艾斯 兄弟相遇的故事！<br>494 萨博登场 不确定之物终点站的少年<br>495 我不会逃！艾斯拼死的营救作战<br>496 有朝一日要出海！三顽童推杯换盏结兄弟！<br>497 告别达旦一家？建成！秘密基地（动画原创）<br>498 路飞拜师？和海贼王交锋过的男人（动画原创）<br>499 和巨虎的决战 成为船长的人是谁？（动画原创）<br>500 被夺去的自由！逼近三兄弟的贵族的陷阱！<br>501 被释放的火炎 Gray terminal的危机<br>502 自由在哪里? 少年悲剧的出航!<br>503 拜托你了！兄弟寄来的信<br>504 为了兑现约定 各自开始旅程！<br>505 好想见他们！路飞泪的呼喊！<br>506 草帽一伙儿 震惊！传来的噩耗</p><p>修行与两年后</p><p>第507话 和冥王雷利重逢 路飞决断之时<br>第508话 回到船长身边！空岛逃离与浮游岛的案件<br>第509话 接触！大剑豪米霍克 索隆 意气用事的决斗！<br>第510话 山治受难，返回王国的女王！<br>第511话 竟然再次登陆！路飞来到海军本部！<br>第512话 传达给伙伴们 四处传播的大新闻！<br>第513话 海贼们开始行动！惊天动地的新世界！<br>第514话 地狱中求生还 山治，赌上男人尊严的一战！<br>第515话 还要变得更强 索隆向船长的发誓！<br>第516话 路飞开始修行 2年后前往约定之地<br>第517话 新章开幕 草帽一伙再集结！<br>第518话 一触即发！路飞VS伪路飞<br>第519话 被阻击的草帽一伙<br>第520话 假草帽一伙的威胁<br>第521话 见识修行的成果 </p><p>鱼人岛篇</p><p>第522话 路飞踏上前往新世界的航程<br>第523话 守卫桑尼号的男人！<br>第524话 大海原的恶魔现身<br>第525话 失散的草帽一伙<br>第526话 海底火山喷发<br>第527话 登陆鱼人岛！美丽的人鱼们<br>第528话 香吉士生命垂危<br>第529话 鱼人岛灭亡？夏利的预言<br>第530话 鱼人岛之王 海神尼普顿<br>第531话 龙宫城 被所救的鲨鱼带过来<br>第532话 爱哭的胆小鬼！硬塔壳的人鱼公主<br>第533话 发生紧急事态 被占领的龙宫城<br>第534话 龙宫城震动 白星诱拐事件<br>第535话 霍迪袭来 复仇计划开始<br>第536话 龙宫城的决战 卓洛VS霍迪<br>第537话 守护白星！邓肯的追击<br>第538话 草帽一伙战败？霍迪掌控龙宫城<br>第539话 复苏的因缘 娜美和鱼人海贼团<br>第540话 解放奴隶的英雄 冒险家泰格<br>第541话 黄猿登场！瞄准泰格的陷阱 </p><p>美食的俘虏特别篇<br>第542话 再会 阿虏和路飞 寻找海鲜果实（46分钟特别篇） </p><p>继续============================================</p><p>第543话 英雄的末路 泰格令人震惊的真相<br>第544话 海贼团分裂 甚平VS阿龙<br>第545话 鱼人岛震动！漂流而来的天龙人<br>第546话 突然的悲剧！封闭未来的凶杀<br>第547话 再回到现在 霍迪开始行动<br>第548话 王国震惊 尼普顿处刑命令<br>第549话 产生的裂痕！路飞VS甚平<br>第550话 霍迪的异变 凶药真正的力量<br>第551话 决战开始 乔克尔特广场<br>第552话 震惊的告白 乙姬暗杀的真相<br>第553话 白星的眼泪！路飞终于登场<br>第554话 大激战！草帽小子一伙VS10万敌人<br>第555话 绝招炸裂！索隆、香吉出击！<br>第556话 初次亮相！桑尼号的秘密武器！<br>第557话 钢铁海贼！弗兰奇将军登场<br>第558话 诺亚接近！鱼人岛毁灭的危机<br>第559话 快点！路飞！白星危在旦夕！<br>第560话 激斗开始！路飞VS霍迪！<br>第561话 大乱站！草帽小子一伙VS新鱼人海贼团！<br>第562话 路飞败北！？霍迪复仇的时刻<br>第563话 令人震惊的真相！霍迪的真实身份！<br>第564话 一切归零！对路飞强烈的愿望！<br>第565话 路飞全力的一击！火拳枪炸裂<br>第566话 终于了结！与霍迪的最终决战<br>第567话 停下诺亚！拼命的橡皮机关枪！<br>第568话 迈向未来！通向太阳的道路！<br>第569话 被揭开的秘密 古代兵器的真相<br>第570话 草帽小子一伙惊愕！新的海军元帅！<br>第571话 最爱糖果！四皇毕古麻姆<br>第572话 前途多艰 新世界的陷阱<br>第573话 终于出航！再见鱼人岛<br>第574话 迈向新世界！目标最强海域</p><p>Z的野心篇<br>第575话 Z的野心篇 小小巨人莉莉！<br>第576话 Z的野心篇 谜之最强军团登场！<br>第577话 Z的野心篇 决死的大脱逃作战！<br>第578话 Z的野心篇 路飞VS修佐！</p><p>燃烧岛篇（庞克哈扎德）</p><p>第579话 登陆！燃烧岛庞克哈萨德<br>第580话 灼热的战斗！路飞VS巨大龙！<br>第581话 一伙人骚然！令人震惊的独头武士登场！<br>第582话 惊愕！终于显露出的岛上的秘密<br>第583话 救出孩子们！全员战斗开始<br>第584话 剑术对决 布鲁克VS神秘的躯体武士<br>第585话 七武海！托拉法尔加·劳<br>第586话 大危机 路飞沉入极寒之湖<br>第587话 激斗！劳VS斯摩格中将<br>第588话 2年后的重逢！路飞与劳<br>第589话 世界最邪恶 恐怖科学家凯撒</p><p>TV原创（联合篇）<br>第590话 奔跑吧最强军团！阿虏和路飞和悟空！</p><p>继续================================</p><p>第591话 乔巴震怒 主人惨无人道的实验<br>第592话 全部抹杀！传说中的杀手袭来！<br>第593话 拯救娜美！路飞的雪山之战<br>第594话 结成！路飞·劳的海贼同盟！<br>第595话 抓住MASTER 海贼同盟开始作战！<br>第596话 全灭危机 死亡怪物飞来<br>第597话 大激战 凯撒发动真正的能力！<br>第598话 劈开火海的武士！狐火锦卫门<br>第599话 冲击！神秘男人 维尔戈真正的身份<br>第600话 守护孩子们！袭来的Master的魔爪<br>第601话 震惊新世界 凯撒恶梦的实验<br>第602话 史上最邪恶的杀戮武器！死亡国度<br>第603话 反击开始！路飞?劳全部逃出<br>第604话 目标R栋！海贼同盟急行军！<br>第605话 达斯琪的泪 G-5的决死作战<br>第606话 背叛的中将！鬼竹之维尔戈<br>第607话 白热化激战！路飞对凯撒<br>第608话 幕后黑手 多福朗明哥出手<br>第609话 路飞冻死？恐怖的雪女</p><p>第610话 碰撞的双拳！两中将之战</p><p>第611话 小龙！桃之助现身</p><p>第612话 暴风雨中的死斗！草帽一伙儿VS雪女</p><p>第613话 奥义爆发！索隆最强的一刀流</p><p>第614话 保护朋友！莫查拼死奔逃</p><p>第615话 茶胡子的悲痛！路飞愤怒的一击</p><p>第616话 令人震惊的决斗！白猎VS维尔戈</p><p>第617话 击败凯撒！最强的灰熊铳</p><p>第618话 袭来！来自德雷斯罗萨的刺客</p><p>第619话 大爆发！无敌的弗兰奇将军<br>第620话 穷途末路！PUNK HAZARD大爆炸</p><p>第621话 捕获凯撒！将军炮炸裂</p><p>第622话 感动再会！桃之助与锦卫门</p><p>第623话 离别之时 庞克哈萨德出航</p><p>第624话 G5全灭！多佛朗明哥急袭<br>第625话 紧迫！青雉VS多弗朗明哥<br>第626话 消失的凯撒！海贼同盟出击<br>第627话 路飞命丧大海？海贼同盟瓦解<br>第628话 炸裂！路飞愤怒的铁拳</p><p>德雷斯罗萨篇</p><p>第629话 激震！撼动新世界的超级新闻<br>第630话 冒险！爱与热情的国度 德雷斯罗萨<br>第631话 狂热的漩涡 斗牛竞技场<br>第632话 危险的恋情 舞女维奥莱特<br>第633话 最强的无名战士！路西登场<br>第634话 海贼贵公子 卡文迪许<br>第635话 命运的再会 鬣狗贝拉米<br>第636话 超级新星！吃人的巴托洛米奥<br>第637话 群雄割据！B组白热化！<br>第638话 一击必杀！惊愕的国王之拳<br>第639话 斗鱼袭来！突破死亡铁桥<br>第640话 冒险！妖精之岛Green Bit<br>第641话 不为人知的世界 冬塔塔王国<br>第642话 世纪的谋略 多弗朗明哥行动！<br>第643话 惊天动地！大将滕虎的实力<br>第644话 愤怒的一击！巨人VS路西<br>第645话 破坏炮炸裂！路西命悬一线<br>第646话 传说中的海贼 首领青椒！<br>第647话 光与影 潜藏于德雷斯罗萨的阴影！<br>第648话 出击！传说中的英雄乌索兰德<br>第649话 激战之胜负 路西对青椒<br>第650话 路飞与 宿命的剑斗士蕾贝卡<br>第651话 守护到底！蕾贝卡和玩具军人<br>第652话 最后的激战区 D组开战<br>第653话 决战！乔拉对草帽一伙<br>第654话 美剑！白马的卡文迪许！<br>第655话 激烈冲突！香吉士VS多福朗明哥<br>第656话 蕾贝卡必杀剑！背水的剑舞<br>第657话 最强的战士 罗根VS蕾贝卡<br>第658话 震惊！玩具士兵的真正身份<br>第659话 战栗的过去！德雷斯罗萨的秘密<br>第660话 噩梦！德雷斯罗萨悲剧的一夜<br>第661话    七武海对决 罗VS多弗朗明哥    2014-09-14<br>第662话    两雄对峙！草帽VS天夜叉    2014-09-21<br>第663话    路飞惊愕 继承艾斯意志之人    2014-09-28<br>第664话    SOP作战开始 乌索兰度突击    2014-10-05<br>第665话    心潮澎湃 蕾贝卡VS斯雷曼    2014-10-12<br>第666话    决出胜者！？D区令人震惊的结果    2014-10-19<br>第667话    大将的决断 藤虎VS多弗朗明哥    2014-10-26<br>第668话    决赛开始 英雄迪亚曼蒂登场    2014-11-02<br>第669话    移动的城堡！最高干部琵卡出现！    2014-11-09<br>第670话    龙之爪炸裂！路西使出惊人一击！    2014-11-16<br>第671话    打倒砂糖 小人军突击！    2014-11-23<br>第672话    最后的光明 我们队长的秘密！    2014-11-30<br>第673话    破裂人 古拉迪乌斯大爆炸！    2014-12-07<br>第674话    骗子乌索兰度正在逃亡！    2014-12-14<br>第675话    命运中的邂逅 居鲁士和力库王    2014-12-21<br>第676话    作战失败！英雄乌索兰度逝世！？    2014-12-28<br>第677话    传说复活！居鲁士的全力一击    2015-01-11<br>第678话    火拳炸裂！烧烧果实力量复活    2015-01-18<br>第679话    飒爽登场 革命军参谋总长萨博！    2015-01-25<br>第680话    恶魔的陷阱 德雷斯罗萨歼灭作战    2015-02-01<br>第681话    悬赏5亿的男人 被盯上的乌索兰度！    2015-02-08<br>第682话    突破敌阵 路飞索隆开始反击    2015-02-15<br>第683话    大地轰鸣 破坏神巨大琵卡降临    2015-03-01<br>第684话    大集结！路飞和凶恶战士军团    2015-03-15<br>第685话    突飞猛进！路飞军团VS琵卡！    2015-03-22<br>第686话    冲击告白！罗对灵魂的热血誓言！    2015-03-29<br>第687话    大冲突！参谋总长萨博VS大将藤虎    2015-04-05<br>第688话    命悬一线 中了圈套的路飞！    2015-04-12<br>第689话    奋力逃脱！路飞起死回生的象枪    2015-04-19<br>第690话    共同战线 路飞通往胜利的突破口    2015-04-26<br>第691话    第二位武士 阵雨勘十郎登场    2015-05-03<br>第692话    激战琵卡战 索隆必杀一击！    2015-05-10<br>第693话    小人族的公主 被抓的曼雪莉    2015-05-17<br>第694话    不死之身！恐怖的人头玩具军团    2015-05-24<br>第695话    拼上性命！路飞是获胜的王牌    2015-05-31<br>第696话    泪眼相逢 蕾贝卡和居鲁士！    2015-06-07<br>第697话    一击必杀 拯救德雷斯罗萨的男人    2015-06-14<br>第698话    愤怒爆发 路飞和罗最强的秘计    2015-06-21<br>第699话    高贵一族 多弗朗明哥的真正身份！    2015-06-28<br>第700话    究极的力量 手术果实的秘密！    2015-07-05<br>第701话    悲伤的记忆 白色城镇的少年罗！    2015-07-12<br>第702话    天龙人！多弗壮绝的过去    2015-07-19<br>第703话    苦难之路 罗和柯拉松的命之旅程    2015-08-02<br>第704话    时限迫近！夺取手术果实！    2015-08-09<br>第705话    觉悟之时 柯拉松告别的笑容！    2015-08-16<br>第706话    冲吧 罗 温柔男人最后的战斗！    2015-08-23<br>第707话    冲向自由！罗 注射射击爆发    2015-08-30<br>第708话    狂热之战 罗VS多弗朗明哥    2015-09-06<br>第709话    干部决斗 崇高的海尔丁    2015-09-13<br>第710话    爱之决战 新栋梁老蔡 VS BABY5    2015-09-20<br>第711话    男子汉的坚持 贝拉米最后的突击！    2015-09-27<br>第712话    疾风怒涛 哈库巴VS德林杰    2015-10-04<br>第713话    致敬神拳 屏障屏障手枪发动！    2015-10-11<br>第714话    拯救治愈公主 曼雪莉！    2015-10-18<br>第715话    男子汉的决斗 赛尼奥尔爱的挽歌    2015-10-25<br>第716话    死亡星屑 迪亚曼蒂疾风骤雨般的猛攻    2015-11-01<br>第717话    雷之破坏剑！居鲁士愤怒的一击！    2015-11-08<br>第718话    大地横断 巨像琵卡的奇袭战！    2015-11-15<br>第719话    空中决战 索隆新必杀奥义爆发！    2015-11-22<br>第720话    永别了！贝拉米 告别的一击！    2015-11-29<br>第721话    罗战死 路飞愤怒的猛攻！    2015-12-06<br>第722话    执念之刃 逆袭的伽马刀！    2015-12-13<br>第723话    霸气冲突 路飞VS多弗朗明哥    2015-12-20<br>第724话    无法攻击 托雷波尔冲击的秘密    2015-12-27<br>第725话    愤怒爆发 全部由我来承担    2016-01-10<br>第726话    四档！惊异的弹力人！    2016-01-17<br>第727话    大逆袭！多弗朗明哥的觉醒！    2016-01-24<br>第728话    路飞！使尽全力的狮子火箭炮    2016-01-31<br>第729话    火焰龙王 将路飞的性命守护到底    2016-02-14<br>第730话    奇迹之泪 曼雪莉的战斗！    2016-02-21<br>第731话    生命的极限 阻止死之鸟笼！    2016-02-28<br>第732话    或生或死 命运的倒计时    2016-03-06<br>第733话    讨伐天 路飞愤怒的大猿王枪    2016-03-20<br>第734话    朝着自由！喜悦的德雷斯罗萨！    2016-03-27<br>第735话    前所未闻 大将藤虎冲击的决断！    2016-04-03<br>第736话    激烈暴走 极恶的世代出动！    2016-04-10<br>第737话    传说诞生 革命战士萨博的冒险！    2016-04-17<br>第738话    兄弟的羁绊 路飞?萨博重逢密谈    2016-04-24<br>第739话    最强的生物 四皇?百兽凯多    2016-05-01<br>第740话    藤虎出动 草帽一伙完全包围网    2016-05-08<br>第741话    非常事态 被拐走的蕾贝卡！    2016-05-15<br>第742话    父女的羁绊 居鲁士和蕾贝卡！    2016-05-22<br>第743话    男子汉的坚持 路飞VS藤虎 决一雌雄    2016-05-29<br>第744话    无处可逃 大将藤虎无情的追击！    2016-06-05<br>第745话    接纳酒 草帽大船团成立！    2016-06-12<br>第746话    群雄割据 狂暴的新世界怪物们    2016-06-19<br>第747话    动画原创　银之要塞 路飞和巴托的大冒险    2016-06-26<br>第748话    动画原创　地下迷宫 路飞VS推车人    2016-07-03<br>第749话    动画原创　剑技白热 罗?索隆终于登场！    2016-07-10<br>第750话    动画原创　绝体绝命 路飞极限的灼热决战    2016-07-17</p><p>18th 佐乌篇<br>第751话    冒险开幕 到达梦幻之岛佐乌岛！    2016-07-31<br>第752话    新七武海 传说?白胡子的儿子登场    2016-08-07<br>第753话    拼死登象 巨象背上的大冒险！    2016-08-21<br>第754话    战斗开始 路飞VS毛皮族！    2016-08-21<br>第755话    卡鲁秋！草帽一伙重新团聚    2016-09-04<br>第756话    反击开始 卷眉毛一伙大活跃！    2016-09-11<br>第757话    威胁来袭 百兽海贼团杰克！    2016-09-25<br>第758话    日间之王 犬岚公爵登场！    2016-10-02<br>第759话    夜间之王 猫蝮蛇老大登场    2016-10-09<br>第760话    首都毁灭 卷眉毛一伙登陆！    2016-10-16<br>第761话    极限逼近 毛皮族和一伙的羁绊！    2016-10-23<br>第762话    恶童返乡 四皇BIG MOM的刺客    2016-10-30<br>第763话    失踪的真相 山治惊愕的请贴    2016-11-06<br>第764话    给伙计们 山治离别的纸条    2016-11-13<br>第765话    去见猫蝮蛇老大    2016-11-20<br>第766话    路飞决断 山治退出的危机！    2016-11-27<br>第767话    一触即发 犬和猫和武士！    2016-12-04<br>第768话    第三个人！忍者?雾之雷藏登场    2016-12-11<br>第769话    赤之石！通往大秘宝的路标    2016-12-18<br>第770话    和之国的秘密 光月家和历史正文    2016-12-25<br>第771话    男人的誓言 路飞和光月桃之助    2017-01-08<br>第772话    传说中的航海 犬和猫和海贼王！    2017-01-15<br>第773话    恶梦重现 不死之身杰克强袭    2017-01-22<br>第774话    佐乌防卫战 路飞和象主！    2017-01-29<br>第775话    拯救巨象 草帽急救大作战！    2017-02-05<br>第776话    离别的下象 夺回山治的出海！    2017-02-12<br>第777话    参加世界会议 薇薇公主和白星公主    2017-02-19<br>第778话    参加世界会议 蕾贝卡和樱花王国    2017-02-26<br>第779话    凯多再次来袭 威胁重重极恶的世代！    2017-03-05<br>第780话    动画原创　空腹战线 路飞和海军超新星！    2017-03-19<br>第781话    动画原创　执着的3人 草帽一伙大追击战！    2017-03-26<br>第782话    动画原创　恶魔之拳 决战！路飞VS古兰特    2017-04-02</p><p>19th 蛋糕岛篇<br>第783话    山治还乡 去BIG?MOM海域！    2017-04-09<br>第784话    0和4 遭遇！杰尔玛66    2017-04-16<br>第785话    剧毒的危机 路飞和蕾玖！    2017-04-23<br>第786话    万国！四皇BIG?MOM登场    2017-04-30<br>第787话    四皇之女 山治的未婚妻布琳    2017-05-07<br>第788话    大进击！思食病的MOM    2017-05-14<br>第789话    首都崩溃 BIG MOM和甚平    2017-05-21<br>第790话    四皇之城 到达蛋糕岛    2017-05-28<br>第791话    点心森林 路飞VS路飞！？    2017-06-04<br>第792话    妈妈的刺客 路飞和诱惑森林！    2017-06-11<br>第793话    海游国家 杰尔玛之王伽治    2017-06-18<br>第794话    父子对决 伽治VS山治！    2017-06-25<br>第795话    巨大的野心 BIG MOM与凯撒    2017-07-02<br>第796话    万国的真相 妈妈的恐怖能力！    2017-07-09<br>第797话    大干部！三将星克力架登场    2017-07-16<br>第798话    8亿之敌 路飞VS千手克力架    2017-07-23<br>第799话    全力对决 四档VS饼干果实能力    2017-07-30<br>第800话    1和2集合 文斯莫克家    2017-08-06<br>第801话    恩人之命 山治与主厨哲普    2017-08-13<br>第802话    恩人之命 山治与主厨哲普    2017-08-20<br>第803话    丢弃的过去 文斯莫克?山治    2017-08-27<br>第804话    向着东海出发 山治下定决心出海    2017-09-03<br>第805话    极限对决 路飞和无限饼干    2017-09-17<br>第806话    饱食之力 新4档坦克人！    2017-09-24<br>第807话    悲哀的决斗 路飞VS山治（前篇）    2017-10-01<br>第808话    悲哀的决斗 路飞VS山治（后篇）    2017-10-01<br>第809话    复仇的暴风雨 愤怒军团袭来！    2017-10-15<br>第810话    冒险结束 山治下定决心的求婚    2017-10-22<br>第811话    在此等待 路飞VS愤怒军团    2017-10-29<br>第812话    潜入城堡内 抢夺！路标历史正文    2017-11-05<br>第813话    因缘的对决 路飞与BIG MOM    2017-11-12<br>第814话    灵魂的呐喊 布鲁克 佩德洛 闪电作战    2017-11-19<br>第815话    再见了 布琳泪的决心    2017-11-26<br>第816话    左眼的渊源 佩德洛VS蛋蛋男爵    2017-12-03<br>第817话    烟蒂 山治的结婚前夜    2017-12-10<br>第818话    不屈的灵魂 布鲁克 VS BIG MOM    2017-12-17<br>第819话 母亲的愿望 杰尔玛的失败作品山治<br>第820话 狂奔向山治身边 路飞开始逆袭!<br>第821话 城内动乱 路飞前往约定之地<br>第822话 离别的决心 山治和草帽便当<br>第823话 四皇翻身 拯救布鲁克大作战<br>第824话 约定之地 路飞极限的单枪匹马厮杀<br>第825话 骗子 路飞和山治<br>第826话 山治复活 破坏吧 地狱的茶会<br>第827话 密会 路飞VS火焰坦克海贼团<br>第828话 死之协定 路飞 贝基联合军<br>第829话 路飞暗中行动 茶会即将开始 阴谋的结婚仪式<br>第830话 家人集结 宴会开始 地狱的茶会<br>第831话 假面夫妻 山治 布琳 登场<br>第832话 死亡之吻 四皇暗杀作战开始<br>第833话 归还酒杯 侠客甚平的了断<br>第834话 作战失败 发起反击的BIG MOM海贼团<br>第835话 奔跑吧山治 SOS 杰尔马66<br>第845话：布琳的决心 大起火!诱惑的森林<br>第846话：反击之雷，娜美和雷云宙斯<br>第847话：偶然的再会，山治和陷入恋爱的坏布琳<br>第848话：守护桑尼号 奋战！乔巴&amp;布鲁克</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;来点和技术无关的~&lt;br&gt;作为最爱的动漫，没有之一，整理的一点TV版目录，大海贼！&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://tokyle.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="One Piece" scheme="http://tokyle.com/tags/One-Piece/"/>
    
  </entry>
  
  <entry>
    <title>loadrunner判断接口返回</title>
    <link href="http://tokyle.com/2018/07/11/loadrunner%E5%88%A4%E6%96%AD%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E/"/>
    <id>http://tokyle.com/2018/07/11/loadrunner判断接口返回/</id>
    <published>2018-07-11T07:15:07.000Z</published>
    <updated>2018-07-12T01:42:34.338Z</updated>
    
    <content type="html"><![CDATA[<p>loadrunner判断前一个接口返回，执行第二个接口</p><a id="more"></a><p>Action()<br>{</p><pre><code>/*关联获取接口返回结果，true或者false*/web_reg_save_param(&quot;Text&quot;,&quot;LB=\&quot;result\&quot;:&quot;,&quot;RB=,&quot;,LAST);/*开始事务*/lr_start_transaction(&quot;01_api_1&quot;);web_custom_request(&quot;api_1&quot;,             &quot;URL=https://webapp-n2.test.com/api/test&quot;,              &quot;Method=GET&quot;,             &quot;TargetFrame=&quot;,             &quot;Resource=0&quot;,             &quot;Snapshot=t2.inf&quot;,            &quot;RecContentType=text/html&quot;,              LAST);     lr_end_transaction(&quot;01_api_1&quot;,LR_AUTO);/*测试一下输出，用error只是因为会标红。。*/lr_error_message(lr_eval_string(&quot;{Text}&quot;));/*判断第一个接口返回是否为true*/if (strcmp(lr_eval_string(&quot;{Text}&quot;),&quot;true&quot;) == 0){    lr_start_transaction(&quot;01_api_2&quot;);        web_reg_find(&quot;Text=false&quot;,            LAST);        web_custom_request(&quot;api_2&quot;,             &quot;URL=https://webapp-n2.test.com/api/test&quot;,              &quot;Method=GET&quot;,             &quot;TargetFrame=&quot;,             &quot;Resource=0&quot;,             &quot;Snapshot=t2.inf&quot;,            &quot;RecContentType=text/html&quot;,              LAST);        lr_end_transaction(&quot;01_api_2&quot;,LR_AUTO);        lr_output_message(&quot;第二接口完&quot;);}else{        lr_error_message(&quot;请求失败&quot;);        return 0;};return 0;</code></pre><p>}</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;loadrunner判断前一个接口返回，执行第二个接口&lt;/p&gt;
    
    </summary>
    
      <category term="性能测试" scheme="http://tokyle.com/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="loadrunner" scheme="http://tokyle.com/tags/loadrunner/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter压测socket close异常</title>
    <link href="http://tokyle.com/2018/07/06/Jmeter%E5%8E%8B%E6%B5%8Bsocket-close%E5%BC%82%E5%B8%B8/"/>
    <id>http://tokyle.com/2018/07/06/Jmeter压测socket-close异常/</id>
    <published>2018-07-06T06:26:11.000Z</published>
    <updated>2018-07-06T06:27:48.118Z</updated>
    
    <content type="html"><![CDATA[<p>jmeter压测执行过程中报错：java.net.SocketException: Socket operation on nonsocket: connect</p><a id="more"></a><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>使用jmeter进行接口压测，<code>http请求</code>，默认是勾选了<code>use keepAlive</code>，但是在<code>Jmeter.properties</code>配置文件中的时间设置默认是注释的状态，也就是说，一旦发生连接空闲，则立刻断开，导致压测过程中出现事务失败。</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>在网上直接搜这个报错，有几个解决办法，说实话，有点懒，没看原理，就都照样该了下，重启jmeter之后就报错了。</p><h4 id="Jmeter-properties"><a href="#Jmeter-properties" class="headerlink" title="Jmeter.properties"></a>Jmeter.properties</h4><p>取消注释：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hc.parameters.file=hc.parameters</span><br></pre></td></tr></table></figure></p><p>取消注释并修改：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpclient4.retrycount=1</span><br></pre></td></tr></table></figure></p><p>取消注释并修改：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpclient4.idletimeout=300</span><br></pre></td></tr></table></figure></p><p>单位毫秒</p><h4 id="hc-parameters"><a href="#hc-parameters" class="headerlink" title="hc.parameters"></a>hc.parameters</h4><p>取消注释并修改：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.connection.stalecheck$Boolean=true</span><br></pre></td></tr></table></figure></p><p>网上普遍的说法是<code>httpclient4.idletimeout=300</code>，其他几个是科学上网，在外网找到的。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><blockquote><p><a href="https://wiki.apache.org/jmeter/JMeterSocketClosed" target="_blank" rel="noopener">Jmeter Wiki</a><br><a href="https://blog.csdn.net/miss_hua/article/details/50549606" target="_blank" rel="noopener">Jmeter-Socket closed</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jmeter压测执行过程中报错：java.net.SocketException: Socket operation on nonsocket: connect&lt;/p&gt;
    
    </summary>
    
      <category term="性能测试" scheme="http://tokyle.com/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="Jmeter" scheme="http://tokyle.com/tags/Jmeter/"/>
    
  </entry>
  
  <entry>
    <title>Vultr安装锐速</title>
    <link href="http://tokyle.com/2018/07/05/Vultr%E5%AE%89%E8%A3%85%E9%94%90%E9%80%9F/"/>
    <id>http://tokyle.com/2018/07/05/Vultr安装锐速/</id>
    <published>2018-07-05T04:30:03.000Z</published>
    <updated>2018-07-10T09:49:56.513Z</updated>
    
    <content type="html"><![CDATA[<p>Vultr专用破解版锐速安装</p><a id="more"></a><p>因为Vultr机房都位于国外，当上网高峰期来临时，连接速度会比较慢，所以就需要安装锐速来加速连接。</p><h3 id="安装shadowsocks"><a href="#安装shadowsocks" class="headerlink" title="安装shadowsocks"></a>安装shadowsocks</h3><p>因为SSR搭建完成之后，在手机和mac上都找不到对应的客户端用，没办法，降级到比较老的<code>shadowsocks</code><br>安装方式类似：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</span><br><span class="line">chmod +x shadowsocks.sh</span><br><span class="line">./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</span><br></pre></td></tr></table></figure></p><p>这次只要配置个密码和端口，再选个加密方式即可~</p><h3 id="配置TCP-Fast-Open"><a href="#配置TCP-Fast-Open" class="headerlink" title="配置TCP Fast Open"></a>配置TCP Fast Open</h3><p>搭建完成shadowsocks之后，为了优化连接，可以增加一点配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.local</span><br></pre></td></tr></table></figure></p><p>最后一行增加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 3 &gt; /proc/sys/net/ipv4/tcp_fastopen</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>最后一行增加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.tcp_fastopen = 3</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><p>修改<code>&quot;fast_open&quot;:true</code></p><h3 id="多端口配置"><a href="#多端口配置" class="headerlink" title="多端口配置"></a>多端口配置</h3><p>修改<code>/etc/shadowsocks.json</code>文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;:&quot;0.0.0.0&quot;,</span><br><span class="line">    &quot;local_address&quot;:&quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;local_port&quot;:1080,</span><br><span class="line">    &quot;port_password&quot;:&#123;</span><br><span class="line">        &quot;8088&quot;:&quot;xxx&quot;,</span><br><span class="line">        &quot;8089&quot;:&quot;xxx&quot;,</span><br><span class="line">        &quot;32123&quot;:&quot;xxx&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;timeout&quot;:300,</span><br><span class="line">    &quot;method&quot;:&quot;aes-256-cfb&quot;,</span><br><span class="line">    &quot;fast_open&quot;:true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>重启：<code>/etc/init.d/shadowsocks restart</code></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1、安装锐速需降级系统内核，而安装 Google BBR 则需升级系统内核，故两者不能同时安装。</p><p>2、安装锐速需降级系统内核，有可能造成系统不稳定，故不建议将其应用在重要的生产环境中。</p><p>3、本教程只支持 CentOS6 x64 及 CentOS7 x64 系统，不支持任何 Debian &amp; Ubuntu 系统！</p><h3 id="系统判断"><a href="#系统判断" class="headerlink" title="系统判断"></a>系统判断</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure><p>1、结果以 2 开头，例如 2.6.32-696.18.7.el6.x86_64。</p><p>这种输出结果说明我们的服务器为 CentOS6 x64 系统，大家直接查看第三步进行锐速安装即可。</p><p>2、结果以 3 开头，例如 3.10.0-693.11.6.el7.x86_64。</p><p>这种输出结果说明我们的服务器为 CentOS7 x64 系统，大家直接查看第四步进行锐速安装即可。</p><p>3、结果以 4 开头，例如 4.12.10-1.el7.elrepo.x86_64。</p><p>这种输出结果说明我们的服务器已经安装 Google BBR 拥塞控制算法，此时已经无法继续安装锐速。</p><h3 id="Centos-X64安装锐速"><a href="#Centos-X64安装锐速" class="headerlink" title="Centos X64安装锐速"></a>Centos X64安装锐速</h3><p>执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O rskernel.sh https://raw.githubusercontent.com/uxh/shadowsocks_bash/master/rskernel.sh &amp;&amp; bash rskernel.sh</span><br></pre></td></tr></table></figure></p><p>直接回车，安装完成系统会自动重启<br>系统重启之后，重新连接服务器，执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools -y &amp;&amp; wget --no-check-certificate -O appex.sh https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh &amp;&amp; bash appex.sh install</span><br></pre></td></tr></table></figure></p><p>遇到选择直接回车，完成安装，并且开机启动</p><p><a href="https://www.vultrcn.com/7.html" target="_blank" rel="noopener">参考连接</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vultr专用破解版锐速安装&lt;/p&gt;
    
    </summary>
    
      <category term="skill" scheme="http://tokyle.com/categories/skill/"/>
    
    
      <category term="Vultr" scheme="http://tokyle.com/tags/Vultr/"/>
    
  </entry>
  
  <entry>
    <title>zabbix3.4配置邮件告警</title>
    <link href="http://tokyle.com/2018/06/28/zabbix3-4%E9%85%8D%E7%BD%AE%E9%82%AE%E4%BB%B6%E5%91%8A%E8%AD%A6/"/>
    <id>http://tokyle.com/2018/06/28/zabbix3-4配置邮件告警/</id>
    <published>2018-06-28T03:31:45.000Z</published>
    <updated>2018-06-28T03:33:02.830Z</updated>
    
    <content type="html"><![CDATA[<p>zabbix3.4配置邮件告警<br>使用zabbix配置邮件告警，当系统资源到达触发器设定阈值，邮件报警</p><a id="more"></a><h3 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h3><h4 id="添加监控项"><a href="#添加监控项" class="headerlink" title="添加监控项"></a>添加监控项</h4><p>测试用模板是zabbix自带的<code>Template OS Linux</code>模板，模板中原先就有监控CPU的监控项，这边测试就用<code>CPU idle time</code>（获取服务器空闲CPU百分比），如果当前安装的zabbix没有该监控项，就新建一个：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">名称： CPU $2 time</span><br><span class="line">类型：Zabbix 客户端</span><br><span class="line">键值：system.cpu.util[,idle]</span><br><span class="line">信息类型：浮点数</span><br><span class="line">单位：%</span><br><span class="line">更新间隔：1m</span><br><span class="line">自定义时间间隔：灵活</span><br></pre></td></tr></table></figure></p><p>保存即可</p><h4 id="添加触发器"><a href="#添加触发器" class="headerlink" title="添加触发器"></a>添加触发器</h4><p>添加完监控项之后，就要为该监控项添加触发器，当达到设定的阈值时，报警。<br>配置-模板-找到Template OS Linux，点击触发器，创建新触发器。测试想要监控服务器的空闲CPU，当空闲CPU小于50%，时就会告警（为了效果明显，设大点。。）触发器信息如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">名称：CPU usr% gt 50%</span><br><span class="line">严重性：严重</span><br><span class="line">表达式：&#123;Template OS Linux:system.cpu.util[,idle].avg(1m)&#125;&lt;50（表达式可以自己写，也可以用构造器，格式挺简单）</span><br></pre></td></tr></table></figure></p><p>其他默认即可</p><h4 id="添加图形"><a href="#添加图形" class="headerlink" title="添加图形"></a>添加图形</h4><p>为了方便观察，添加一个cpu空闲率的图形：<br>配置-模板-选择Template OS Linux-图形，创建图形；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">名称：CPU空闲百分比</span><br><span class="line">纵轴Y最小值MIN：可计算的</span><br><span class="line">纵轴最大值：可计算的</span><br><span class="line">监控项：Template OS Linux：CPU idle time</span><br></pre></td></tr></table></figure></p><p>保存，完成。<br>可以试验下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;scale=5000; 4*a(1)&quot; | bc -l -q</span><br></pre></td></tr></table></figure></p><p>计算圆周率后5000位，手工在服务器top可以看到cpu使用率到80%以上（小破虚拟机，纯试验用，1C），在<code>监测中-仪表板-问题</code>可以看见该问题告警。</p><h3 id="邮件配置"><a href="#邮件配置" class="headerlink" title="邮件配置"></a>邮件配置</h3><h4 id="sendmail"><a href="#sendmail" class="headerlink" title="sendmail"></a>sendmail</h4><p>邮件发送需要安装几个小工具（可能本地装系统就已经装完了）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install sendmail</span><br><span class="line">systemctl start sendmail.service</span><br></pre></td></tr></table></figure></p><h4 id="mailx"><a href="#mailx" class="headerlink" title="mailx"></a>mailx</h4><p>安装邮件发送工具<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mailx</span><br></pre></td></tr></table></figure></p><h4 id="配置zabbix服务外部邮箱"><a href="#配置zabbix服务外部邮箱" class="headerlink" title="配置zabbix服务外部邮箱"></a>配置zabbix服务外部邮箱</h4><p>编辑文件<code>/etc/mail.rc</code>（没有就新建），添加以下内容(以163邮箱为例)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set from=xxx@163.com               #邮箱账号</span><br><span class="line">set smtp=smtp.163.com              #smtp服务器</span><br><span class="line">set smtp-auth-user=xxx@163.com     #邮箱帐号</span><br><span class="line">set smtp-auth-password=xxx      #邮箱密码(163邮箱密码是你客户端登录的密码，不是mail.163.com登录的密码)</span><br><span class="line">set smtp-auth=login</span><br></pre></td></tr></table></figure></p><p>配置完成，测试一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;zabbix test...&quot; |mail -s &quot;zabbixssss&quot; xxx@163.com</span><br></pre></td></tr></table></figure></p><p>进入邮箱，可以看见收到一封测试邮件~</p><h4 id="文件发送脚本"><a href="#文件发送脚本" class="headerlink" title="文件发送脚本"></a>文件发送脚本</h4><p>zabbix提供了几种方式来发送告警信息，这边选择用脚本，在<code>zabbix_server.conf</code>文件中有定义脚本保存路径，例如我的测试服务器上的<code>/etc/zabbix_server.conf</code>中大约在第490行有定义（你也可以注释掉，自己加）:<code>AlertScriptsPath=/usr/lib/zabbix/alertscripts</code></p><p>进入<code>/usr/lib/zabbix/alertscripts</code>文件夹，创建邮件发送脚本<code>sendmail.sh</code>，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">messages=`echo $3 | tr &apos;\r\n&apos; &apos;\n&apos;`</span><br><span class="line">subject=`echo $2 | tr &apos;\r\n&apos; &apos;\n&apos;`</span><br><span class="line">echo &quot;$&#123;messages&#125;&quot; | mail -s &quot;$&#123;subject&#125;&quot; $1 &gt;&gt;/tmp/sendmail.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure></p><p>需要注意的是<code>/tmp/sendmail.log</code>这个日志文件，需要有写和执行的权限，如果不放心，直接chmod 777 /tmp/sendmail.log即可。</p><p>可以用脚本测试一下邮件发送：<code>sh sendmail.sh xxxx@163.com &quot;zabbix  cesscdssss&quot; &quot;这是内容。。。&quot;</code></p><h3 id="告警设置"><a href="#告警设置" class="headerlink" title="告警设置"></a>告警设置</h3><h4 id="报警媒介类型"><a href="#报警媒介类型" class="headerlink" title="报警媒介类型"></a>报警媒介类型</h4><p>进入zabbix web，管理-报警媒介类型，点击创建媒体类型，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">名称： sendmail</span><br><span class="line">类型：脚本</span><br><span class="line">脚本名称：sendmail.sh</span><br><span class="line">脚本参数：  </span><br><span class="line">&#123;ALERT.SENDTO&#125;</span><br><span class="line">&#123;ALERT.SUBJECT&#125;</span><br><span class="line">&#123;ALERT.MESSAGE&#125;</span><br><span class="line">勾选已启用</span><br></pre></td></tr></table></figure></p><p>点击新增。</p><h4 id="用户添加媒介"><a href="#用户添加媒介" class="headerlink" title="用户添加媒介"></a>用户添加媒介</h4><p>管理-用户，可以使用原来的管理员账号，也可以创建一个用户：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">别名：user</span><br><span class="line">群组：zabbix administrators</span><br></pre></td></tr></table></figure></p><p>报警媒介，点击添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">类型：sendmail</span><br><span class="line">收件人：xxxx@163.com</span><br><span class="line">当启用时：1-7,00:00-24:00（24小时全年无休~）</span><br><span class="line">剩下全勾上结束</span><br></pre></td></tr></table></figure></p><p>点击添加，保存用户。</p><h4 id="创建动作"><a href="#创建动作" class="headerlink" title="创建动作"></a>创建动作</h4><p>配置-动作，创建动作：<br>动作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">名称：自己起，monitor cpu</span><br></pre></td></tr></table></figure></p><p>操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">默认操作步骤持续时间：1h</span><br><span class="line">默认标题：故障&#123;TRIGGER.STATUS&#125;,服务器:&#123;HOSTNAME1&#125;发生: &#123;TRIGGER.NAME&#125;故障!</span><br><span class="line">消息内容：</span><br><span class="line">告警主机:&#123;HOSTNAME1&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息: &#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目:&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情:&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;:&#123;ITEM.VALUE1&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br><span class="line">操作，新增发送消息给用户，选择之前创建的user，点击新增</span><br></pre></td></tr></table></figure></p><p>恢复操作（系统恢复之后的邮件提示）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">默认标题：恢复&#123;TRIGGER.STATUS&#125;, 服务器:&#123;HOSTNAME1&#125;: &#123;TRIGGER.NAME&#125;已恢复!</span><br><span class="line">消息内容：</span><br><span class="line">告警主机:&#123;HOSTNAME1&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息: &#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目:&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情:&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;:&#123;ITEM.VALUE1&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br><span class="line">操作，添加发送消息给用户，选择创建的user，点击新增</span><br></pre></td></tr></table></figure></p><p>这样就完工了！！！</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>在服务器，执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;scale=10000; 4*a(1)&quot; | bc -l -q</span><br></pre></td></tr></table></figure></p><p>配置的邮箱就会收到邮件告警：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">故障PROBLEM,服务器:Zabbix server发生: CPU user% gt 50故障!</span><br><span class="line"></span><br><span class="line">告警主机:Zabbix server </span><br><span class="line">告警时间:2018.06.28 10:23:19</span><br><span class="line">告警等级:High</span><br><span class="line">告警信息: CPU user% gt 50</span><br><span class="line">告警项目:system.cpu.util[,idle]</span><br><span class="line">问题详情:CPU idle time:3.64 %</span><br><span class="line">当前状态:PROBLEM:3.64 %</span><br><span class="line">事件ID:110</span><br></pre></td></tr></table></figure></p><p>在<code>报表-动作日志</code>，可以看见报警日志；<br>服务器恢复之后，会收到恢复的邮件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">恢复OK, 服务器:Zabbix server: CPU user% gt 50已恢复!</span><br><span class="line"></span><br><span class="line">告警主机:Zabbix server</span><br><span class="line">告警时间:2018.06.28 10:23:19</span><br><span class="line">告警等级:High</span><br><span class="line">告警信息: CPU user% gt 50</span><br><span class="line">告警项目:system.cpu.util[,idle]</span><br><span class="line">问题详情:CPU idle time:90.08 %</span><br><span class="line">当前状态:OK:90.08 %</span><br><span class="line">事件ID:110</span><br></pre></td></tr></table></figure></p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><blockquote><p><a href="https://blog.csdn.net/weixin_37998647/article/details/78931163" target="_blank" rel="noopener">zabbix配置监控项，触发器</a><br><a href="http://blog.51cto.com/12098963/2092762" target="_blank" rel="noopener">zabbix3.2.6部署邮件报警</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;zabbix3.4配置邮件告警&lt;br&gt;使用zabbix配置邮件告警，当系统资源到达触发器设定阈值，邮件报警&lt;/p&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="Centos7" scheme="http://tokyle.com/tags/Centos7/"/>
    
      <category term="zabbix3.4" scheme="http://tokyle.com/tags/zabbix3-4/"/>
    
  </entry>
  
  <entry>
    <title>zabbix3.4监控linux内存</title>
    <link href="http://tokyle.com/2018/06/27/zabbix3-4%E7%9B%91%E6%8E%A7linux%E5%86%85%E5%AD%98/"/>
    <id>http://tokyle.com/2018/06/27/zabbix3-4监控linux内存/</id>
    <published>2018-06-27T08:32:17.000Z</published>
    <updated>2018-06-27T08:33:21.464Z</updated>
    
    <content type="html"><![CDATA[<p>zabbix3.4监控linux内存情况</p><a id="more"></a><h3 id="linux内存"><a href="#linux内存" class="headerlink" title="linux内存"></a>linux内存</h3><p>在linux下命令行可以直接获取当前系统的内存信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/meminfo</span><br></pre></td></tr></table></figure></p><p>展示如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">MemTotal:         997948 kB</span><br><span class="line">MemFree:           82436 kB</span><br><span class="line">MemAvailable:     122756 kB</span><br><span class="line">Buffers:               0 kB</span><br><span class="line">Cached:           155512 kB</span><br><span class="line">SwapCached:        62072 kB</span><br><span class="line">Active:           352832 kB</span><br><span class="line">Inactive:         354784 kB</span><br><span class="line">Active(anon):     271604 kB</span><br><span class="line">Inactive(anon):   284732 kB</span><br><span class="line">Active(file):      81228 kB</span><br><span class="line">Inactive(file):    70052 kB</span><br><span class="line">Unevictable:           0 kB</span><br><span class="line">Mlocked:               0 kB</span><br><span class="line">SwapTotal:       2097148 kB</span><br><span class="line">SwapFree:        1329916 kB</span><br><span class="line">Dirty:                12 kB</span><br><span class="line">Writeback:             0 kB</span><br><span class="line">AnonPages:        503976 kB</span><br><span class="line">Mapped:            34672 kB</span><br><span class="line">Shmem:              4232 kB</span><br><span class="line">Slab:              81628 kB</span><br><span class="line">SReclaimable:      33496 kB</span><br><span class="line">SUnreclaim:        48132 kB</span><br><span class="line">KernelStack:        8432 kB</span><br><span class="line">PageTables:        43468 kB</span><br><span class="line">NFS_Unstable:          0 kB</span><br><span class="line">Bounce:                0 kB</span><br><span class="line">WritebackTmp:          0 kB</span><br><span class="line">CommitLimit:     2596120 kB</span><br><span class="line">Committed_AS:   10619316 kB</span><br><span class="line">VmallocTotal:   34359738367 kB</span><br><span class="line">VmallocUsed:      190780 kB</span><br><span class="line">VmallocChunk:   34359310332 kB</span><br><span class="line">HardwareCorrupted:     0 kB</span><br><span class="line">AnonHugePages:     38912 kB</span><br><span class="line">CmaTotal:              0 kB</span><br><span class="line">CmaFree:               0 kB</span><br><span class="line">HugePages_Total:       0</span><br><span class="line">HugePages_Free:        0</span><br><span class="line">HugePages_Rsvd:        0</span><br><span class="line">HugePages_Surp:        0</span><br><span class="line">Hugepagesize:       2048 kB</span><br><span class="line">DirectMap4k:       89984 kB</span><br><span class="line">DirectMap2M:      958464 kB</span><br></pre></td></tr></table></figure></p><h3 id="zabbix自定义监控项"><a href="#zabbix自定义监控项" class="headerlink" title="zabbix自定义监控项"></a>zabbix自定义监控项</h3><p>zabbix在<code>/etc/zabbix/zabbix_agentd.d/userparameter_mysql.conf</code>中增加监控内存的item：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 获取内存</span><br><span class="line">UserParameter=memory.usage[*],/bin/cat /proc/meminfo | awk &apos;/^$1:/&#123;print $$2&#125;&apos;</span><br></pre></td></tr></table></figure></p><p>重启zabbix-agent：<code>systemctl restart zabbix-agent</code><br>使用zabbix_get查看数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zabbix_get -s 192.168.85.132 -k memory.usage[Active]</span><br></pre></td></tr></table></figure></p><p>可以获取到当前active内存：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost zabbix_agentd.d]# zabbix_get -s 192.168.85.132 -k memory.usage[Active]</span><br><span class="line">337468</span><br></pre></td></tr></table></figure></p><h3 id="zabbix-web配置"><a href="#zabbix-web配置" class="headerlink" title="zabbix web配置"></a>zabbix web配置</h3><p>进入zabbix web页面，配置-模板，创建模板，创建一个<code>linux meninfo</code>的模板，群组选择<code>Linux servers</code>;<br>点击监控项，创建该模板下面的监控项，示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">名称：Meminfo Active memory</span><br><span class="line">类型：Zabbix 客户端</span><br><span class="line">键值：memory.usage[Active]</span><br><span class="line">信息类型：数值（无正负）</span><br><span class="line">更新间隔：1m</span><br></pre></td></tr></table></figure></p><p>类似的创建几个你需要关注的监控项；<br>点击图形，创建图形，输入图形名称，添加监控项，完成。</p><h3 id="添加模板"><a href="#添加模板" class="headerlink" title="添加模板"></a>添加模板</h3><p>配置-主机，选择主机，点击模板，在<code>链接指示器</code>中搜索上步创建的模板，点击添加，点击更新。<br>监测中-最新数据，可以查看到前面创建的监控项的最新数据；检测中-图形，图形选择创建的图形，可以看见实时的内存信息。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;zabbix3.4监控linux内存情况&lt;/p&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="zabbix3.4" scheme="http://tokyle.com/tags/zabbix3-4/"/>
    
      <category term="memory" scheme="http://tokyle.com/tags/memory/"/>
    
  </entry>
  
  <entry>
    <title>zabbix3.4监控mysql5.7</title>
    <link href="http://tokyle.com/2018/06/27/zabbix3-4%E7%9B%91%E6%8E%A7mysql5-7/"/>
    <id>http://tokyle.com/2018/06/27/zabbix3-4监控mysql5-7/</id>
    <published>2018-06-27T05:53:18.000Z</published>
    <updated>2018-06-27T05:56:21.029Z</updated>
    
    <content type="html"><![CDATA[<p>zabbix3.4监控mysql5.7</p><a id="more"></a><h3 id="zabbix-agent"><a href="#zabbix-agent" class="headerlink" title="zabbix_agent"></a>zabbix_agent</h3><p>尝试使用zabbix3.4监控mysql5.7，首先需要在mysql所在服务器，安装agent，安装方法很简单：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install zabbix-agent</span><br></pre></td></tr></table></figure></p><p>安装完成之后在本地服务器下会有zabbix-agent的配置相关生成（本地测试用的centos7，生成目录在<code>/etc/zabbix</code>下）</p><h3 id="配置MySQL"><a href="#配置MySQL" class="headerlink" title="配置MySQL"></a>配置MySQL</h3><p>首先，为了避免接下来可能出现的把数据库账号密码写死在命令行中的情况，可以先在MySQL配置文件中配置一下，<code>/etc/my.cnf</code>文件中新增配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[mysqladmin] </span><br><span class="line">user=zabbix</span><br><span class="line">password=11111</span><br></pre></td></tr></table></figure></p><p>这样在执行<code>/usr/bin/mysqladmin -uuser -ppwd -Pport -hhost ping</code>时候就不用加上用户名密码了，由于zabbix-agent也是安装在本机，所以该命令在配置完mysql账密之后可以简化为<code>mysqladmin ping</code></p><h3 id="配置zabbix-agent"><a href="#配置zabbix-agent" class="headerlink" title="配置zabbix-agent"></a>配置zabbix-agent</h3><h4 id="zabbix-agentd-conf"><a href="#zabbix-agentd-conf" class="headerlink" title="zabbix_agentd.conf"></a>zabbix_agentd.conf</h4><p>配置zabbix-agent的文件是<code>/etc/zabbix/zabbix_agentd.conf</code>，所有需要的修改都在这里面执行，列一下可能用到的修改项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Server=192.168.85.132(大约97行)</span><br><span class="line">ServerActive=192.168.85.132（大约138行）</span><br><span class="line">Hostname=Zabbix server（大约149行）</span><br><span class="line">Include=/etc/zabbix/zabbix_agentd.d/*.conf（大约269行（如果是注释状态，释放即可））</span><br><span class="line">UnsafeUserParameters=1（大约288行，默认是0，修改为1）</span><br></pre></td></tr></table></figure></p><h4 id="userparameter-mysql-conf"><a href="#userparameter-mysql-conf" class="headerlink" title="userparameter_mysql.conf"></a>userparameter_mysql.conf</h4><p>在上步<code>Include=/etc/zabbix/zabbix_agentd.d/*.conf</code>释放之后，zabbix-agent可以从指定的文件夹（zabbix_agentd.d）中读取配置，该文件夹中默认就有<code>userparameter_mysql.conf</code>文件，里面就是zabbix用到的监控的item（监控项），每个监控项写一行，创建监控项格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UserParameter=&lt;key&gt;,&lt;shell command&gt;</span><br><span class="line">或者 </span><br><span class="line">UserParameter=&lt;key&gt;,&lt;script dir&gt;</span><br></pre></td></tr></table></figure></p><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UserParameter=mysql.version,mysql -V</span><br><span class="line">UserParameter=mysql.status[*],/etc/zabbix/script/mysql/chk_mysql.sh $1</span><br></pre></td></tr></table></figure></p><p>第一条item，key是mysql.version，意思就是这是监控MySQL版本的一个item，后面的<code>mysql -V</code>是具体执行的shell命令，通过执行该命令获取MySQL的版本；<br>第二个item，key是mysql.status[*]，意思是该监控项监控的是，mysql的状态，通过执行<code>/etc/zabbix/script/mysql/chk_mysql.sh</code>shell 脚本来获取MySQL的各状态。</p><p>附上我的<code>userparameter_mysql.conf</code>配置（网上一堆这样的配置，我也是参考的）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UserParameter=mysql.version,mysql -V</span><br><span class="line">UserParameter=mysql.status[*],/etc/zabbix/script/mysql/chk_mysql.sh $1</span><br><span class="line">UserParameter=mysql.ping,mysqladmin ping | grep -c alive</span><br></pre></td></tr></table></figure></p><h4 id="chk-mysql-sh"><a href="#chk-mysql-sh" class="headerlink" title="chk_mysql.sh"></a>chk_mysql.sh</h4><p>上步，配置项中配置的是脚本文件的，就是将获取监控项的各个脚本写在一个文件中，避免userparameter_mysql.conf文件太杂太乱，如上步配置的，获取MySQL状态的脚本是<code>/etc/zabbix/script/mysql/chk_mysql.sh</code>默认安装的zabbix是没有该文件的，需要手动创建<br><code>mkdir -p /etc/zabbix/script/mysql</code>,<br><code>cd /etc/zabbix/script/mysql</code>,<br><code>vim chk_mysql.sh</code><br>完成创建脚本，编辑，附上我的脚本（来自互联网）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># -------------------------------------------------------------------------------</span><br><span class="line"># FileName:    check_mysql.sh</span><br><span class="line"># Revision:    1.0</span><br><span class="line"># Date:        2018/06/20</span><br><span class="line"># Author:      kyle</span><br><span class="line"># Email:       </span><br><span class="line"># Website:     </span><br><span class="line"># Description: </span><br><span class="line"># Notes:       ~</span><br><span class="line"># -------------------------------------------------------------------------------</span><br><span class="line"># Copyright:   </span><br><span class="line"># License:     GPL</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 主机地址/IP</span><br><span class="line">MYSQL_HOST=&apos;192.168.85.132&apos;</span><br><span class="line"></span><br><span class="line"># 端口</span><br><span class="line">MYSQL_PORT=&apos;3306&apos;</span><br><span class="line"></span><br><span class="line"># 数据连接</span><br><span class="line">MYSQL_CONN=&quot;/usr/bin/mysqladmin&quot;</span><br><span class="line"></span><br><span class="line"># 参数是否正确</span><br><span class="line">if [ $# -ne &quot;1&quot; ];then</span><br><span class="line">    echo &quot;arg error!&quot; </span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># 获取数据</span><br><span class="line">case $1 in</span><br><span class="line">    Uptime)</span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; status|cut -f2 -d&quot;:&quot;|cut -f1 -d&quot;T&quot;`</span><br><span class="line">        echo $result </span><br><span class="line">        ;;</span><br><span class="line">    Com_update)</span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_update&quot;|cut -d&quot;|&quot; -f3`</span><br><span class="line">        echo $result </span><br><span class="line">        ;;</span><br><span class="line">    Slow_queries)</span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; status |cut -f5 -d&quot;:&quot;|cut -f1 -d&quot;O&quot;`</span><br><span class="line">        echo $result </span><br><span class="line">        ;;</span><br><span class="line">    Com_select)</span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_select&quot;|cut -d&quot;|&quot; -f3`</span><br><span class="line">        echo $result </span><br><span class="line">                ;;</span><br><span class="line">    Com_rollback)</span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_rollback&quot;|cut -d&quot;|&quot; -f3`</span><br><span class="line">                echo $result </span><br><span class="line">                ;;</span><br><span class="line">    Questions)</span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; status|cut -f4 -d&quot;:&quot;|cut -f1 -d&quot;S&quot;`</span><br><span class="line">                echo $result </span><br><span class="line">                ;;</span><br><span class="line">    Com_insert)</span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_insert&quot;|cut -d&quot;|&quot; -f3`</span><br><span class="line">                echo $result </span><br><span class="line">                ;;</span><br><span class="line">    Com_delete)</span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_delete&quot;|cut -d&quot;|&quot; -f3`</span><br><span class="line">                echo $result </span><br><span class="line">                ;;</span><br><span class="line">    Com_commit)</span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_commit&quot;|cut -d&quot;|&quot; -f3`</span><br><span class="line">                echo $result </span><br><span class="line">                ;;</span><br><span class="line">    Bytes_sent)</span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Bytes_sent&quot; |cut -d&quot;|&quot; -f3`</span><br><span class="line">                echo $result </span><br><span class="line">                ;;</span><br><span class="line">    Bytes_received)</span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Bytes_received&quot; |cut -d&quot;|&quot; -f3`</span><br><span class="line">                echo $result </span><br><span class="line">                ;;</span><br><span class="line">    Com_begin)</span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_begin&quot;|cut -d&quot;|&quot; -f3`</span><br><span class="line">                echo $result </span><br><span class="line">                ;;</span><br><span class="line"></span><br><span class="line">        *)</span><br><span class="line">        echo &quot;Usage:$0(Uptime|Com_update|Slow_queries|Com_select|Com_rollback|Questions|Com_insert|Com_delete|Com_commit|Bytes_sent|Bytes_received|Com_begin)&quot; </span><br><span class="line">        ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure></p><p>脚本其实很简单，通过mysqladmin获取MySQL自带的计数器数值即可~</p><h3 id="zabbix-server"><a href="#zabbix-server" class="headerlink" title="zabbix-server"></a>zabbix-server</h3><p>进入zabbix web页面，Configuration-Hosts，选择主机，打开主机的配置页面，选择<code>Templates</code>（模板），在<code>Link new templates</code>栏输入MySQL，在跳转出的模板中选择<code>Template DB MySQL</code>，点击<code>add</code>，完成模板配置，然后回到服务器，重启agent端：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure></p><p>测试数据获取：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zabbix_get -s yourHostIp -k mysql.status[Com_insert]</span><br></pre></td></tr></table></figure></p><p>可以成功获取到数据。</p><h4 id="图形查看"><a href="#图形查看" class="headerlink" title="图形查看"></a>图形查看</h4><p>返回zabbix web端，在Monitoring-Graphs下可以看见配置完成的监控项的实时图形。</p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><p>以下是可能会遇见的问题：</p><h4 id="Using-a-password-on-the-command-line-interface-can-be-insecure"><a href="#Using-a-password-on-the-command-line-interface-can-be-insecure" class="headerlink" title="Using a password on the command line interface can be insecure."></a>Using a password on the command line interface can be insecure.</h4><p>首先是这个[warning]，这是因为在命令行中写死了数据库的用户名和密码，所以有这个不安全的提示；解决办法，只需要将数据库的账密添加到<code>/etc/my.cnf</code>中，并且在命令行中去掉账密即可。</p><h4 id="2539”-of-type-“string”-cannot-convert-value-to-numeric-type"><a href="#2539”-of-type-“string”-cannot-convert-value-to-numeric-type" class="headerlink" title="2539” of type “string”: cannot convert value to numeric type"></a>2539” of type “string”: cannot convert value to numeric type</h4><p>这个问题，很明显，是字符格式的问题，shell脚本获取的监控项数据，设置的为string类型，但是选择的zabbix绘图要求的item的数据类型是numeric类型，只要转换下格式即可；解决办法，Configuration-Templtes，点击items，跳转到item页面，选择item，点击开，编辑类型<code>Type of information</code>；具体的类型可以先通过<code>Configuration-Templtes-Graphs</code>查看。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;zabbix3.4监控mysql5.7&lt;/p&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="mysql" scheme="http://tokyle.com/tags/mysql/"/>
    
      <category term="zabbix3.4" scheme="http://tokyle.com/tags/zabbix3-4/"/>
    
  </entry>
  
  <entry>
    <title>zabbix配置</title>
    <link href="http://tokyle.com/2018/06/26/zabbix%E9%85%8D%E7%BD%AE/"/>
    <id>http://tokyle.com/2018/06/26/zabbix配置/</id>
    <published>2018-06-26T09:20:50.000Z</published>
    <updated>2018-06-26T09:22:29.871Z</updated>
    
    <content type="html"><![CDATA[<p>zabbix的一些常用配置</p><a id="more"></a><h3 id="zabbix-agent"><a href="#zabbix-agent" class="headerlink" title="zabbix-agent"></a>zabbix-agent</h3><p>首先，安装完zabbix-web之后，想要监控系统，还需要在系统安装一个<code>agent</code>端：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install zabbix-agent</span><br></pre></td></tr></table></figure></p><p>命令行安装即可，安装完成之后，可以在本地服务器下找到配置文件，我的是在:<code>/etx/zabbix</code>在：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zabbix_agentd.conf</span><br><span class="line">zabbix_agentd.d</span><br></pre></td></tr></table></figure></p><p>其中<code>zabbix_agentd.d</code>是文件夹，里面是具体的监控配置文件<code>userparameter_mysql.conf</code>，这个文件里面就是一系列zabbix可用的监控指标的配置，这个后面再专门写写zabbix的配置。</p><h3 id="zabbix-get"><a href="#zabbix-get" class="headerlink" title="zabbix_get"></a>zabbix_get</h3><p>zabbix有个工具：zabbix_get，可以用来获取监控指标，用法示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zabbix_get -s IP -k mysql.status[Com_insert]</span><br></pre></td></tr></table></figure></p><p>上面这条命令在配置文件配置完成的情况下，可以用来获取服务器上MySQL执行的insert数量。</p><h3 id="图像乱码问题"><a href="#图像乱码问题" class="headerlink" title="图像乱码问题"></a>图像乱码问题</h3><p>在第一次使用zabbix，图形显示，中文是一个个的方框，也就是乱码，这是因为zabbix的汉化不是很完全，可以手工替换字体来解决乱码问题。<br>首先在本地windows机器下拿到中文字体，例如楷体:<code>simkai.ttf</code>(文件路径：<code>C:\Windows\Fonts</code>)<br>然后把windows上下载完成的字体上传到zabbix服务器中，路径：<code>/usr/share/zabbix/fonts</code><br>该目录下本来有一个系统字体，并且软链接到zabbix-web，也就是页面显示的字体，现在要做的就是用自己上传的楷体替换到系统原来的字体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost fonts]# ll</span><br><span class="line">total 11512</span><br><span class="line">lrwxrwxrwx. 1 root root       33 Jun 26 15:46 graphfont.ttf -&gt; /etc/alternatives/zabbix-web-font</span><br></pre></td></tr></table></figure></p><p>首先是将系统原字体备份<code>mv graphfont.ttf graphfont.ttf.back</code><br>然后修改配置文件<code>/usr/share/zabbix/include/defines.inc.php</code><br>将文件中的<code>FONT_NAME</code>从原来的graphfont修改为<code>simkai</code>，一共有两处，修改完成之后页面上就可以看见乱码解决了~</p><p>（关于zabbix的东西，后面肯定是要写一个监控配置的，待续~~~）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;zabbix的一些常用配置&lt;/p&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="Centos7" scheme="http://tokyle.com/tags/Centos7/"/>
    
      <category term="zabbix3.4" scheme="http://tokyle.com/tags/zabbix3-4/"/>
    
  </entry>
  
  <entry>
    <title>计算机基础知识系列（一）</title>
    <link href="http://tokyle.com/2018/06/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://tokyle.com/2018/06/19/计算机基础知识系列（一）/</id>
    <published>2018-06-19T07:37:10.000Z</published>
    <updated>2018-06-21T06:25:16.632Z</updated>
    
    <content type="html"><![CDATA[<p>程序员基础，性能测试需要知道的一些底层概念（一）</p><a id="more"></a><h3 id="进程、线程、程序"><a href="#进程、线程、程序" class="headerlink" title="进程、线程、程序"></a>进程、线程、程序</h3><p><code>对操作系统来说，线程是最小的执行单元，进程是最小的资源管理单元</code>，线程和进程都是由系统内核管理。</p><h4 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h4><h5 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h5><p>程序被加载到内存中并准备执行，就是一个进程，它是操作系统动态执行的基本单元，在传统的操作系统中，进程既是基本的分配单元，也是基本的执行单元。<br>关于进程有两点需要注意：<br><strong>一、</strong>进程是一个实体。每一个进程都有它自己的地址空间，一般情况下，包括文本区域（text region）、数据区域（data region）和堆栈（stack region）。文本区域存储处理器执行的代码；数据区域存储变量和进程执行期间使用的动态分配的内存；堆栈区域存储着活动过程调用的指令和本地变量；<br><strong>二、</strong>进程是一个“执行中的程序”。程序是一个没有生命的实体，只有处理器赋予程序生命时，它才能成为一个活动的实体，我们称其为进程。</p><h5 id="进程状态"><a href="#进程状态" class="headerlink" title="进程状态"></a>进程状态</h5><p>进程有三个状态，<code>就绪-运行-阻塞</code>。就绪状态其实就是获取除CPU之外的所有资源，只要处理器分配资源就可以马上执行；运行状态就是获取了处理器分配的资源，开始运行程序；阻塞状态，当程序条件不够时，需要等待条件满足才能继续执行，例如I/O。</p><h4 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h4><p>程序其实本身没有任何运行的含义，程序是指令和数据的有序集合。</p><h4 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h4><h5 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h5><p>单个进程中执行中的每个任务就是一个线程，线程是进程中执行运算的最小单位。一个线程只能属于一个进程，但是一个进程可以拥有多个线程。多线程处理就是允许一个进程中在同一时刻执行多个任务。</p><h4 id="进程与线程的区别"><a href="#进程与线程的区别" class="headerlink" title="进程与线程的区别"></a>进程与线程的区别</h4><p>1，线程没有地址空间，线程包含在进程的地址空间中。线程上下文只包含一个堆栈、一个寄存器、一个优先权，线程文本包含在他的进程的文本片段中。同一进程中的多个线程共享代码段(代码和常量)，数据段(全局变量和静态变量)，扩展段(堆存储)。但是每个线程拥有自己的栈段，寄存器的内容（栈段又叫运行时段，用来存放所有局部变量和临时变量）。<br>2，线程在执行过程中与进程还是有区别的。每个独立的进程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。<br>3，从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。<br>4，线程和进程在使用上各有优缺点：线程执行开销小，但不利于资源的管理和保护；而进程正相反。<br>（进程就像火车，线程就是火车的车厢）</p><h3 id="多进程与多线程"><a href="#多进程与多线程" class="headerlink" title="多进程与多线程"></a>多进程与多线程</h3><h4 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h4><p>多线程，顾名思义，同时运行多个线程；多任务可以由多进程完成，也可以由一个进程内的多线程完成。</p><h5 id="线程状态"><a href="#线程状态" class="headerlink" title="线程状态"></a>线程状态</h5><p>首先，线程大致有五种状态:初始化，就绪，运行，阻塞，死亡；</p><h5 id="线程锁"><a href="#线程锁" class="headerlink" title="线程锁"></a>线程锁</h5><p>在多线程中，每个线程都有自己的资源，但是代码区是共享的，即每个线程都可以执行相同的函数。这可能带来的问题就是几个线程同时执行一个函数，导致数据的混乱，产生不可预料的结果，因此我们必须避免这种情况的发生。例如：有两个线程，同时操作一个列表， 列表中数值都是0，一个线程是更新（update），操作为从前往后顺序更新值为1；线程二为打印（print），操作为从后往前倒序打印列表，当两个线程同时操作列表时就会出现打印时一半0，一半1，出现了数据不同步，为了避免这样的情况，就引进了线程锁的概念。</p><p>锁有两种状态——锁定和未锁定。每当一个线程比如”update”要访问共享数据时，必须先获得锁定；如果已经有别的线程比如”print”获得锁定了，那么就让线程”update”暂停，也就是同步阻塞；等到线程”print”访问完毕，释放锁以后，再让线程”update”继续。经过这样的处理，打印列表时要么全部输出0，要么全部输出1，不会再出现一半0一半1的混乱数据。</p><h5 id="线程通信（条件变量）"><a href="#线程通信（条件变量）" class="headerlink" title="线程通信（条件变量）"></a>线程通信（条件变量）</h5><p>列表并不是一开始就有的；而是通过线程”create”创建的。如果”update”或者”print” 在”create”还没有运行的时候就访问列表，将会出现一个异常。使用锁可以解决这个问题，但是”update”和”print”将需要一个无限循环——他们不知道”create”什么时候会运行，让”create”在运行后通知”update”和”print”显然是一个更好的解决方案。于是，引入了条件变量。</p><p>条件变量允许线程比如”update”和”print”在条件不满足的时候（列表为None时）等待，等到条件满足的时候（列表已经创建）发出一个通知，告诉”update” 和”print”条件已经有了，你们该起床干活了；然后”update”和”print”才继续运行。</p><h5 id="线程运行和阻塞状态转换"><a href="#线程运行和阻塞状态转换" class="headerlink" title="线程运行和阻塞状态转换"></a>线程运行和阻塞状态转换</h5><p>阻塞有三种状态：<br>同步阻塞（锁定池）是指处于竞争锁定的状态，线程请求锁定时将进入这个状态，一旦成功获得锁定又恢复到运行状态；<br>等待阻塞（等待池）是指等待其他线程通知的状态，线程获得条件锁定后，调用“等待”将进入这个状态，一旦其他线程发出通知，线程将进入同步阻塞状态，再次竞争条件锁定；<br>而其他阻塞是指调用time.sleep()、anotherthread.join()或等待IO时的阻塞，这个状态下线程不会释放已获得的锁定。</p><h4 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h4><p>为啥会想看多进程这么个东西，那是因为，python说实话，有点坑的地方是，实质上python没有多线程。python虽然可以通过<code>threading</code>模块来实现多线程编程，但是Python的线程虽然是真正的线程，但解释器执行代码时，有一个GIL锁：Global Interpreter Lock，任何Python线程执行前，必须先获得GIL锁，然后，每执行100条字节码，解释器就自动释放GIL锁，让别的线程有机会执行。这个GIL全局锁实际上把所有线程的执行代码都给上了锁，所以，多线程在Python中只能交替执行，即使100个线程跑在100核CPU上，也只能用到1个核。而通常我们用的解释器是官方实现的CPython，要真正利用多核，除非重写一个不带GIL的解释器。所以使用python实现并发多线程，不太现实。。</p><p>不过即使如此，我们也可以使用多进程来实现多核任务，毕竟当前多核处理器满大街都是。</p><h5 id="实现多进程"><a href="#实现多进程" class="headerlink" title="实现多进程"></a>实现多进程</h5><p>首先，unix中有个fork()函数，这玩意就可以实现多进程，这函数产生的效果就是把当前进程复制一份，普通的函数调用，调用一次，返回一次，但是fork()调用一次，返回两次，因为操作系统自动把当前进程（称为父进程）复制了一份（称为子进程），然后，分别在父进程和子进程内返回。子进程永远返回0，而父进程返回子进程的ID。这样做的理由是，一个父进程可以fork出很多子进程，所以，父进程要记下每个子进程的ID，而子进程只需要调用getppid()就可以拿到父进程的ID。</p><p>python的os模块封装了fork()，可以很简单就实现创建子进程；但是由于windows系统没有fork()，在windows上就不能执行包含fork()调用的脚本，在windows上就用<code>multiprocessing</code>替代。</p><h5 id="multiprocessing-示例"><a href="#multiprocessing-示例" class="headerlink" title="multiprocessing 示例"></a>multiprocessing 示例</h5><p>使用<code>multiprocessing</code>模块进行多进程编程，可以支持跨平台。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">@Auther Kyle</span><br><span class="line">@Time 2018/6/19 13:10</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">from multiprocessing import Pool</span><br><span class="line">import os, time, random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def LongTimeTask(name):</span><br><span class="line">    print(&quot;Run task&#123;0&#125; &#123;1&#125;&quot;.format(name, os.getpid()))</span><br><span class="line">    start = time.time()</span><br><span class="line">    time.sleep(random.random() * 3)</span><br><span class="line">    end = time.time()</span><br><span class="line">    print(&quot;Task &#123;0&#125; runs &#123;1&#125; seconds.&quot;.format(name, (end - start)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    print(&quot;Parent process &#123;0&#125;&quot;.format(os.getpid()))</span><br><span class="line">    p = Pool(4)</span><br><span class="line">    for i in range(5):</span><br><span class="line">        p.apply_async(LongTimeTask, args=(i, ))</span><br><span class="line">    print(&quot;Waiting for all subprocesses done...&quot;)</span><br><span class="line">    p.close()</span><br><span class="line">    p.join()</span><br><span class="line">    print(&quot;All subprocess done&quot;)</span><br></pre></td></tr></table></figure></p><p>执行结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Parent process 1692</span><br><span class="line">Waiting for all subprocesses done...</span><br><span class="line">Run task0 4464</span><br><span class="line">Run task1 5516</span><br><span class="line">Run task2 2388</span><br><span class="line">Run task3 8540</span><br><span class="line">Task 3 runs 0.22301292419433594 seconds.</span><br><span class="line">Run task4 8540</span><br><span class="line">Task 1 runs 0.463026762008667 seconds.</span><br><span class="line">Task 2 runs 1.3660781383514404 seconds.</span><br><span class="line">Task 4 runs 1.2180695533752441 seconds.</span><br><span class="line">Task 0 runs 1.7631008625030518 seconds.</span><br><span class="line">All subprocess done</span><br></pre></td></tr></table></figure></p><h5 id="进程间通信"><a href="#进程间通信" class="headerlink" title="进程间通信"></a>进程间通信</h5><p>multiprocessing提供多种方法来交换数据：<code>Queue</code>，<code>Pipes</code>等。<br>代码示例:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">@Auther Kyle</span><br><span class="line">@Time 2018/6/19 14:56</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">from multiprocessing import Process, Queue</span><br><span class="line">import os, time, random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def write(q):</span><br><span class="line">    &quot;&quot;&quot;写数据进程执行&quot;&quot;&quot;</span><br><span class="line">    print(&quot;Process to write: &#123;0&#125;&quot;.format(os.getpid()))</span><br><span class="line">    for value in [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;]:</span><br><span class="line">        print(&quot;Put &#123;0&#125; to queue.&quot;.format(value))</span><br><span class="line">        q.put(value)</span><br><span class="line">        time.sleep(random.random())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def read(q):</span><br><span class="line">    &quot;&quot;&quot;读数据进程执行&quot;&quot;&quot;</span><br><span class="line">    print(&quot;Process to read: &#123;0&#125;&quot;.format(os.getpid()))</span><br><span class="line">    while True:</span><br><span class="line">        value = q.get(True)</span><br><span class="line">        print(&quot;Get &#123;0&#125; from queue.&quot;.format(value))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    # 父进程创建Queue，传给各个子进程</span><br><span class="line">    q = Queue()</span><br><span class="line">    pw = Process(target=write, args=(q,))</span><br><span class="line">    pr = Process(target=read, args=(q,))</span><br><span class="line">    # 启动子进程pw，写入</span><br><span class="line">    pw.start()</span><br><span class="line">    # 启动子进程pr，读取</span><br><span class="line">    pr.start()</span><br><span class="line">    # 等待写进程执行结束</span><br><span class="line">    pw.join()</span><br><span class="line">    # pr进程里是死循环，无法等待其结束，只能强行终止</span><br><span class="line">    pr.terminate()</span><br></pre></td></tr></table></figure></p><p>运行结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Process to read: 7616</span><br><span class="line">Process to write: 4948</span><br><span class="line">Put A to queue.</span><br><span class="line">Get A from queue.</span><br><span class="line">Put B to queue.</span><br><span class="line">Get B from queue.</span><br><span class="line">Put C to queue.</span><br><span class="line">Get C from queue.</span><br></pre></td></tr></table></figure></p><p>以上代码均来自于网络~</p><h3 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h3><p>协程，又称微线程，英文Coroutines，是一种比线程更加轻量级的存在。正如一个进程可以拥有多个线程一样，一个线程也可以拥有多个协程。（关于协程，真的不太懂，之后有空再研究，看到一句话:子程序就是协程的一种特例）多线程编程中，为了防止数据不同步，需要添加锁机制，但是协程应为就用了一个线程，在协程之间共享资源是不用加锁机制的，只需要判断状态。</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><blockquote><p><a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431927781401bb47ccf187b24c3b955157bb12c5882d000" target="_blank" rel="noopener">廖雪峰关于多进程教程</a><br><a href="http://www.cnblogs.com/huxi/archive/2010/06/26/1765808.html" target="_blank" rel="noopener">Python线程指南</a><br><a href="https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/0013868328689835ecd883d910145dfa8227b539725e5ed000" target="_blank" rel="noopener">廖雪峰-协程教程</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;程序员基础，性能测试需要知道的一些底层概念（一）&lt;/p&gt;
    
    </summary>
    
      <category term="计算机基础" scheme="http://tokyle.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="python3" scheme="http://tokyle.com/tags/python3/"/>
    
      <category term="进程" scheme="http://tokyle.com/tags/%E8%BF%9B%E7%A8%8B/"/>
    
      <category term="线程" scheme="http://tokyle.com/tags/%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Centos下切换MySQL数据到数据盘</title>
    <link href="http://tokyle.com/2018/06/12/Centos%E4%B8%8B%E5%88%87%E6%8D%A2MySQL%E6%95%B0%E6%8D%AE%E5%88%B0%E6%95%B0%E6%8D%AE%E7%9B%98/"/>
    <id>http://tokyle.com/2018/06/12/Centos下切换MySQL数据到数据盘/</id>
    <published>2018-06-12T06:47:31.000Z</published>
    <updated>2018-06-21T06:25:06.425Z</updated>
    
    <content type="html"><![CDATA[<p>centos 7对ECS进行挂载数据盘，并切换MySQL数据保存目录到数据盘<br><a id="more"></a></p><p>测试需要，申请了阿里云的ECS服务器，用来搭建MySQL，搭建时候没有注意，没想到运维大哥那么体贴的申请了数据盘，还是SSD的，这样也就需要把原来MySQL数据存储路径换到数据盘。</p><h3 id="操作数据盘"><a href="#操作数据盘" class="headerlink" title="操作数据盘"></a>操作数据盘</h3><p>首先查看当前服务器是否有数据盘：<code>fdisk -l</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Disk /dev/vda: 53.7 GB, 53687091200 bytes, 104857600 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0x0008d73a</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vda1   *        2048   104855551    52426752   83  Linux</span><br><span class="line"></span><br><span class="line">Disk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br></pre></td></tr></table></figure></p><p>可以看到当前服务上面有两个盘<code>/dev/vda</code>和<code>/dev/vdb</code>，其中<code>/dev/vda</code>是系统盘，并且已经有分区<code>/dev/vda1</code>，经常使用的查看磁盘的命令是<code>df -h</code>，但是有个问题，如果你的数据盘没有分区、挂载，使用<code>df -h</code>是不会显示的，只会展示这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/vda1        50G  3.1G   44G   7% /</span><br><span class="line">devtmpfs         16G     0   16G   0% /dev</span><br><span class="line">tmpfs            16G     0   16G   0% /dev/shm</span><br><span class="line">tmpfs            16G  520K   16G   1% /run</span><br><span class="line">tmpfs            16G     0   16G   0% /sys/fs/cgroup</span><br><span class="line">tmpfs           3.2G     0  3.2G   0% /run/user/0</span><br></pre></td></tr></table></figure></p><h4 id="数据盘分区"><a href="#数据盘分区" class="headerlink" title="数据盘分区"></a>数据盘分区</h4><p>查找到数据盘<code>/dev/vdb</code>之后，对它进行分区：<code>fdisk  /dev/vdb</code>，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table</span><br><span class="line">Building a new DOS disklabel with disk identifier 0x39e32289.</span><br></pre></td></tr></table></figure></p><p>接下来是有几个选项，选择适合的选项即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Command (m for help):   输入&apos;n&apos;，创建一个新分区</span><br><span class="line">Partition type:输入&apos;p&apos;，选择主分区</span><br><span class="line">Partition number (1-4, default 1):输入&apos;1&apos;，仅创建一个分区</span><br><span class="line">First sector (2048-209715199, default 2048): 我用的默认</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-209715199, default 209715199):  同样默认</span><br></pre></td></tr></table></figure></p><p>接下来<code>wq</code>保存退出即可。<br>然后这个时候<code>fdisk -l</code>，就能看见新的分区：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Disk /dev/vda: 53.7 GB, 53687091200 bytes, 104857600 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0x0008d73a</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vda1   *        2048   104855551    52426752   83  Linux</span><br><span class="line"></span><br><span class="line">Disk /dev/vdb: 107.4 GB, 107374182400 bytes, 209715200 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0x39e32289</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vdb1            2048   209715199   104856576   83  Linux</span><br></pre></td></tr></table></figure></p><h3 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h3><p>首先新建文件夹：<code>cd /home</code>、<code>mkdir mysql</code><br>挂载：<code>mount /dev/vdb1 /home/mysql</code><br>在新分区上创建文件系统：<code>mkfs.ext4 /dev/vdb1</code><br>备份<code>/etc/fstab</code>：<code>cp /etc/fstab /etc/fstab.bak</code><br>查找当前磁盘分区的UUID：<code>blkid</code><br>向 /etc/fstab 写入新分区信息:<code>vim /etc/fstab</code>，写入<code>UUID=ec7443b1-14e4-4174-ae8a-2194484a754b /home/mysql           ext4    defaults 0 0</code>(UUID是之前获得的)</p><h3 id="复制MySQL数据"><a href="#复制MySQL数据" class="headerlink" title="复制MySQL数据"></a>复制MySQL数据</h3><p>复制数据：<code>mv /var/lib/mysql/* /home/mysql</code><br>修改配置：<code>vim /etc/my.cnf</code>，修改数据文件到<code>/home/mysql</code><br>重启MySQL<br>OVER~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;centos 7对ECS进行挂载数据盘，并切换MySQL数据保存目录到数据盘&lt;br&gt;
    
    </summary>
    
      <category term="Devops" scheme="http://tokyle.com/categories/Devops/"/>
    
    
      <category term="mysql" scheme="http://tokyle.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>使用fiddler抓iphone包</title>
    <link href="http://tokyle.com/2018/06/07/%E4%BD%BF%E7%94%A8fiddler%E6%8A%93iphone%E5%8C%85/"/>
    <id>http://tokyle.com/2018/06/07/使用fiddler抓iphone包/</id>
    <published>2018-06-07T03:10:26.000Z</published>
    <updated>2018-06-21T06:25:12.568Z</updated>
    
    <content type="html"><![CDATA[<p>使用fiddler抓包iphone</p><a id="more"></a><p>亲测可用，系统及版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Fiddler: Telerik Fiddler Web Debugger (v2.6.3.48898)</span><br><span class="line">iphone 6s(ios 11.3.1)</span><br></pre></td></tr></table></figure></p><h3 id="Fiddler设置"><a href="#Fiddler设置" class="headerlink" title="Fiddler设置"></a>Fiddler设置</h3><p>首先，需要设置下fiddler，至于fiddler的下载安装就不说了。</p><h4 id="配置监听https"><a href="#配置监听https" class="headerlink" title="配置监听https"></a>配置监听https</h4><p>需要配置fiddler，使得允许监听<code>https</code>，因为fiddler默认是抓http格式的。<br>(再次声明，受不了七牛云之类的手持身份证实名认证的措施，由于之前工作做过征信相关，对这方面有点在乎，能少泄露一点就少一点。。。所以，基本blog中一直是无图片~)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tools ——&gt; （Telerik）Fiddler Options ——&gt; https</span><br></pre></td></tr></table></figure></p><p>勾选<code>Decrypt Https traffic</code>，此时系统会提示你是否要安装fiddler的证书之类的，安装一下即可~</p><h4 id="远程连接配置"><a href="#远程连接配置" class="headerlink" title="远程连接配置"></a>远程连接配置</h4><p>配置完https之后，需要设置允许远程连接，还是在<code>Tools ——&gt; （Telerik）Fiddler Options</code><br>选择<code>Connections</code>，监听端口使用默认的<code>8888</code>即可，勾选<code>Allow remote computers to connect</code>，此时会弹出一个warning，提示你会开启远程连接，并且需要重启fiddler才会生效，点击确定即可；</p><p><strong>重启fiddler</strong></p><h3 id="iphone设置"><a href="#iphone设置" class="headerlink" title="iphone设置"></a>iphone设置</h3><h4 id="获取PC端ip"><a href="#获取PC端ip" class="headerlink" title="获取PC端ip"></a>获取PC端ip</h4><p>这个就比较简单了，<code>cmd ——&gt; ipconfig</code>拿到ip即可，例如<code>192.168.100.10</code></p><h4 id="iphone安装证书"><a href="#iphone安装证书" class="headerlink" title="iphone安装证书"></a>iphone安装证书</h4><p>首先确保手机和PC处于同一网络（直接连接同一wifi最简单），然后在手机浏览器中输入上述步骤获取的ip和端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.10:8888</span><br></pre></td></tr></table></figure></p><p>页面会出现<code>Fiddler Echo Service</code>该页面，看到一条<code>You can download the FiddlerRoot certificate</code>，点击下载证书，然后信任安装证书即可（安装完的证书可以在iphone-设置-通用-描述文件中看到）（证书名字，我当时装的时候叫<strong>DO_NOT_TRUST_FiddlerRoot</strong>）</p><h4 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h4><p>安装完成证书，进入手机<code>设置-无限局域网</code>，选择连接的wifi，配置代理选择手动，输入服务器，端口，点击存储。<br>完成~</p><h3 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h3><p>手机浏览器访问页面，可以使用fiddler抓到包，看到请求和返回~以下抓到的示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx</span><br><span class="line">Date: Thu, 07 Jun 2018 03:07:22 GMT</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">X-Powered-By: PHP/7.1.5</span><br><span class="line">Set-Cookie: upv2=20180607%2C4; expires=Sat, 09-Jun-2018 03:07:22 GMT; Max-Age=172800; path=/</span><br><span class="line">Content-Length: 7346</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;古墓丽影：源起之战迅雷下载,百度网盘,高清迅雷下载 - 97电影网&lt;/title&gt;</span><br><span class="line">&lt;meta name=&quot;keywords&quot; content=&quot;古墓丽影：源起之战迅雷下载,古墓丽影：源起之战百度网盘资源,古墓丽影：源起之战高清迅雷下载 - 97电影网&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;description&quot; content=&quot;这里有电影《古墓丽影：源起之战》的百度网盘资源，还有《古墓丽影：源起之战》的迅雷下载链接,演员：艾丽西亚·维坎德,多米尼克·威斯特,沃尔顿·戈金斯,吴彦祖,克里斯汀·斯科特·托马斯,汉娜·乔恩-卡门,尼克·弗罗斯特,德里克·雅各比,安东尼奥·阿克儿,亚历山大·维尧姆,杰美·温斯顿,迈克尔·奥拜奥拉,艾米丽·凯里,肯尼思·霍&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot;icon&quot; href=&quot;http://www.id97.com/favicon.ico&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/css/amazeui.min.css&quot;&gt;</span><br><span class="line">    &lt;script src=&quot;http://libs.baidu.com/jquery/1.7.2/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;/static/js/amazeui.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; rev=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;all&quot; href=&quot;http://www.id97.com/static/mobile/mobile.css&quot;&gt;</span><br><span class="line">    &lt;!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries --&gt;</span><br><span class="line">    &lt;!-- WARNING: Respond.js doesn&apos;t work if you view the page via file:// --&gt;</span><br><span class="line">    &lt;!--[if lt IE 9]&gt;</span><br><span class="line">      &lt;script src=&quot;http://cdn.bootcss.com/html5shiv/3.7.2/html5shiv.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">      &lt;script src=&quot;http://cdn.bootcss.com/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;![endif]--&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;am-topbar-inverse&quot;&gt;</span><br><span class="line">    &lt;header class=&quot;am-container&quot;&gt;</span><br><span class="line">        &lt;h1 class=&quot;am-topbar-brand&quot;&gt;</span><br><span class="line">            &lt;a href=&quot;http://www.id97.com/&quot;&gt;97电影网&lt;/a&gt;</span><br><span class="line">        &lt;/h1&gt;</span><br><span class="line">        &lt;button class=&quot;am-topbar-btn am-topbar-toggle am-btn am-btn-sm am-btn-success am-show-sm-only&quot; data-am-collapse=&quot;&#123;target: &apos;#doc-topbar-collapse&apos;&#125;&quot;&gt;&lt;span class=&quot;am-sr-only&quot;&gt;97电影网&lt;/span&gt; &lt;span class=&quot;am-icon-bars&quot;&gt;&lt;/span&gt;&lt;/button&gt;</span><br><span class="line">        &lt;div class=&quot;am-collapse am-topbar-collapse&quot; id=&quot;doc-topbar-collapse&quot;&gt;</span><br><span class="line">        &lt;ul class=&quot;am-nav am-nav-pills am-topbar-nav&quot;&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;http://www.id97.com/&quot;&gt;首页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;http://www.id97.com/movie&quot;&gt;电影&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;div class=&quot;am-topbar-right&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;form action=&quot;/search&quot; method=&quot;GET&quot; class=&quot;am-topbar-form am-topbar-left am-form-inline&quot; role=&quot;search&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;am-form-group&quot;&gt;</span><br><span class="line">                &lt;input type=&quot;text&quot; class=&quot;am-form-field am-input-sm&quot; name=&quot;q&quot; placeholder=&quot;搜索&quot;&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;div class=&quot;am-dropdown&quot; data-am-dropdown=&quot;&#123;boundary: &apos;.am-topbar&apos;&#125;&quot;&gt;</span><br><span class="line">                &lt;button class=&quot;am-btn am-btn-secondary am-topbar-btn am-btn-sm am-dropdown-toggle&quot; data-am-dropdown-toggle&gt;登入/注册 &lt;span class=&quot;am-icon-caret-down&quot;&gt;&lt;/span&gt;&lt;/button&gt;</span><br><span class="line">                &lt;ul class=&quot;am-dropdown-content&quot;&gt;</span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;/signup&quot;&gt;注册&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;/signin&quot;&gt;登入&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line">&lt;/div&gt;&lt;div class=&quot;am-container&quot;&gt;</span><br><span class="line">    &lt;h3 class=&quot;am-article-title&quot;&gt;</span><br><span class="line">        古墓丽影：源起之战    &lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;am-g&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;am-u-sm-5&quot;&gt;&lt;img class=&quot;img-responsive&quot; width=&quot;100%&quot; src=&quot;http://img1.xmspc.com/uploads/movie-poster/8ltxwirll3g7.jpg&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;am-u-sm-7&quot; style=&quot;padding-left:0;font-size:14px;color:#666;&quot;&gt;</span><br><span class="line">&lt;strong&gt;主演：&lt;/strong&gt;艾丽西亚·维坎德 / 多米尼克·威斯特 / 沃尔顿·戈金斯 ...&lt;br/&gt;</span><br><span class="line">&lt;strong&gt;类型：&lt;/strong&gt;动作 / 冒险&lt;br/&gt;</span><br><span class="line">&lt;strong&gt;上映：&lt;/strong&gt;2018-03-16(美国/中国大陆)&lt;br/&gt;</span><br><span class="line">&lt;strong&gt;豆瓣：&lt;/strong&gt;6.3分&lt;br/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;am-u-sm-12&quot; style=&quot;padding-top:15px;font-size:14px;color:#666;&quot;&gt;&lt;strong&gt;简介：&lt;/strong&gt;劳拉（艾丽西亚·维坎德 Alicia Vikander 饰）的父亲一生都致力于研究古墓，在劳拉尚且年幼的时候，父亲在一场冒险之中失踪了。一晃眼多年过去，劳拉一直拒绝承认父亲已死的消息，也拒绝接手父亲手下的商业帝国。&lt;br /&gt;</span><br><span class="line">一次偶然中，劳拉发现了父亲遗留下的冒险笔记，父亲希望劳拉能把这些资料付之一炬，但为了寻找父亲的下落，劳拉决定寻找笔记中记载的岛屿。劳拉找到了名为陆仁（吴彦祖 饰）的男子，两人结伴踏上了旅途。刚一上岛，劳拉和陆仁就遇见了一直和父亲作对的马赛亚斯（沃特·戈金斯 Walton Goggins 饰）以及他的雇佣兵团队。马赛亚斯一心想要找到古墓的踪迹，不惜杀死了不肯透露半点消息的劳拉的父亲，如今，劳拉亦落入了他的魔爪之中，会遭遇怎样的命运呢？&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;h3 class=&quot;res-h3&quot;&gt;资源列表：&lt;/h3&gt;</span><br><span class="line">    &lt;ul class=&quot;am-list res-list&quot;&gt;</span><br><span class="line">&lt;li class=&quot;list-group-item&quot;&gt;&lt;/li&gt;&lt;li&gt;&lt;p class=&quot;text-break&quot; style=&quot;margin:0;&quot;&gt;&lt;a href=&quot;https://pan.baidu.com/s/14V_KvaJcMIzwY3Octe4WDQ&quot;&gt;古墓丽影：源起之战 - 百度云，网盘资源，密码：3xvh&lt;/a&gt;&lt;/p&gt;&lt;textarea style=&quot;width:100%;&quot;&gt;https://pan.baidu.com/s/14V_KvaJcMIzwY3Octe4WDQ&lt;/textarea&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;p class=&quot;text-break&quot; style=&quot;margin:0;&quot;&gt;&lt;a href=&quot;ed2k://|file|%E5%8F%A4%E5%A2%93%E4%B8%BD%E5%BD%B1.%E6%BA%90%E8%B5%B7%E4%B9%8B%E6%88%98.Tomb.Raider.2018.HD1080P.%E4%B8%AD%E8%8B%B1%E5%8F%8C%E5%AD%97.mp4|2207922795|225513B29378FAEC5871822A46DE2F8D|h=NEFWJ3E5TL6ALZV2O63HVU5GALU6IGBI|/&quot;&gt;古墓丽影.源起之战.Tomb.Raider.2018.HD1080P.中英双字.mp4&lt;/a&gt;&lt;/p&gt;&lt;textarea style=&quot;width:100%;&quot;&gt;ed2k://|file|%E5%8F%A4%E5%A2%93%E4%B8%BD%E5%BD%B1.%E6%BA%90%E8%B5%B7%E4%B9%8B%E6%88%98.Tomb.Raider.2018.HD1080P.%E4%B8%AD%E8%8B%B1%E5%8F%8C%E5%AD%97.mp4|2207922795|225513B29378FAEC5871822A46DE2F8D|h=NEFWJ3E5TL6ALZV2O63HVU5GALU6IGBI|/&lt;/textarea&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;p class=&quot;text-break&quot; style=&quot;margin:0;&quot;&gt;&lt;a href=&quot;ed2k://|file|%E5%8F%A4%E5%A2%93%E4%B8%BD%E5%BD%B1.%E6%BA%90%E8%B5%B7%E4%B9%8B%E6%88%98.Tomb.Raider.2018.HD720P.%E4%B8%AD%E8%8B%B1%E5%8F%8C%E5%AD%97.mkv|1574630029|9D61330E39013720310FD4FBE83807FB|h=35M7EUX7TERZMN4QCYGSWIGC7F5JS4ZV|/&quot;&gt;古墓丽影.源起之战.Tomb.Raider.2018.HD720P.中英双字.mkv&lt;/a&gt;&lt;/p&gt;&lt;textarea style=&quot;width:100%;&quot;&gt;ed2k://|file|%E5%8F%A4%E5%A2%93%E4%B8%BD%E5%BD%B1.%E6%BA%90%E8%B5%B7%E4%B9%8B%E6%88%98.Tomb.Raider.2018.HD720P.%E4%B8%AD%E8%8B%B1%E5%8F%8C%E5%AD%97.mkv|1574630029|9D61330E39013720310FD4FBE83807FB|h=35M7EUX7TERZMN4QCYGSWIGC7F5JS4ZV|/&lt;/textarea&gt;&lt;/a&gt;&lt;/li&gt;    &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;footer class=&quot;footer&quot;&gt;</span><br><span class="line">    &lt;p&gt;免责声明：本网站将逐步删除和规避程序自动搜索采集到的不提供分享的版权影视。本站仅供测试和学习交流。请大家支持正版。&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;唯一网址：&lt;a href=&quot;http://www.id97.com/&quot;&gt;97电影网&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">&lt;/footer&gt;&lt;script src=&quot;https://www.szshouzhai.com/kdksd/c-5270-22.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var _hmt = _hmt || [];</span><br><span class="line">(function() &#123;</span><br><span class="line">  var hm = document.createElement(&quot;script&quot;);</span><br><span class="line">  hm.src = &quot;https://hm.baidu.com/hm.js?a6cc69b245346a568ba6088ab53ff7ac&quot;;</span><br><span class="line">  var s = document.getElementsByTagName(&quot;script&quot;)[0];</span><br><span class="line">  s.parentNode.insertBefore(hm, s);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>OVER!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用fiddler抓包iphone&lt;/p&gt;
    
    </summary>
    
      <category term="just for fun" scheme="http://tokyle.com/categories/just-for-fun/"/>
    
    
      <category term="fiddler" scheme="http://tokyle.com/tags/fiddler/"/>
    
      <category term="iphone" scheme="http://tokyle.com/tags/iphone/"/>
    
  </entry>
  
  <entry>
    <title>python3.6安装basemap</title>
    <link href="http://tokyle.com/2018/06/01/python3-6%E5%AE%89%E8%A3%85basemap/"/>
    <id>http://tokyle.com/2018/06/01/python3-6安装basemap/</id>
    <published>2018-06-01T09:55:58.000Z</published>
    <updated>2018-06-01T09:58:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>python3.6安装basemap</p><p>很久没碰matplotlib了，想看看有没有中国地图加人口，这样绘制一张图，找白天，貌似<code>basemap</code>里面有，basemap需要：<code>from mpl_toolkits.basemap import Basemap</code>，然后就尝试安装<code>mpl_toolkits</code>，不出所料，失败了。。。</p><p>折腾半天，附上windows下python3.6安装basemap步骤：</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>首先，一个神奇的网站，经常逛：</p><blockquote><p><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="noopener">python包下载</a></p></blockquote><p>下载对应python版本的文件，cp36表示3.6版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">basemap‑1.1.0‑cp36‑cp36m‑win_amd64.whl </span><br><span class="line">pyproj‑1.9.5.1‑cp36‑cp36m‑win_amd64.whl</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>windows进入cmd模式，进入保存上述俩文件的路径，使用pip安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pyproj‑1.9.5.1‑cp36‑cp36m‑win_amd64.whl</span><br><span class="line">pip install basemap‑1.1.0‑cp36‑cp36m‑win_amd64.whl</span><br></pre></td></tr></table></figure></p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>打开简单的世界地图：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from mpl_toolkits.basemap import Basemap</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(16, 8))</span><br><span class="line">m = Basemap()</span><br><span class="line">m.drawcoastlines()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;python3.6安装basemap&lt;/p&gt;
&lt;p&gt;很久没碰matplotlib了，想看看有没有中国地图加人口，这样绘制一张图，找白天，貌似&lt;code&gt;basemap&lt;/code&gt;里面有，basemap需要：&lt;code&gt;from mpl_toolkits.basemap i
      
    
    </summary>
    
      <category term="python基础" scheme="http://tokyle.com/categories/python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="matplotlib" scheme="http://tokyle.com/tags/matplotlib/"/>
    
  </entry>
  
</feed>
