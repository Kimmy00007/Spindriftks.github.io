<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[python编码]]></title>
    <url>%2F2017%2F12%2F13%2Fpython%E7%BC%96%E7%A0%81%2F</url>
    <content type="text"><![CDATA[python日常踩坑系列（二） 日常编写python脚本，鉴于java各种坑编码经历，首先就会把pycharm编码设置成utf-8，但是不知道什么鬼，设置完成之后，编译还是会报编码gbk的错误 问题如下： “UnicodeDecodeError: ‘gbk’ codec can’t decode byte 0x80 in position 34: illegal multibyte sequence” 解决方案： 1，设置所有文件编码默认为utf-8（文件最前面指定） 2，处理数据时进行转码： with open(“population.json”,encoding=’UTF-8’) as data: –完 (#^.^#)]]></content>
      <categories>
        <category>coding</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django获取不到特定链接]]></title>
    <url>%2F2017%2F12%2F13%2FDjango%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0%E7%89%B9%E5%AE%9A%E9%93%BE%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[python日常踩坑系列 按照教程方式打开本地特定链接报错源码如下： from django.conf.urls import urlfrom . import views urlpatterns = [ # Home page. url(r&apos;^$&apos;, views.index, name=&apos;index&apos;), # Show all topics. url(r&apos;^topics/$&apos;, views.topics, name=&apos;topics&apos;), # Detail page for a single topic. url(r&apos;^topics/(?P&lt;topic_id&gt;\d+)/$&apos;, views.topic, name=&apos;topic&apos;), ] 打开http://127.0.0.1:8000/topics/1/报错：Using the URLconf defined in learning_log.urls, Django tried these URL patterns, in this order: admin/ [name=’index’] topics [name=’topics’] topics/?P\d+/ [name=’topic’]The current path, topics/1/, didn’t match any of these. 原因：Django2.0有更新对于django.urls.path()函数，允许有简单的表示方法： url(r’^articles/(?P[0-9]{4})/$’, views.year_archive), 可以写成： path(‘articles//‘, views.year_archive), 所以代码可更改为：from django.urls import pathfrom . import views app_name = ‘lerning_logs’urlpatterns = [ #主页 path(&apos;&apos;, views.index, name=&apos;index&apos;), #显示所有主题 path(&apos;topics&apos;, views.topics, name=&apos;topics&apos;), #特定主题的详细页面 #path(&apos;topics/?P&lt;topic_id&gt;\d+/&apos;, views.topic, name=&apos;topic&apos;), path(&apos;topics/&lt;topic_id&gt;/&apos;, views.topic, name=&apos;topic&apos;), ]]]></content>
      <tags>
        <tag>python</tag>
        <tag>Django</tag>
      </tags>
  </entry>
</search>
